{"version":3,"names":["_uuid","_interopRequireDefault","require","_webexCore","_internalMediaCore","_webexErrors","_statsAnalyzer","_networkQualityMonitor","_loggerProxy","_triggerProxy","_index","_media","_properties","_state","_muteState","_effectsState","_locusInfo","_peerConnectionManager","_metrics","_config","_reconnectionManager","_request","_index2","_util","_util2","_util3","_util4","_transcription","_passwordError","_captchaError","_reconnection","_reconnectionInProgress","_constants","_constants2","_parameter","_media2","_meetingInfoV","_browserDetection","_collection","_reactions","_inMeetingActions","_recordingController","_controlsOptionsManager","ownKeys","object","enumerableOnly","keys","_Object$keys2","_Object$getOwnPropertySymbols","symbols","filter","sym","_Object$getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","Object","forEach","key","_defineProperty3","default","_Object$getOwnPropertyDescriptors","_Object$defineProperties","_Object$defineProperty2","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","_Reflect$construct","_possibleConstructorReturn2","Reflect","sham","Proxy","Boolean","prototype","valueOf","call","e","_BrowserDetection","BrowserDetection","isBrowser","logRequest","request","_ref","_ref$header","header","_ref$success","success","_ref$failure","failure","LoggerProxy","logger","info","then","arg","catch","error","MEDIA_UPDATE_TYPE","ALL","AUDIO","VIDEO","SHARE","exports","Meeting","_StatelessWebexPlugin","_inherits2","_super","attrs","options","_this$locusInfo","_this$locusInfo$links","_this$locusInfo$links2","_this$locusInfo$links3","_this$locusInfo2","_this$locusInfo2$full","_this$locusInfo3","_this$locusInfo4","_this","_classCallCheck2","_assertThisInitialized2","MEETINGS","mediaDirection","audioVideo","undefined","VIDEO_RESOLUTIONS","mediaProperties","localQualityLevel","sharePreferences","sendAudio","sendVideo","sendShare","warn","_isString2","_keys","includes","setLocalQualityLevel","video","ParameterError","concat","_ref2","deviceId","preferredVideoDevice","lastVideoDeviceId","getVideoDeviceId","setVideoDeviceId","Media","getSupportedDevice","_promise","reject","MediaError","devicePermissions","getUserMedia","isSharing","shareStatus","SHARE_STATUS","LOCAL_SHARE_ACTIVE","config","_this$locusUrl","metricName","BEHAVIORAL_METRICS","GET_USER_MEDIA_FAILURE","data","correlation_id","correlationId","locus_id","locusUrl","split","pop","reason","message","stack","metadata","type","name","Metrics","sendBehavioralMetric","_ref3","_ref3$sendAudio","_ref3$sendVideo","getDevices","statsAnalyzer","on","StatsAnalyzerEvents","MEDIA_QUALITY","_this$webex$meetings$","intervalMetadata","peerReflexiveIP","webex","meetings","geoHintInfo","clientAddress","MQA_STATS","DEFAULT_IP","postEvent","event","eventType","meeting","intervalData","networkType","LOCAL_MEDIA_STARTED","Trigger","trigger","file","function","EVENT_TRIGGERS","MEETING_MEDIA_LOCAL_STARTED","SENDING_MEDIA_START","mediaType","LOCAL_MEDIA_STOPPED","SENDING_MEDIA_STOP","REMOTE_MEDIA_STARTED","MEETING_MEDIA_REMOTE_STARTED","RECEIVING_MEDIA_START","REMOTE_MEDIA_STOPPED","RECEIVING_MEDIA_STOP","experimental","enableMediaNegotiatedEvent","MEDIA_NEGOTIATED","canUpdateMedia","queuedMediaUpdates","_this$queuedMediaUpda","shift","pendingPromiseResolve","pendingPromiseReject","mediaUpdateType","log","updateMedia","updateAudio","updateVideo","updateShare","audio","NO_SHARE","transcription","closeSocket","triggerStopReceivingTranscriptionEvent","_this$joinedWith","_this$joinedWith2","keepAliveTimerId","joinedWith","keepAliveUrl","keepAliveSecs","keepAliveInterval","setInterval","meetingRequest","keepAlive","stopKeepAlive","clearInterval","id","uuid","v4","userId","orgId","resource","deviceUrl","roapSeq","ROAP_SEQ_PRE","meetingInfo","members","Members","locus","url","parent","roap","Roap","reconnectionManager","ReconnectionManager","effects","meetingFiniteStateMachine","MeetingStateMachine","create","conversationUrl","sipUri","destination","destinationType","partner","owner","hostId","policy","MeetingRequest","mediaConnections","fetchMeetingInfoTimeoutId","updateMediaConnections","_isEqual2","slice","MediaProperties","inMeetingActions","InMeetingActions","_defineProperty2","get","_shareTransceiver$sen","_shareTransceiver$sen2","shareTransceiver","peerConnection","shareDirection","direction","trackReadyState","sender","track","readyState","activeShare","LIVE","offersToSendData","SENDRECV","configurable","callEvents","floorGrantPending","dialInDeviceStatus","PSTN_STATUS","UNKNOWN","dialInUrl","dialOutDeviceStatus","dialOutUrl","networkQualityMonitor","networkStatus","locusInfo","LocusInfo","updateMeetingObject","bind","recording","deferJoin","hasWebsocketConnected","internal","mercury","connected","lastVideoLayoutInfo","layoutType","main","content","passwordStatus","PASSWORD_STATUS","requiredCaptcha","meetingInfoFailureReason","recordingController","RecordingController","serviceUrl","links","services","record","sessionId","fullState","displayHints","controlsOptionsManager","ControlsOptionsManager","setUpLocusInfoListeners","init","hasJoinedOnce","_createClass2","value","_fetchMeetingInfo","_asyncToGenerator2","_regenerator","mark","_callee","_ref4","_ref4$password","password","_ref4$captchaCode","captchaCode","captchaInfo","_err$body","_err$body2","wrap","_callee$","_context","prev","next","clearTimeout","abrupt","Error","REQUIRED","code","captchaId","meetingInfoProvider","fetchMeetingInfo","sent","parseMeetingInfo","body","MEETING_INFO_FAILURE_REASON","NONE","VERIFIED","NOT_REQUIRED","MEETING_INFO_AVAILABLE","resolve","t0","MeetingInfoV2PasswordError","meetingNumber","WRONG_PASSWORD","refreshCaptcha","PasswordError","MeetingInfoV2CaptchaError","WRONG_CAPTCHA","isPasswordRequired","CaptchaError","OTHER","stop","_x","verifyPassword","_this2","VERIFY_PASSWORD_SUCCESS","isPasswordValid","failureReason","_this3","_URL","URL","refreshURL","hostname","captchaRefreshUrl","response","captchaID","verificationImageURL","verificationAudioURL","setUpLocusInfoSelfListener","setUpLocusInfoMeetingListener","setUpLocusServicesListener","setUpLocusFullStateListener","setUpLocusUrlListener","setUpLocusHostListener","setUpLocusSelfListener","setUpLocusParticipantsListener","setupLocusControlsListener","setUpLocusMediaSharesListener","setUpLocusEmbeddedAppsListener","setUpLocusInfoMeetingInfoListener","setUpLocusInfoAssignHostListener","setUpLocusInfoMediaInactiveListener","_this4","EVENTS","DISCONNECT_DUE_TO_INACTIVITY","res","locusId","REQUEST_UPLOAD_LOGS","reconnection","autoRejoin","reconnect","MEETING_SELF_LEFT","_this5","LOCUS_INFO_CAN_ASSIGN_HOST","payload","changed","set","canAssignHost","MEETING_ACTIONS_UPDATE","_this6","LOCUSINFO","FULL_STATE_MEETING_STATE_CHANGE","MEETING_STATE_CHANGE","FULL_STATE_TYPE_UPDATE","locusFullStateTypeUpdate","getAnalyzerMetricsPrePayload","trackingId","identifiers","locusStartTime","lastActive","mediaAgentAlias","mediaAgentGroupId","mediaAgentCluster","_this$mediaConnection","_this$mediaConnection2","_this$mediaConnection3","joinRespRxStartAudio","getSetupDelayDuration","audioSetupDelay","joinRespRxStart","joinRespRxStartVideo","videoSetupDelay","joinRespTxStartAudio","getSendingMediaDelayDuration","joinRespTxStart","joinRespTxStartVideo","localSDPGenRemoteSDPRecv","getLocalSDPGenRemoteSDPRecvDelay","joinTimes","callInitiateJoinReq","getCallInitiateJoinReq","joinReqResp","getJoinReqResp","getTotalJmt","CA_TYPE","initMediaPayload","initPayload","sendCallAnalyzerMetrics","_pick2","metrics","submitCallDiagnosticEvents","sendMediaQualityAnalyzerMetrics","setNetworkStatus","NETWORK_STATUS","DISCONNECTED","MEETINGS_NETWORK_DISCONNECTED","CONNECTED","MEETINGS_NETWORK_CONNECTED","_this7","LOCUS_INFO_UPDATE_SELF","locusSelfUpdate","pstnUpdate","newSelf","state","MEETING_STATE","STATES","JOINED","requestScreenShareFloor","_this8","self","_payload$newSelf","_payload$newSelf2","dialInPstnDevice","pstnDevices","find","device","dialOutPstnDevice","_dialInPstnDevice$dia","newStatus","dialingStatus","_dialOutPstnDevice$di","MEETING_SELF_PHONE_AUDIO_UPDATE","dialIn","status","attendeeId","dialOut","_this9","LOCUS_INFO_UPDATE_HOST","locusHostUpdate","_this10","LOCUS_INFO_UPDATE_PARTICIPANTS","locusParticipantsUpdate","_this11","CONTROLS_RECORDING_UPDATED","_ref5","modifiedBy","lastModified","RECORDING_STATE","RECORDING","MEETING_STARTED_RECORDING","IDLE","MEETING_STOPPED_RECORDING","PAUSED","MEETING_PAUSED_RECORDING","RESUMED","MEETING_RESUMED_RECORDING","CONTROLS_MEETING_CONTAINER_UPDATED","_ref6","meetingContainerUrl","MEETING_MEETING_CONTAINER_UPDATE","CONTROLS_MEETING_TRANSCRIBE_UPDATED","_ref7","caption","transcribing","receiveTranscription","MEETING_STOPPED_RECEIVING_TRANSCRIPTION","CONTROLS_ENTRY_EXIT_TONE_UPDATED","_ref8","entryExitTone","MEETING_ENTRY_EXIT_TONE_UPDATE","_this12","LOCUS_INFO_UPDATE_MEDIA_SHARES","_payload$previous","_payload$previous2","_payload$current","current","contentShare","whiteboardShare","whiteboard","previousContentShare","previous","previousWhiteboardShare","beneficiaryId","disposition","resourceUrl","newShareStatus","selfId","FLOOR_ACTION","GRANTED","REMOTE_SHARE_ACTIVE","_this12$mediaProperti","shareTrack","stopShare","skipSignalingCheck","WHITEBOARD_SHARE_ACTIVE","RELEASED","oldShareStatus","MEETING_STOPPED_SHARING_REMOTE","MEETING_STOPPED_SHARING_LOCAL","SHARE_STOPPED_REASON","SELF_STOPPED","MEETING_STOPPED_SHARING_WHITEBOARD","_this12$mediaProperti2","sendStartedSharingRemote","MEETING_STARTED_SHARING_REMOTE","memberId","receiveShare","finally","MEETING_STARTED_SHARING_LOCAL","LOCAL_SHARE_FLOOR_GRANTED","MEETING_STARTED_SHARING_WHITEBOARD","WHITEBOARD_SHARE_FLOOR_GRANTED","locusMediaSharesUpdate","_this13","LOCUS_INFO_UPDATE_URL","_this13$locusUrl","locusUrlUpdate","setLocusUrl","_this14","LINKS_SERVICES","_payload$services","_payload$services$rec","_this14$locusInfo","_this14$locusInfo$ful","setServiceUrl","setSessionId","_this15","MEETING_LOCKED","MEETING_UNLOCKED","MEETING_INFO_UPDATED","canInviteNewParticipants","MeetingUtil","userDisplayHints","canAdmitParticipant","canLock","canUserLock","canUnlock","canUserUnlock","canSetDisallowUnmute","ControlsOptionsUtil","canUnsetDisallowUnmute","canSetMuteOnEntry","canUnsetMuteOnEntry","canStartRecording","RecordingUtil","canUserStart","canStopRecording","canUserStop","canPauseRecording","canUserPause","canResumeRecording","canUserResume","canRaiseHand","canUserRaiseHand","canLowerAllHands","canUserLowerAllHands","canLowerSomeoneElsesHand","canUserLowerSomeoneElsesHand","bothLeaveAndEndMeetingAvailable","canEnableClosedCaption","canStartTranscribing","canStopTranscribing","isClosedCaptionActive","isWebexAssistantActive","canViewCaptionPanel","isRealTimeTranslationEnabled","canSelectSpokenLanguages","waitingForOthersToJoin","setDisplayHints","_this16","EMBEDDED_APPS_UPDATED","embeddedApps","MEETING_EMBEDDED_APPS_UPDATE","_this17","LOCAL_UNMUTE_REQUIRED","handleServerLocalUnmuteRequired","MEETING_SELF_UNMUTED_BY_OTHERS","SELF_REMOTE_MUTE_STATUS_UPDATED","_this17$audio","handleServerRemoteMuteUpdate","muted","unmuteAllowed","isMuted","MEETING_SELF_MUTED_BY_OTHERS","LOCAL_UNMUTE_REQUESTED","MEETING_SELF_REQUESTED_TO_UNMUTE","SELF_UNADMITTED_GUEST","startKeepAlive","MEETING_SELF_LOBBY_WAITING","LOBBY_ENTERED","SELF_ADMITTED_GUEST","MEETING_SELF_GUEST_ADMITTED","LOBBY_EXITED","MEDIA_INACTIVITY","MEETING_MEDIA_INACTIVE","MEDIA_STATUS_CHANGE","_this17$mediaProperti","_this17$audio2","_this17$mediaProperti2","_this17$video","_this17$mediaProperti3","_this17$mediaProperti4","_this17$mediaProperti5","_this17$mediaProperti6","updateMediaStatus","actual","expected","receiveAudio","receiveVideo","SELF_CANNOT_VIEW_PARTICIPANT_LIST_CHANGE","MEETING_SELF_CANNOT_VIEW_PARTICIPANT_LIST","SELF_IS_SHARING_BLOCKED_CHANGE","MEETING_SELF_IS_SHARING_BLOCKED","_this18","REMOTE_RESPONSE","remote","remoteDeclined","leave","DESTROY_MEETING","wirelessShare","onended","shouldLeave","cleanUp","meetingId","_this19","invite","invitee","alertIfActive","addMember","cancelPhoneInvite","admit","memberIds","admitMembers","remove","removeMember","mute","muteMember","transfer","moderator","transferHostToMember","getMembers","isAudioConnected","isAudioMuted","isAudioSelf","isSelf","isVideoConnected","isVideoMuted","isVideoSelf","webexMeetingInfo","locusMeetingObject","_typeof2","errors","_locusMeetingObject","_locusMeetingObject2","_locusMeetingObject3","_locusMeetingObject4","_locusMeetingObject6","setSipUri","enableUnifiedMeetings","sipUrl","sipMeetingUri","_locusMeetingObject5","webExMeetingId","meetingJoinUrl","permissionToken","parseLocus","setLocus","participants","getLocusPartner","_CALL_","person","setRoapSeq","seq","mtgLocus","mediaId","host","initialSetup","setRemoteStream","pc","_this20","ontrack","MEDIA_ID","AUDIO_TRACK","VIDEO_TRACK","SHARE_TRACK","mediaTrack","trackMediaID","transceiver","mid","_event$target","audioTransceiver","videoTransceiver","receiver","MUTE_AUDIO_FAILURE","EVENT_TYPES","REMOTE_AUDIO","setRemoteAudioTrack","REMOTE_VIDEO","setRemoteVideoTrack","REMOTE_SHARE","setRemoteShare","startAnalyzer","MEDIA_READY","stream","MediaUtil","createMediaStream","uploadLogs","unsetRemoteStream","unsetRemoteMedia","unsetRemoteTracks","closeRemoteStream","closeRemoteTracks","_this21","_this$mediaProperties","remoteAudioTrack","remoteVideoTrack","remoteShare","triggerMediaStoppedEvent","MEDIA_STOPPED","stopTrack","stopTracks","isTrackStopped","ENDED","isWrongReadyState","all","sendLocalMediaReadyEvent","LOCAL","audioTrack","videoTrack","setLocalAudioTrack","emitEvent","settings","getSettings","setMediaSettings","echoCancellation","noiseSuppression","_stringify","mediaSettings","applyClientStateLocally","setLocalVideoTrack","_videoTrack$getSettin","aspectRatio","frameRate","height","width","Number","setLocalTracks","localStream","_MeetingUtil$getTrack","getTrack","setLocalShareTrack","localShare","_this22","contentTracks","displaySurface","cursor","screen","handleShareTrackEnded","LOCAL_SHARE","closeLocalStream","_this23","_this$mediaProperties2","audioStopped","videoStopped","closeLocalShare","_this24","unsetLocalVideoTrack","unsetLocalShareTrack","setMercuryListener","_this25","ONLINE","MERCURY_CONNECTION_RESTORED","OFFLINE","MERCURY_CONNECTION_LOST","MERCURY_CONNECTION_FAILURE","closePeerConnections","PeerConnectionManager","close","unsetPeerConnections","unsetPeerConnection","detection","off","setCorrelationId","muteAudio","_this26","isUserInJoinedState","UserNotJoinedError","NoMediaEstablishedYetError","LOG_HEADER","handleClientRequest","handleAudioLogging","MUTED","USER_INTERACTION","unmuteAudio","_this27","UNMUTED","UNMUTE_AUDIO_FAILURE","muteVideo","_this28","handleVideoLogging","MUTE_VIDEO_FAILURE","unmuteVideo","_this29","UNMUTE_VIDEO_FAILURE","joinWithMedia","_this30","joinOptions","audioVideoOptions","join","joinResponse","getMediaStreams","_ref9","_ref10","_slicedToArray2","addMedia","mediaResponse","media","local","JOIN_WITH_MEDIA_FAILURE","_this31","isMediaEstablished","currentMediaStatus","validate","ReconnectInProgress","MEETING_RECONNECTION_STARTING","MEETING_RECONNECTION_SUCCESS","MEETING_RECONNECTION_FAILURE","ReconnectionError","MEETING_RECONNECT_FAILURE","reset","isTranscriptionSupported","_this$locusInfo$contr","controls","transcribe","monitorTranscriptionSocketConnection","_this32","onCloseSocket","onErrorSocket","RECEIVE_TRANSCRIPTION_FAILURE","_receiveTranscription","_callee2","_this33","datachannelUrl","_yield$this$request","webSocketUrl","_callee2$","_context2","method","HTTP_VERBS","POST","uri","Transcription","subscribe","MEETING_STARTED_RECEIVING_TRANSCRIPTION","connect","credentials","supertoken","access_token","stopReceivingTranscription","_this34","registered","errorMessage","joinFailed","joinSuccess","rejoin","CALL_INITIATED","isRoapCallEnabled","MEETING_STATE_MACHINE","RINGING","ring","_JOIN_","resourceId","meetingQuality","QUALITY_LEVELS","setRemoteQualityLevel","joinMeetingOptions","JOIN_SUCCESS","_ref11","_callee3","_callee3$","_context3","_x2","_error$error","fail","LOCUS_JOIN_RESPONSE","parseLocusError","JOIN_FAILURE","usePhoneAudio","phoneNumber","dialInPstn","dialOutPstn","isPhoneProvisioned","pstnStatus","SUCCESS","_this35","clientUrl","onFullLocus","_error$error2","ADD_DIAL_IN_FAILURE","dial_in_url","client_url","_this36","_error$error3","ADD_DIAL_OUT_FAILURE","dial_out_url","disconnectPhoneAudio","moveTo","_this37","MEDIA_CAPABILITIES","mediaCapabilities","rx","share","share_audio","tx","MOVE_MEDIA","once","SELF_OBSERVING","_callee4","_callee4$","_context4","releaseScreenShareFloor","setMediaDirection","unsetMediaTracks","reconnectMedia","MOVE_TO_SUCCESS","MOVE_TO_FAILURE","moveToResource","moveFrom","_this38","oldCorrelationId","leaveMeeting","moveMeeting","MOVE_FROM_SUCCESS","MOVE_FROM_FAILURE","_this39","turnDiscoverySkippedReason","turnServerUsed","meetingState","FULL_STATE","ACTIVE","MeetingNotActiveError","isUserInLeftState","isUserUnadmitted","UserInLobbyError","validateOptions","doTurnDiscovery","turnDiscoveryObject","turnServerInfo","setMediaPeerConnection","createPeerConnection","setPeerConnectionEvents","preMedia","attachMedia","remoteQualityLevel","enableRtx","enableExtmap","setStartLocalSDPGenRemoteSDPRecvDelay","devices","handleDeviceLogging","handleMediaLogging","stats","enableStatsAnalyzer","NetworkQualityMonitor","StatsAnalyzer","setupStatsAnalyzerEventHandlers","NETWORK_QUALITY","sendNetworkQualityEvent","timerCount","joiningTimer","sendRoapMediaRequest","sdp","waitForIceConnectedState","createMeetingsError","getCurrentConnectionType","connectionType","ADD_MEDIA_SUCCESS","stopStatsAnalyzer","stopAnalyzer","ADD_MEDIA_FAILURE","InvalidSdpError","CODE","MEETING_REMOVED_REASON","MEETING_CONNECTION_FAILED","signalingState","SDP","STABLE","RoapCollection","isBusy","enqueueMediaUpdate","_this40","queueItem","_this41","previousSendShareStatus","setContentSlides","UPDATE_MEDIA_FAILURE","checkForStopShare","startShare","_updateAudio","_callee5","_this42","bnrEnabled","_callee5$","_context5","bnr","enabled","BNR_STATUS","ENABLED","SHOULD_ENABLE","internal_enableBNR","previousMediaDirection","sendTrack","receiveTrack","updateTransceiver","createMuteState","_x3","_this43","previousShareStatus","_this44","delay","sharingModeIsActive","isSharingOutOfSync","isLocalShareLive","setTimeout","_assign","acknowledge","_this45","_INCOMING_","acknowledgeMeeting","ALERT_DISPLAYED","decline","_this46","declineMeeting","_this47","LEAVE","canProceed","leaveReason","CLIENT_LEAVE_REQUEST","clearMeetingData","guest","MEETING_LEAVE_FAILURE","startWhiteboardShare","channelUrl","resourceToken","_this48","mediaShares","element","WHITEBOARD_SHARE_INITIATED","personUrl","changeMeetingFloor","MEETING_START_WHITEBOARD_SHARE_FAILURE","board","stopWhiteboardShare","_this49","WHITEBOARD_SHARE_STOPPED","STOP_WHITEBOARD_SHARE_FAILURE","_this50","CONTENT","SHARE_INITIATED","MEETING_SHARE_FAILURE","_this51","SHARE_STOPPED","floor","beneficiary","STOP_FLOOR_REQUEST_FAILURE","startRecording","setMuteOnEntry","setDisallowUnmute","stopRecording","pauseRecording","resumeRecording","lockMeeting","unlockMeeting","rejectWithErrorLog","sendDTMF","tones","enableDTMF","changeVideoLayout","_this52","renderInfo","_this$mediaProperties3","layoutInfo","_cloneDeep2","LAYOUT_TYPES","mainWidth","Math","round","mainHeight","abs","contentWidth","contentHeight","CONTROLS_MEETING_LAYOUT_UPDATED","envelope","MEETING_CONTROLS_LAYOUT_UPDATE","layout","changeVideoLayoutDebounced","setLocalVideoQuality","level","_this53","_ref14","_callee6","_ref13","_ref15","_callee6$","_context6","_x4","setMeetingQuality","_this54","previousLevel","_this$mediaProperties4","SET_MEETING_QUALITY_FAILURE","shareScreen","_this55","shareConstraints","getDisplayMedia","shareStream","GET_DISPLAY_MEDIA_FAILURE","USER_ENDED_SHARE_STREAMS","networkQualityScore","_ref16","setStartSetupDelay","typeMedia","performance","now","setEndSetupDelay","start","end","setStartSendingMediaDelay","setEndSendingMediaDelay","startLocalSDPGenRemoteSDPRecvDelay","endLocalSDPGenRemoteSDPRecvDelay","setEndLocalSDPGenRemoteSDPRecvDelay","calculatedDelay","METRICS_JOIN_TIMES_MAX_DURATION","setStartCallInitiateJoinReq","startCallInitiateJoinReq","endCallInitiateJoinReq","setEndCallInitiateJoinReq","setStartJoinReqResp","startJoinReqResp","endJoinReqResp","setEndJoinReqResp","endMeetingForAll","_this56","MEETING_END_ALL_INITIATED","MEETING_END_ALL_FAILURE","isBnrEnabled","_internal_enableBNR","_callee7","bnrAudioTrack","_callee7$","_context7","WebRTCMedia","Effects","BNR","enableBNR","_x5","createEffectsState","disableBNR","sendReaction","reactionType","skinToneType","_this$locusInfo5","_this$locusInfo5$cont","_this$locusInfo5$cont2","reactionChannelUrl","reactions","participantId","reactionData","Reactions","skinToneData","SkinTones","normal","reaction","tone","StatelessWebexPlugin"],"sources":["index.ts"],"sourcesContent":["import uuid from 'uuid';\nimport {cloneDeep, isEqual, pick, isString} from 'lodash';\n// @ts-ignore - Fix this\nimport {StatelessWebexPlugin} from '@webex/webex-core';\nimport {Media as WebRTCMedia} from '@webex/internal-media-core';\n\nimport {\n  MeetingNotActiveError,\n  createMeetingsError,\n  UserInLobbyError,\n  NoMediaEstablishedYetError,\n  UserNotJoinedError,\n  InvalidSdpError,\n} from '../common/errors/webex-errors';\nimport {StatsAnalyzer, EVENTS as StatsAnalyzerEvents} from '../statsAnalyzer';\nimport NetworkQualityMonitor from '../networkQualityMonitor';\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport Trigger from '../common/events/trigger-proxy';\nimport Roap from '../roap/index';\nimport Media from '../media';\nimport MediaProperties from '../media/properties';\nimport MeetingStateMachine from './state';\nimport createMuteState from './muteState';\nimport createEffectsState from './effectsState';\nimport LocusInfo from '../locus-info';\nimport PeerConnectionManager from '../peer-connection-manager';\nimport Metrics from '../metrics';\nimport {trigger, mediaType, eventType} from '../metrics/config';\nimport ReconnectionManager from '../reconnection-manager';\nimport MeetingRequest from './request';\nimport Members from '../members/index';\nimport MeetingUtil from './util';\nimport RecordingUtil from '../recording-controller/util';\nimport ControlsOptionsUtil from '../controls-options-manager/util';\nimport MediaUtil from '../media/util';\nimport Transcription from '../transcription';\nimport PasswordError from '../common/errors/password-error';\nimport CaptchaError from '../common/errors/captcha-error';\nimport ReconnectionError from '../common/errors/reconnection';\nimport ReconnectInProgress from '../common/errors/reconnection-in-progress';\nimport {\n  _CALL_,\n  _INCOMING_,\n  _JOIN_,\n  AUDIO,\n  CONTENT,\n  ENDED,\n  EVENT_TRIGGERS,\n  EVENT_TYPES,\n  EVENTS,\n  FLOOR_ACTION,\n  FULL_STATE,\n  LAYOUT_TYPES,\n  LIVE,\n  LOCUSINFO,\n  MEETING_INFO_FAILURE_REASON,\n  MEETING_REMOVED_REASON,\n  MEETING_STATE_MACHINE,\n  MEETING_STATE,\n  MEETINGS,\n  METRICS_JOIN_TIMES_MAX_DURATION,\n  MQA_STATS,\n  NETWORK_STATUS,\n  ONLINE,\n  OFFLINE,\n  PASSWORD_STATUS,\n  PSTN_STATUS,\n  QUALITY_LEVELS,\n  RECORDING_STATE,\n  ROAP_SEQ_PRE,\n  SDP,\n  SENDRECV,\n  SHARE_STATUS,\n  SHARE_STOPPED_REASON,\n  VIDEO_RESOLUTIONS,\n  VIDEO,\n  BNR_STATUS,\n  HTTP_VERBS,\n} from '../constants';\nimport BEHAVIORAL_METRICS from '../metrics/constants';\nimport ParameterError from '../common/errors/parameter';\nimport MediaError from '../common/errors/media';\nimport {\n  MeetingInfoV2PasswordError,\n  MeetingInfoV2CaptchaError,\n} from '../meeting-info/meeting-info-v2';\nimport BrowserDetection from '../common/browser-detection';\nimport RoapCollection from '../roap/collection';\nimport {SkinTones, Reactions} from '../reactions/reactions';\nimport {Reaction, ReactionType, SkinToneType} from '../reactions/reactions.type';\n\nimport InMeetingActions from './in-meeting-actions';\nimport RecordingController from '../recording-controller';\nimport ControlsOptionsManager from '../controls-options-manager';\n\nconst {isBrowser} = BrowserDetection();\n\nconst logRequest = (request: any, {header = '', success = '', failure = ''}) => {\n  LoggerProxy.logger.info(header);\n\n  return request\n    .then((arg) => {\n      LoggerProxy.logger.info(success);\n\n      return arg;\n    })\n    .catch((error) => {\n      LoggerProxy.logger.error(failure, error);\n      throw error;\n    });\n};\n\nexport const MEDIA_UPDATE_TYPE = {\n  ALL: 'ALL',\n  AUDIO: 'AUDIO',\n  VIDEO: 'VIDEO',\n  SHARE: 'SHARE',\n};\n\n/**\n * MediaDirection\n * @typedef {Object} MediaDirection\n * @property {boolean} sendAudio\n * @property {boolean} receiveAudio\n * @property {boolean} sendVideo\n * @property {boolean} receiveVideo\n * @property {boolean} sendShare\n * @property {boolean} receiveShare\n * @property {boolean} isSharing\n */\n\n/**\n * AudioVideo\n * @typedef {Object} AudioVideo\n * @property {Object} audio\n * @property {String} audio.deviceId\n * @property {Object} video\n * @property {String} video.deviceId\n * @property {String} video.localVideoQuality // [240p, 360p, 480p, 720p, 1080p]\n */\n\n/**\n * SharePreferences\n * @typedef {Object} SharePreferences\n * @property {Object} [shareConstraints]\n * @property {Boolean} [highFrameRate]\n */\n\n/**\n * JoinOptions\n * @typedef {Object} JoinOptions\n * @property {String} [resourceId]\n * @property {String} [pin]\n * @property {Boolean} [moderator]\n * @property {String|Object} [meetingQuality]\n * @property {String} [meetingQuality.local]\n * @property {String} [meetingQuality.remote]\n * @property {Boolean} [rejoin]\n */\n\n/**\n * SendOptions\n * @typedef {Object} SendOptions\n * @property {Boolean} sendAudio\n * @property {Boolean} sendVideo\n * @property {Boolean} sendShare\n */\n\n/**\n * Recording\n * @typedef {Object} Recording\n * @property {Object} state\n * @property {String} modifiedBy\n */\n\n/**\n * Meeting State Change Event\n * Emitted when ever there is a meeting state change\n * @event meeting:stateChange\n * @instance\n * @type {Object}\n * @property {String} currentState current state of the meeting\n * @property {String} previousState previous state of the meeting\n * @memberof Meeting\n */\n\n/**\n * Media Ready Event\n * Emitted when a stream is ready to be rendered\n * @event media:ready\n * @instance\n * @type {Object}\n * @property {MediaStream} stream the media stream\n * @property {String} type what type of stream, remote, local\n * @memberof Meeting\n */\n\n/**\n * Media Stopped Event\n * Emitted when a stream has stopped sending\n * @event media:stopped\n * @instance\n * @type {Object}\n * @property {String} type what type of stream, remote, local\n * @memberof Meeting\n */\n\n/**\n * Meeting Ringing Event\n * Emitted when this client should play a ringing sound, because this member is getting an incoming meeting\n * or sending out an incoming meeting\n * @event meeting:ringing\n * @instance\n * @type {Object}\n * @property {String} type // INCOMING or JOIN\n * @property {String} id\n * @memberof Meeting\n */\n\n/**\n * Meeting Ringing Stop Event\n * Emitted when this client should stop playing a ringing sound\n * @event meeting:ringingStop\n * @instance\n * @type {Object}\n * @property {Object} type\n * @property {Boolean} type.remoteAnswered\n * @property {Boolean} type.remoteDeclined\n * @property {String} id\n * @memberof Meeting\n */\n\n/**\n * Meeting Started Sharing Local Event\n * Emitted when this member starts sharing\n * @event meeting:startedSharingLocal\n * @instance\n * @type {Object}\n * @memberof Meeting\n */\n\n/**\n * Meeting Stopped Sharing Local Event\n * Emitted when this member stops sharing\n * @event meeting:stoppedSharingLocal\n * @instance\n * @type {Object}\n * @memberof Meeting\n */\n\n/**\n * Meeting Started Sharing Remote Event\n * Emitted when remote sharing starts\n * @event meeting:startedSharingRemote\n * @instance\n * @type {Object}\n * @property {Boolean} memberId id of the meeting member that started screen share\n * @memberof Meeting\n */\n\n/**\n * Meeting Stopped Sharing Remote Event\n * Emitted when remote screen sharing ends\n * @event meeting:stoppedSharingRemote\n * @instance\n * @type {Object}\n * @memberof Meeting\n */\n\n/**\n * Meeting Locked Event\n * Emitted when a meeting is locked\n * @event meeting:locked\n * @instance\n * @type {Object}\n * @property {Object} info\n * @memberof Meeting\n */\n\n/**\n * Meeting Unlocked Event\n * Emitted when a meeting is unlocked\n * @event meeting:unlocked\n * @instance\n * @type {Object}\n * @property {Object} info\n * @memberof Meeting\n */\n\n/**\n * Meeting Actions Update Event\n * Emitted when a user can take actions on a meeting such as lock, unlock, assign host\n * @event meeting:actionsUpdate\n * @instance\n * @type {Object}\n * @property {Boolean} canLock\n * @property {Boolean} canUnlock\n * @property {Boolean} canAssignHost\n * @memberof Meeting\n */\n\n/**\n * Meeting Unmuted By Others Event\n * Emitted when a member is unmuted by another member\n * @event meeting:self:unmutedByOthers\n * @instance\n * @type {Object}\n * @property {Object} payload\n * @memberof Meeting\n */\n\n/**\n * Meeting Muted By Others Event\n * Emitted when a member is muted by another member\n * @event meeting:self:mutedByOthers\n * @instance\n * @type {Object}\n * @property {Object} payload\n * @property {Boolean} payload.unmuteAllowed - whether the user is allowed to unmute self\n * @memberof Meeting\n */\n\n/**\n * Meeting Muted By Others Event\n * Emitted when the host(moderator)/co-host requests a user to unmute\n * @event meeting:self:requestedToUnmute\n * @instance\n * @type {Object}\n * @property {Object} payload\n * @memberof Meeting\n */\n\n/**\n * Meeting Self Guest Admitted Event\n * Emitted when a joined user get admitted to the meeting by another member or host\n * @event meeting:self:guestAdmitted\n * @instance\n * @type {Object}\n * @property {Object} payload\n * @memberof Meeting\n */\n\n/**\n * Meeting Self Lobby Waiting Event\n * Emitted when joined user enters the lobby and is waiting for the webex meeting to begin\n * @event meeting:self:lobbyWaiting\n * @instance\n * @type {Object}\n * @property {Object} reason Reason why user left the meeting\n * @memberof Meeting\n */\n\n/**\n * Meeting Self Left State\n * Emitted when user is inactive for more then 40 seconds, User can rejoin the meeting again\n * @event meeting:self:left\n * @instance\n * @type {Object}\n * @property {Object} payload\n * @memberof Meeting\n */\n\n/**\n * Reconnection Starting Event\n * Emitted when reconnection of media to the active meeting was successful\n * @event meeting:reconnectionStarting\n * @instance\n * @memberof Meeting\n */\n\n/**\n * Reconnection Success Event\n * Emitted when reconnection of media to the active meeting was successful\n * @event meeting:reconnectionSuccess\n * @instance\n * @type {Object}\n * @property {Object} reconnect\n * @memberof Meeting\n */\n\n/**\n * Reconnection Failure Event\n * Emitted when reconnection of media to the active meeting was successful\n * @event meeting:reconnectionFailure\n * @instance\n * @type {Object}\n * @property {Error} error\n * @memberof Meeting\n */\n\n/**\n * Meeting network quality event\n * Emitted on each interval of retrieving stats Analyzer data\n * @event network:quality\n * @type {Object}\n * @property {string} mediaType {video|audio}\n * @property {number} networkQualityScore - {1|0} 1 indicates acceptable uplink 0 indicates unacceptable uplink based on threshold\n * @memberof Meeting\n */\n\n/**\n * @description Meeting is the crux of the plugin\n * @export\n * @class Meeting\n */\nexport default class Meeting extends StatelessWebexPlugin {\n  attrs: any;\n  audio: any;\n  conversationUrl: string;\n  correlationId: string;\n  destination: string;\n  destinationType: string;\n  deviceUrl: string;\n  effects: any;\n  hostId: string;\n  id: string;\n  locusUrl: string;\n  mediaConnections: any[];\n  meetingFiniteStateMachine: any;\n  meetingInfo: object;\n  meetingRequest: MeetingRequest;\n  members: Members;\n  options: object;\n  orgId: string;\n  owner: string;\n  partner: any;\n  policy: string;\n  reconnectionManager: ReconnectionManager;\n  resource: string;\n  roap: Roap;\n  roapSeq: number;\n  sipUri: string;\n  type: string;\n  userId: string;\n  video: any;\n  callEvents: any[];\n  deferJoin: Promise<any>;\n  dialInDeviceStatus: string;\n  dialInUrl: string;\n  dialOutDeviceStatus: string;\n  dialOutUrl: string;\n  fetchMeetingInfoTimeoutId: NodeJS.Timeout;\n  floorGrantPending: boolean;\n  hasJoinedOnce: boolean;\n  hasWebsocketConnected: boolean;\n  inMeetingActions: InMeetingActions;\n  isLocalShareLive: boolean;\n  isSharing: boolean;\n  keepAliveTimerId: NodeJS.Timeout;\n  lastVideoLayoutInfo: any;\n  locusInfo: any;\n  mediaProperties: MediaProperties;\n  meetingInfoFailureReason: string;\n  networkQualityMonitor: NetworkQualityMonitor;\n  networkStatus: string;\n  passwordStatus: string;\n  queuedMediaUpdates: any[];\n  recording: any;\n  recordingController: RecordingController;\n  controlsOptionsManager: ControlsOptionsManager;\n  requiredCaptcha: any;\n  shareStatus: string;\n  statsAnalyzer: StatsAnalyzer;\n  transcription: Transcription;\n  updateMediaConnections: (mediaConnections: any[]) => void;\n  endCallInitiateJoinReq: any;\n  endJoinReqResp: any;\n  endLocalSDPGenRemoteSDPRecvDelay: any;\n  joinedWith: any;\n  locusId: any;\n  startCallInitiateJoinReq: any;\n  startJoinReqResp: any;\n  startLocalSDPGenRemoteSDPRecvDelay: any;\n  wirelessShare: any;\n  guest: any;\n  meetingJoinUrl: any;\n  meetingNumber: any;\n  meetingState: any;\n  permissionToken: any;\n  resourceId: any;\n  resourceUrl: string;\n  selfId: string;\n  state: any;\n\n  namespace = MEETINGS;\n\n  /**\n   * @param {Object} attrs\n   * @param {Object} options\n   * @constructor\n   * @memberof Meeting\n   */\n  constructor(attrs: any, options: object) {\n    super({}, options);\n    /**\n     * @instance\n     * @type {Object}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.attrs = attrs;\n    /**\n     * @instance\n     * @type {Object}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.options = options;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.id = uuid.v4();\n    /**\n     * Correlation ID used for network tracking of meeting join\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.correlationId = this.id;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.userId = attrs.userId;\n    /**\n     * Organization ID\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.orgId = attrs.orgId;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.resource = attrs.resource;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.deviceUrl = attrs.deviceUrl;\n    /**\n     * @description set you -1 as default values is 0 (used to idenfify if 1st roap request was sent)\n     * @instance\n     * @type {Number}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.roapSeq = ROAP_SEQ_PRE;\n    /**\n     * @instance\n     * @type {Object}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    // TODO: needs to be defined as a class\n    this.meetingInfo = {};\n    /**\n     * @instance\n     * @type {Members}\n     * @public\n     * @memberof Meeting\n     */\n    // @ts-ignore - Fix type\n    this.members = new Members({locusUrl: attrs.locus && attrs.locus.url}, {parent: this.webex});\n    /**\n     * @instance\n     * @type {Roap}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    // @ts-ignore - Fix type\n    this.roap = new Roap({}, {parent: this.webex});\n    /**\n     * created later\n     * @instance\n     * @type {ReconnectionManager}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.reconnectionManager = new ReconnectionManager(this);\n    /**\n     * created later\n     * @instance\n     * @type {MuteState}\n     * @private\n     * @memberof Meeting\n     */\n    this.audio = null;\n    /**\n     * created later\n     * @instance\n     * @type {MuteState}\n     * @private\n     * @memberof Meeting\n     */\n    this.video = null;\n    /**\n     * created later\n     * @instance\n     * @type {EffectsState}\n     * @private\n     * @memberof Meeting\n     */\n    this.effects = null;\n    /**\n     * @instance\n     * @type {MeetingStateMachine}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.meetingFiniteStateMachine = MeetingStateMachine.create(this);\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.conversationUrl = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.locusUrl = (attrs.locus && attrs.locus.url) || null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.sipUri = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.destination = attrs.destination;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.destinationType = attrs.destinationType;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.partner = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.type = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.owner = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.hostId = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.policy = null;\n    /**\n     * @instance\n     * @type {MeetingRequest}\n     * @private\n     * @memberof Meeting\n     */\n    this.meetingRequest = new MeetingRequest({}, options);\n    /**\n     * @instance\n     * @type {Array}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.mediaConnections = null;\n\n    /**\n     * Fetching meeting info can be done randomly 2-5 mins before meeting start\n     * In case it is done before the timer expires, this timeout id is reset to cancel the timer.\n     * @instance\n     * @type {Number}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.fetchMeetingInfoTimeoutId = null;\n\n    /**\n     * Update the MediaConnections property with new information\n     * @param {array} mediaConnections\n     * @returns {undefined}\n     * @private\n     * @memberof Meeting\n     */\n    this.updateMediaConnections = (mediaConnections: any[]) => {\n      if (!isEqual(this.mediaConnections, mediaConnections)) {\n        // grab last/latest item in the new mediaConnections information\n        this.mediaConnections = mediaConnections.slice(-1);\n      }\n    };\n    /**\n     * Passing only info as we send basic info for meeting added event\n     * @instance\n     * @type {MediaProperties}\n     * @public\n     * @memberof Meeting\n     */\n    this.mediaProperties = new MediaProperties();\n    /**\n     * @instance\n     * @type {InMeetingActions}\n     * @public\n     * @memberof Meeting\n     */\n    this.inMeetingActions = new InMeetingActions();\n    /**\n     * This is deprecated, please use shareStatus instead.\n     * @instance\n     * @type {Boolean}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     * @deprecated after v1.118.13\n     */\n    this.isSharing = false;\n    /**\n     * @instance\n     * @type {string}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.shareStatus = SHARE_STATUS.NO_SHARE;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    Object.defineProperty(this, 'isLocalShareLive', {\n      get: () => {\n        const {shareTransceiver} = this.mediaProperties.peerConnection;\n        const shareDirection = shareTransceiver?.direction;\n        const trackReadyState = shareTransceiver?.sender?.track?.readyState;\n        const activeShare = trackReadyState === LIVE;\n        const offersToSendData = shareDirection === SENDRECV;\n\n        if (activeShare && offersToSendData) {\n          return true;\n        }\n\n        return false;\n      },\n      configurable: true,\n    });\n    /**\n     * @instance\n     * @type {Array}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.callEvents = [];\n    /**\n     * There is a pending floor requested by the user\n     * @instance\n     * @type {boolean}\n     * @private\n     * @memberof Meeting\n     */\n    this.floorGrantPending = false;\n    /**\n     * The latest status of the dial in device (can be \"JOINED\", \"CONNECTED\", \"LEFT\",\n     * \"TRANSFERRING\", \"SUCCESS\" or \"\")\n     * @instance\n     * @type {String}\n     * @private\n     * @memberof Meeting\n     */\n    this.dialInDeviceStatus = PSTN_STATUS.UNKNOWN;\n    /**\n     * the url for provisioned device used to dial in\n     * @instance\n     * @type {String}\n     * @private\n     * @memberof Meeting\n     */\n    this.dialInUrl = '';\n    /**\n     * The latest status of the dial out device (can be \"JOINED\", \"CONNECTED\", \"LEFT\",\n     * \"TRANSFERRING\", \"SUCCESS\" or \"\")\n     * @instance\n     * @type {String}\n     * @private\n     * @memberof Meeting\n     */\n    this.dialOutDeviceStatus = PSTN_STATUS.UNKNOWN;\n    /**\n     * the url for provisioned device used to dial out\n     * @instance\n     * @type {String}\n     * @private\n     * @memberof Meeting\n     */\n    this.dialOutUrl = '';\n    /**\n     * @instance\n     * @type {StatsAnalyzer}\n     * @private\n     * @memberof Meeting\n     */\n    this.statsAnalyzer = null;\n    /**\n     * @instance\n     * @type {NetworkQualityMonitor}\n     * @private\n     * @memberof Meeting\n     */\n    this.networkQualityMonitor = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.networkStatus = null;\n    /**\n     * Passing only info as we send basic info for meeting added event\n     * @instance\n     * @type {MeetingRequest}\n     * @private\n     * @memberof Meeting\n     */\n    // @ts-ignore - Fix type\n    this.locusInfo = new LocusInfo(this.updateMeetingObject.bind(this), this.webex, this.id);\n\n    // We had to add listeners first before setting up the locus instance\n    /**\n     * @instance\n     * @type {Recording}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.recording = null;\n\n    /**\n     * Promise that exists if joining, and resolves upon method completion.\n     * @instance\n     * @type {Promise}\n     * @private\n     * @memberof Meeting\n     */\n    this.deferJoin = undefined;\n\n    /**\n     * Staus of websocket connection/mercury connection.\n     * @instance\n     * @type {Boolean}\n     * @private\n     * @memberof Meeting\n     */\n    // @ts-ignore - Fix type\n    this.hasWebsocketConnected = this.webex.internal.mercury.connected;\n\n    /**\n     * Last sent render information\n     * @instance\n     * @type {Object}\n     * @private\n     * @memberof Meeting\n     */\n    this.lastVideoLayoutInfo = {layoutType: undefined, main: undefined, content: undefined};\n\n    /**\n     * Queue of pending media updates requested by the app\n     * @instance\n     * @type {Array}\n     * @private\n     * @memberof Meeting\n     */\n    this.queuedMediaUpdates = [];\n\n    /**\n     * Meeting transcription object\n     * @instance\n     * @type {Transcription}\n     * @private\n     * @memberof Meeting\n     */\n    this.transcription = undefined;\n\n    /**\n     * Password status. If it's PASSWORD_STATUS.REQUIRED then verifyPassword() needs to be called\n     * with the correct password before calling join()\n     * @instance\n     * @type {PASSWORD_STATUS}\n     * @public\n     * @memberof Meeting\n     */\n    this.passwordStatus = PASSWORD_STATUS.UNKNOWN;\n\n    /**\n     * Information about required captcha. If null, then no captcha is required. status. If it's PASSWORD_STATUS.REQUIRED then verifyPassword() needs to be called\n     * with the correct password before calling join()\n     * @instance\n     * @type {Object}\n     * @property {string} captchaId captcha id\n     * @property {string} verificationImageURL Url of the captcha image\n     * @property {string} verificationAudioURL Url of the captcha audio file\n     * @property {string} refreshURL Url used for refreshing the captcha (don't use it directly, call refreshCaptcha() instead)\n     * @public\n     * @memberof Meeting\n     */\n    this.requiredCaptcha = null;\n\n    /**\n     * Indicates the reason for last failure to obtain meeting.meetingInfo. MEETING_INFO_FAILURE_REASON.NONE if meeting info was\n     * retrieved successfully\n     * @instance\n     * @type {MEETING_INFO_FAILURE_REASON}\n     * @private\n     * @memberof Meeting\n     */\n    this.meetingInfoFailureReason = undefined;\n\n    /**\n     * Repeating timer used to send keepAlives when in lobby\n     * @instance\n     * @type {String}\n     * @private\n     * @memberof Meeting\n     */\n    this.keepAliveTimerId = null;\n\n    /**\n     * The class that helps to control recording functions: start, stop, pause, resume, etc\n     * @instance\n     * @type {RecordingController}\n     * @public\n     * @memberof Meeting\n     */\n    this.recordingController = new RecordingController(this.meetingRequest, {\n      serviceUrl: this.locusInfo?.links?.services?.record?.url,\n      sessionId: this.locusInfo?.fullState?.sessionId,\n      locusUrl: this.locusInfo?.url,\n      displayHints: [],\n    });\n\n    /**\n     * The class that helps to control recording functions: start, stop, pause, resume, etc\n     * @instance\n     * @type {ControlsOptionsManager}\n     * @public\n     * @memberof Meeting\n     */\n    this.controlsOptionsManager = new ControlsOptionsManager(this.meetingRequest, {\n      locusUrl: this.locusInfo?.url,\n      displayHints: [],\n    });\n\n    this.setUpLocusInfoListeners();\n    this.locusInfo.init(attrs.locus ? attrs.locus : {});\n    this.hasJoinedOnce = false;\n  }\n\n  /**\n   * Fetches meeting information.\n   * @param {Object} options\n   * @param {String} [options.password] optional\n   * @param {String} [options.captchaCode] optional\n   * @public\n   * @memberof Meeting\n   * @returns {Promise}\n   */\n  public async fetchMeetingInfo({\n    password = null,\n    captchaCode = null,\n  }: {\n    password?: string;\n    captchaCode?: string;\n  }) {\n    // when fetch meeting info is called directly by the client, we want to clear out the random timer for sdk to do it\n    if (this.fetchMeetingInfoTimeoutId) {\n      clearTimeout(this.fetchMeetingInfoTimeoutId);\n      this.fetchMeetingInfoTimeoutId = undefined;\n    }\n    if (captchaCode && !this.requiredCaptcha) {\n      return Promise.reject(\n        new Error('fetchMeetingInfo() called with captchaCode when captcha was not required')\n      );\n    }\n    if (\n      password &&\n      this.passwordStatus !== PASSWORD_STATUS.REQUIRED &&\n      this.passwordStatus !== PASSWORD_STATUS.UNKNOWN\n    ) {\n      return Promise.reject(\n        new Error('fetchMeetingInfo() called with password when password was not required')\n      );\n    }\n\n    try {\n      const captchaInfo = captchaCode\n        ? {code: captchaCode, id: this.requiredCaptcha.captchaId}\n        : null;\n\n      const info = await this.attrs.meetingInfoProvider.fetchMeetingInfo(\n        this.destination,\n        this.destinationType,\n        password,\n        captchaInfo\n      );\n\n      this.parseMeetingInfo(info, this.destination);\n      this.meetingInfo = info ? info.body : null;\n      this.meetingInfoFailureReason = MEETING_INFO_FAILURE_REASON.NONE;\n      this.requiredCaptcha = null;\n      if (\n        this.passwordStatus === PASSWORD_STATUS.REQUIRED ||\n        this.passwordStatus === PASSWORD_STATUS.VERIFIED\n      ) {\n        this.passwordStatus = PASSWORD_STATUS.VERIFIED;\n      } else {\n        this.passwordStatus = PASSWORD_STATUS.NOT_REQUIRED;\n      }\n\n      Trigger.trigger(\n        this,\n        {\n          file: 'meetings',\n          function: 'fetchMeetingInfo',\n        },\n        EVENT_TRIGGERS.MEETING_INFO_AVAILABLE\n      );\n\n      return Promise.resolve();\n    } catch (err) {\n      if (err instanceof MeetingInfoV2PasswordError) {\n        // @ts-ignore\n        LoggerProxy.logger.info(\n          `Meeting:index#fetchMeetingInfo --> Info Unable to fetch meeting info for ${this.destination} - password required (code=${err?.body?.code}).`\n        );\n\n        // when wbxappapi requires password it still populates partial meeting info in the response\n        if (err.meetingInfo) {\n          this.meetingInfo = err.meetingInfo;\n          this.meetingNumber = err.meetingInfo.meetingNumber;\n        }\n\n        this.passwordStatus = PASSWORD_STATUS.REQUIRED;\n        this.meetingInfoFailureReason = MEETING_INFO_FAILURE_REASON.WRONG_PASSWORD;\n        if (this.requiredCaptcha) {\n          // this is a workaround for captcha service bug, see WEBEX-224862\n          await this.refreshCaptcha();\n        }\n\n        throw new PasswordError();\n      } else if (err instanceof MeetingInfoV2CaptchaError) {\n        // @ts-ignore\n        LoggerProxy.logger.info(\n          `Meeting:index#fetchMeetingInfo --> Info Unable to fetch meeting info for ${this.destination} - captcha required (code=${err?.body?.code}).`\n        );\n\n        this.meetingInfoFailureReason = this.requiredCaptcha\n          ? MEETING_INFO_FAILURE_REASON.WRONG_CAPTCHA\n          : MEETING_INFO_FAILURE_REASON.WRONG_PASSWORD;\n\n        if (err.isPasswordRequired) {\n          this.passwordStatus = PASSWORD_STATUS.REQUIRED;\n        }\n\n        this.requiredCaptcha = err.captchaInfo;\n        throw new CaptchaError();\n      } else {\n        this.meetingInfoFailureReason = MEETING_INFO_FAILURE_REASON.OTHER;\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * Checks if the supplied password/host key is correct. It returns a promise with information whether the\n   * password and captcha code were correct or not.\n   * @param {String} password - this can be either a password or a host key, can be undefined if only captcha was required\n   * @param {String} captchaCode - can be undefined if captcha was not required by the server\n   * @public\n   * @memberof Meeting\n   * @returns {Promise<{isPasswordValid: boolean, requiredCaptcha: boolean, failureReason: MEETING_INFO_FAILURE_REASON}>}\n   */\n  public verifyPassword(password: string, captchaCode: string) {\n    return this.fetchMeetingInfo({\n      password,\n      captchaCode,\n    })\n      .then(() => {\n        Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.VERIFY_PASSWORD_SUCCESS);\n\n        return {\n          isPasswordValid: true,\n          requiredCaptcha: null,\n          failureReason: MEETING_INFO_FAILURE_REASON.NONE,\n        };\n      })\n      .catch((error) => {\n        if (error instanceof PasswordError || error instanceof CaptchaError) {\n          return {\n            isPasswordValid: this.passwordStatus === PASSWORD_STATUS.VERIFIED,\n            requiredCaptcha: this.requiredCaptcha,\n            failureReason: this.meetingInfoFailureReason,\n          };\n        }\n        throw error;\n      });\n  }\n\n  /**\n   * Refreshes the captcha. As a result the meeting will have new captcha id, image and audio.\n   * If the refresh operation fails, meeting remains with the old captcha properties.\n   * @public\n   * @memberof Meeting\n   * @returns {Promise}\n   */\n  public refreshCaptcha() {\n    if (!this.requiredCaptcha) {\n      return Promise.reject(new Error('There is no captcha to refresh'));\n    }\n\n    // in order to get fully populated uris for captcha audio and image in response to refresh captcha request\n    // we have to pass the wbxappapi hostname as the siteFullName parameter\n    const {hostname} = new URL(this.requiredCaptcha.refreshURL);\n\n    return (\n      this.meetingRequest\n        // @ts-ignore\n        .refreshCaptcha({\n          captchaRefreshUrl: `${this.requiredCaptcha.refreshURL}&siteFullName=${hostname}`,\n          captchaId: this.requiredCaptcha.captchaId,\n        })\n        .then((response) => {\n          this.requiredCaptcha.captchaId = response.body.captchaID;\n          this.requiredCaptcha.verificationImageURL = response.body.verificationImageURL;\n          this.requiredCaptcha.verificationAudioURL = response.body.verificationAudioURL;\n        })\n        .catch((error) => {\n          LoggerProxy.logger.error(\n            `Meeting:index#refreshCaptcha --> Error Unable to refresh captcha for ${this.destination} - ${error}`\n          );\n          throw error;\n        })\n    );\n  }\n\n  /**\n   * Proxy function for all the listener set ups\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  private setUpLocusInfoListeners() {\n    // meeting update listeners\n    this.setUpLocusInfoSelfListener();\n    this.setUpLocusInfoMeetingListener();\n    this.setUpLocusServicesListener();\n    // members update listeners\n    this.setUpLocusFullStateListener();\n    this.setUpLocusUrlListener();\n    this.setUpLocusHostListener();\n    this.setUpLocusSelfListener();\n    this.setUpLocusParticipantsListener();\n    this.setupLocusControlsListener();\n    this.setUpLocusMediaSharesListener();\n    this.setUpLocusEmbeddedAppsListener();\n    this.setUpLocusInfoMeetingInfoListener();\n    this.setUpLocusInfoAssignHostListener();\n    this.setUpLocusInfoMediaInactiveListener();\n  }\n\n  /**\n   * Set up the locus info listener for meetings disconnected due to inactivity\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  private setUpLocusInfoMediaInactiveListener() {\n    // User gets kicked off the meeting due to inactivity or user did a refresh\n    this.locusInfo.on(EVENTS.DISCONNECT_DUE_TO_INACTIVITY, (res) => {\n      // https:// jira-eng-gpk2.cisco.com/jira/browse/SPARK-240520\n      // TODO: send custom parameter explaining why the inactivity happened\n      // refresh , no media or network got dsconnected or something else\n      Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.DISCONNECT_DUE_TO_INACTIVITY, {\n        correlation_id: this.correlationId,\n        locus_id: this.locusId,\n      });\n\n      // Upload logs on media inactivity\n      // Normally media should not be inactive\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setUpLocusInfoMediaInactiveListener',\n        },\n        EVENTS.REQUEST_UPLOAD_LOGS,\n        this\n      );\n\n      LoggerProxy.logger.error(\n        `Meeting:index#setUpLocusInfoMediaInactiveListener --> Meeting disconnected due to inactivity: ${res.reason}`\n      );\n\n      // @ts-ignore - config coming from registerPlugin\n      if (this.config.reconnection.autoRejoin) {\n        this.reconnect();\n      } else {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoMediaInactiveListener',\n          },\n          EVENT_TRIGGERS.MEETING_SELF_LEFT,\n          res.reason\n        );\n      }\n    });\n  }\n\n  /**\n   * Set up the locus info listener for assign host permissions on a meeting\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  private setUpLocusInfoAssignHostListener() {\n    this.locusInfo.on(EVENTS.LOCUS_INFO_CAN_ASSIGN_HOST, (payload) => {\n      const changed = this.inMeetingActions.set({\n        canAssignHost: payload.canAssignHost,\n      });\n\n      if (changed) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoAssignHostListener',\n          },\n          EVENT_TRIGGERS.MEETING_ACTIONS_UPDATE,\n          this.inMeetingActions.get()\n        );\n      }\n    });\n  }\n\n  /**\n   * Set up the internal locus info full state object listener\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  private setUpLocusFullStateListener() {\n    this.locusInfo.on(LOCUSINFO.EVENTS.FULL_STATE_MEETING_STATE_CHANGE, (payload) => {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setUpLocusFullStateListener',\n        },\n        EVENT_TRIGGERS.MEETING_STATE_CHANGE,\n        {\n          payload,\n        }\n      );\n    });\n\n    this.locusInfo.on(LOCUSINFO.EVENTS.FULL_STATE_TYPE_UPDATE, (payload) => {\n      this.members.locusFullStateTypeUpdate(payload);\n    });\n  }\n\n  /**\n   * get the metrics payload pre\n   * @param {Object} options\n   * @param {String} options.event\n   * @param {String} options.trackingId\n   * @param {Object} options.locus\n   * @param {Array} options.mediaConnections\n   * @param {Object} options.errors\n   * @returns {Object}\n   * @memberof Meeting\n   */\n  getAnalyzerMetricsPrePayload(\n    options:\n      | {\n          event: string;\n          trackingId: string;\n          locus: object;\n          mediaConnections: Array<any>;\n          errors: object;\n        }\n      | any\n  ) {\n    if (options) {\n      const {event, trackingId, mediaConnections} = options;\n\n      if (!event) {\n        LoggerProxy.logger.error(\n          'Meeting:index#getAnalyzerMetricsPrePayload --> Error [Call Analyzer Event',\n          event || '',\n          `]: invalid identifers or event type! ${this.correlationId}`\n        );\n\n        return null;\n      }\n\n      const identifiers: any = {\n        correlationId: this.correlationId,\n        userId: this.userId,\n        deviceId: this.deviceUrl,\n        orgId: this.orgId,\n        // @ts-ignore fix type\n        locusUrl: this.webex.internal.services.get('locus'),\n      };\n\n      if (this.locusUrl && this.locusInfo.fullState) {\n        identifiers.locusUrl = this.locusUrl;\n        identifiers.locusId = this.locusUrl && this.locusUrl.split('/').pop();\n        identifiers.locusStartTime =\n          this.locusInfo.fullState && this.locusInfo.fullState.lastActive;\n      }\n\n      // Check if mediaConnections has been passed in or else use this.mediaConnections\n      if (mediaConnections) {\n        identifiers.mediaAgentAlias = mediaConnections?.[0].mediaAgentAlias;\n        identifiers.mediaAgentGroupId = mediaConnections?.[0].mediaAgentGroupId;\n        identifiers.mediaAgentCluster = mediaConnections?.[0].mediaAgentCluster;\n      } else if (this.mediaConnections) {\n        identifiers.mediaAgentAlias = this.mediaConnections?.[0].mediaAgentAlias;\n        identifiers.mediaAgentGroupId = this.mediaConnections?.[0].mediaAgentGroupId;\n        identifiers.mediaAgentCluster = this.mediaConnections?.[0].mediaAgentCluster;\n      }\n\n      if (options.trackingId) {\n        identifiers.trackingId = trackingId;\n      }\n\n      let payload = {};\n\n      const joinRespRxStartAudio = this.getSetupDelayDuration('audio');\n\n      if (joinRespRxStartAudio) {\n        options.audioSetupDelay = {\n          joinRespRxStart: joinRespRxStartAudio,\n        };\n      }\n\n      const joinRespRxStartVideo = this.getSetupDelayDuration('video');\n\n      if (joinRespRxStartAudio) {\n        options.videoSetupDelay = {\n          joinRespRxStart: joinRespRxStartVideo,\n        };\n      }\n\n      const joinRespTxStartAudio = this.getSendingMediaDelayDuration('audio');\n\n      if (joinRespTxStartAudio) {\n        options.audioSetupDelay = {\n          ...options.audioSetupDelay,\n          joinRespTxStart: joinRespTxStartAudio,\n        };\n      }\n\n      const joinRespTxStartVideo = this.getSendingMediaDelayDuration('video');\n\n      if (joinRespTxStartVideo) {\n        options.videoSetupDelay = {\n          ...options.videoSetupDelay,\n          joinRespTxStart: joinRespTxStartVideo,\n        };\n      }\n\n      const localSDPGenRemoteSDPRecv = this.getLocalSDPGenRemoteSDPRecvDelay();\n\n      if (localSDPGenRemoteSDPRecv) {\n        options.joinTimes = {\n          ...options.joinTimes,\n          localSDPGenRemoteSDPRecv,\n        };\n      }\n\n      const callInitiateJoinReq = this.getCallInitiateJoinReq();\n\n      if (callInitiateJoinReq) {\n        options.joinTimes = {\n          ...options.joinTimes,\n          callInitiateJoinReq,\n        };\n      }\n\n      const joinReqResp = this.getJoinReqResp();\n\n      if (joinReqResp) {\n        options.joinTimes = {\n          ...options.joinTimes,\n          joinReqResp,\n        };\n      }\n\n      const getTotalJmt = this.getTotalJmt();\n\n      if (getTotalJmt) {\n        options.joinTimes = {\n          ...options.joinTimes,\n          getTotalJmt,\n        };\n      }\n\n      if (options.type === MQA_STATS.CA_TYPE) {\n        payload = Metrics.initMediaPayload(options.event, identifiers, options);\n      } else {\n        payload = Metrics.initPayload(options.event, identifiers, options);\n      }\n\n      return payload;\n    }\n\n    return null;\n  }\n\n  /**\n   * Send the metrics to call-analyzer dashboard\n   * @param {Object} options\n   * @param {String} options.event\n   * @param {String} options.trackingId\n   * @param {Object} options.locus\n   * @param {Object} options.errors\n   * @returns {Promise}\n   * @private\n   * @memberof Meeting\n   */\n  private sendCallAnalyzerMetrics(options: {\n    event: string;\n    trackingId: string;\n    locus: object;\n    errors: object;\n  }) {\n    const payload = this.getAnalyzerMetricsPrePayload({\n      // @ts-ignore - config coming from registerPlugin\n      ...pick(this.config.metrics, ['clientType', 'subClientType']),\n      ...options,\n    });\n\n    // @ts-ignore - fix type\n    return this.webex.internal.metrics.submitCallDiagnosticEvents(payload);\n  }\n\n  /**\n   * Send the metrics to Media Quality Analyzer dashboard\n   * @param {Object} options\n   * @param {String} options.event\n   * @param {String} options.trackingId\n   * @param {Object} options.locus\n   * @returns {Promise}\n   * @private\n   * @memberof Meeting\n   */\n  private sendMediaQualityAnalyzerMetrics(options: {\n    event: string;\n    trackingId: string;\n    locus: object;\n  }) {\n    const payload = this.getAnalyzerMetricsPrePayload({\n      type: MQA_STATS.CA_TYPE,\n      // @ts-ignore - config coming from registerPlugin\n      ...pick(this.config.metrics, ['clientType', 'subClientType']),\n      ...options,\n    });\n\n    // @ts-ignore\n    return this.webex.internal.metrics.submitCallDiagnosticEvents(payload);\n  }\n\n  /**\n   * sets the network status on meeting object\n   * @param {String} networkStatus\n   * @private\n   * @returns {undefined}\n   * @memberof Meeting\n   */\n  private setNetworkStatus(networkStatus: string) {\n    if (networkStatus === NETWORK_STATUS.DISCONNECTED) {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setNetworkStatus',\n        },\n        EVENT_TRIGGERS.MEETINGS_NETWORK_DISCONNECTED\n      );\n    } else if (\n      networkStatus === NETWORK_STATUS.CONNECTED &&\n      this.networkStatus === NETWORK_STATUS.DISCONNECTED\n    ) {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setNetworkStatus',\n        },\n        EVENT_TRIGGERS.MEETINGS_NETWORK_CONNECTED\n      );\n    }\n\n    this.networkStatus = networkStatus;\n  }\n\n  /**\n   * Set up the locus info self listener\n   * update self value for members and updates the member\n   * notifies consumer with members:self:update {activeSelfId endedSelfId}\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  private setUpLocusSelfListener() {\n    this.locusInfo.on(EVENTS.LOCUS_INFO_UPDATE_SELF, (payload) => {\n      this.members.locusSelfUpdate(payload);\n      this.pstnUpdate(payload);\n\n      // If user moved to a JOINED state and there is a pending floor grant trigger it\n      if (this.floorGrantPending && payload.newSelf.state === MEETING_STATE.STATES.JOINED) {\n        this.requestScreenShareFloor().then(() => {\n          this.floorGrantPending = false;\n        });\n      }\n    });\n  }\n\n  /**\n   * Notify any changes on the pstn devices\n   * @param {Object} payload\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  private pstnUpdate(payload: any) {\n    if (this.locusInfo.self) {\n      const dialInPstnDevice = payload.newSelf?.pstnDevices.find(\n        (device) => device.url === this.dialInUrl\n      );\n      const dialOutPstnDevice = payload.newSelf?.pstnDevices.find(\n        (device) => device.url === this.dialOutUrl\n      );\n      let changed = false;\n\n      if (dialInPstnDevice) {\n        const newStatus = dialInPstnDevice.dialingStatus ?? dialInPstnDevice.state;\n\n        if (newStatus !== this.dialInDeviceStatus) {\n          this.dialInDeviceStatus = newStatus;\n          changed = true;\n        }\n      }\n\n      if (dialOutPstnDevice) {\n        const newStatus = dialOutPstnDevice.dialingStatus ?? dialOutPstnDevice.state;\n\n        if (newStatus !== this.dialOutDeviceStatus) {\n          this.dialOutDeviceStatus = newStatus;\n          changed = true;\n        }\n      }\n\n      if (changed) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusSelfListener',\n          },\n          EVENT_TRIGGERS.MEETING_SELF_PHONE_AUDIO_UPDATE,\n          {\n            dialIn: {\n              status: this.dialInDeviceStatus,\n              attendeeId: dialInPstnDevice?.attendeeId,\n            },\n            dialOut: {\n              status: this.dialOutDeviceStatus,\n              attendeeId: dialOutPstnDevice?.attendeeId,\n            },\n          }\n        );\n      }\n    }\n  }\n\n  /**\n   * Set up the locus info host listener\n   * update host value for members and updates the member\n   * notifies consumer with members:host:update: {activeHostId, endedHostId}\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  private setUpLocusHostListener() {\n    this.locusInfo.on(EVENTS.LOCUS_INFO_UPDATE_HOST, (payload) => {\n      this.members.locusHostUpdate(payload);\n    });\n  }\n\n  /**\n   * Set up the locus info participants update listener\n   * update members collection value for members\n   * notifies consumer with members:update\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  private setUpLocusParticipantsListener() {\n    this.locusInfo.on(EVENTS.LOCUS_INFO_UPDATE_PARTICIPANTS, (payload) => {\n      this.members.locusParticipantsUpdate(payload);\n    });\n  }\n\n  /**\n   * Set up the locus info recording update listener\n   * update recording value for the meeting\n   * notifies consumer with:\n   *  meeting:recording:started\n   *  meeting:recording:stopped\n   *  meeting:recording:paused\n   *  meeting:recording:resumed\n   *\n   * Set up the locus info meeeting container listener\n   * update meetingContainerUrl value for the meeting\n   * notifies consumer with:\n   *  meeting:meetingContainer:update\n   *\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  private setupLocusControlsListener() {\n    this.locusInfo.on(\n      LOCUSINFO.EVENTS.CONTROLS_RECORDING_UPDATED,\n      ({state, modifiedBy, lastModified}) => {\n        let event;\n\n        switch (state) {\n          case RECORDING_STATE.RECORDING:\n            event = EVENT_TRIGGERS.MEETING_STARTED_RECORDING;\n            break;\n          case RECORDING_STATE.IDLE:\n            event = EVENT_TRIGGERS.MEETING_STOPPED_RECORDING;\n            break;\n          case RECORDING_STATE.PAUSED:\n            event = EVENT_TRIGGERS.MEETING_PAUSED_RECORDING;\n            break;\n          case RECORDING_STATE.RESUMED:\n            event = EVENT_TRIGGERS.MEETING_RESUMED_RECORDING;\n            break;\n          default:\n            event = null;\n            break;\n        }\n\n        // `RESUMED` state should be converted to `RECORDING` after triggering the event\n        this.recording = {\n          state: state === RECORDING_STATE.RESUMED ? RECORDING_STATE.RECORDING : state,\n          modifiedBy,\n          lastModified,\n        };\n\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setupLocusControlsListener',\n          },\n          event,\n          this.recording\n        );\n      }\n    );\n\n    this.locusInfo.on(\n      LOCUSINFO.EVENTS.CONTROLS_MEETING_CONTAINER_UPDATED,\n      ({meetingContainerUrl}) => {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setupLocusControlsListener',\n          },\n          EVENT_TRIGGERS.MEETING_MEETING_CONTAINER_UPDATE,\n          {meetingContainerUrl}\n        );\n      }\n    );\n\n    this.locusInfo.on(\n      LOCUSINFO.EVENTS.CONTROLS_MEETING_TRANSCRIBE_UPDATED,\n      ({caption, transcribing}) => {\n        // @ts-ignore - config coming from registerPlugin\n        if (transcribing && this.transcription && this.config.receiveTranscription) {\n          this.receiveTranscription();\n        } else if (!transcribing && this.transcription) {\n          Trigger.trigger(\n            this,\n            {\n              file: 'meeting/index',\n              function: 'setupLocusControlsListener',\n            },\n            EVENT_TRIGGERS.MEETING_STOPPED_RECEIVING_TRANSCRIPTION,\n            {caption, transcribing}\n          );\n        }\n      }\n    );\n\n    this.locusInfo.on(LOCUSINFO.EVENTS.CONTROLS_ENTRY_EXIT_TONE_UPDATED, ({entryExitTone}) => {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setupLocusControlsListener',\n        },\n        EVENT_TRIGGERS.MEETING_ENTRY_EXIT_TONE_UPDATE,\n        {entryExitTone}\n      );\n    });\n  }\n\n  /**\n   * Set up the locus info media shares listener\n   * update content and whiteboard sharing id value for members, and updates the member\n   * notifies consumer with members:content:update {activeContentSharingId, endedContentSharingId}\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  private setUpLocusMediaSharesListener() {\n    // Will get triggered on local and remote share\n    this.locusInfo.on(EVENTS.LOCUS_INFO_UPDATE_MEDIA_SHARES, (payload) => {\n      const {content: contentShare, whiteboard: whiteboardShare} = payload.current;\n      const previousContentShare = payload.previous?.content;\n      const previousWhiteboardShare = payload.previous?.whiteboard;\n\n      if (\n        contentShare.beneficiaryId === previousContentShare?.beneficiaryId &&\n        contentShare.disposition === previousContentShare?.disposition &&\n        whiteboardShare.beneficiaryId === previousWhiteboardShare?.beneficiaryId &&\n        whiteboardShare.disposition === previousWhiteboardShare?.disposition &&\n        whiteboardShare.resourceUrl === previousWhiteboardShare?.resourceUrl\n      ) {\n        // nothing changed, so ignore\n        // (this happens when we steal presentation from remote)\n        return;\n      }\n\n      let newShareStatus = this.shareStatus;\n\n      // REMOTE - check if remote started sharing\n      if (\n        this.selfId !== contentShare.beneficiaryId &&\n        contentShare.disposition === FLOOR_ACTION.GRANTED\n      ) {\n        // CONTENT - sharing content remote\n        newShareStatus = SHARE_STATUS.REMOTE_SHARE_ACTIVE;\n      }\n      // LOCAL - check if we started sharing content\n      else if (\n        this.selfId === contentShare.beneficiaryId &&\n        contentShare.disposition === FLOOR_ACTION.GRANTED\n      ) {\n        if (this.mediaProperties.shareTrack?.readyState === 'ended') {\n          this.stopShare({\n            skipSignalingCheck: true,\n          }).catch((error) => {\n            LoggerProxy.logger.log(\n              'Meeting:index#setUpLocusMediaSharesListener --> Error stopping share: ',\n              error\n            );\n          });\n        } else {\n          // CONTENT - sharing content local\n          newShareStatus = SHARE_STATUS.LOCAL_SHARE_ACTIVE;\n        }\n      }\n      // If we did not hit the cases above, no one is sharng content, so we check if we are sharing whiteboard\n      // There is no concept of local/remote share for whiteboard\n      // It does not matter who requested to share the whiteboard, everyone gets the same view\n      else if (whiteboardShare.disposition === FLOOR_ACTION.GRANTED) {\n        // WHITEBOARD - sharing whiteboard\n        newShareStatus = SHARE_STATUS.WHITEBOARD_SHARE_ACTIVE;\n      }\n      // or if content share is either released or null and whiteboard share is either released or null, no one is sharing\n      else if (\n        ((previousContentShare && contentShare.disposition === FLOOR_ACTION.RELEASED) ||\n          contentShare.disposition === null) &&\n        ((previousWhiteboardShare && whiteboardShare.disposition === FLOOR_ACTION.RELEASED) ||\n          whiteboardShare.disposition === null)\n      ) {\n        newShareStatus = SHARE_STATUS.NO_SHARE;\n      }\n\n      if (newShareStatus !== this.shareStatus) {\n        const oldShareStatus = this.shareStatus;\n\n        // update our state before we send out any notifications\n        this.shareStatus = newShareStatus;\n\n        // send out \"stop\" notifications for the old state\n        switch (oldShareStatus) {\n          case SHARE_STATUS.REMOTE_SHARE_ACTIVE:\n            Trigger.trigger(\n              this,\n              {\n                file: 'meetings/index',\n                function: 'remoteShare',\n              },\n              EVENT_TRIGGERS.MEETING_STOPPED_SHARING_REMOTE\n            );\n            break;\n\n          case SHARE_STATUS.LOCAL_SHARE_ACTIVE:\n            Trigger.trigger(\n              this,\n              {\n                file: 'meeting/index',\n                function: 'stopFloorRequest',\n              },\n              EVENT_TRIGGERS.MEETING_STOPPED_SHARING_LOCAL,\n              {\n                reason: SHARE_STOPPED_REASON.SELF_STOPPED,\n              }\n            );\n            break;\n\n          case SHARE_STATUS.WHITEBOARD_SHARE_ACTIVE:\n            Trigger.trigger(\n              this,\n              {\n                file: 'meeting/index',\n                function: 'stopWhiteboardShare',\n              },\n              EVENT_TRIGGERS.MEETING_STOPPED_SHARING_WHITEBOARD\n            );\n            break;\n\n          case SHARE_STATUS.NO_SHARE:\n            // nothing to do\n            break;\n\n          default:\n            break;\n        }\n\n        // send \"start\" notifications for the new state\n        switch (newShareStatus) {\n          case SHARE_STATUS.REMOTE_SHARE_ACTIVE: {\n            const sendStartedSharingRemote = () => {\n              Trigger.trigger(\n                this,\n                {\n                  file: 'meetings/index',\n                  function: 'remoteShare',\n                },\n                EVENT_TRIGGERS.MEETING_STARTED_SHARING_REMOTE,\n                {\n                  memberId: contentShare.beneficiaryId,\n                }\n              );\n            };\n\n            // if a remote participant is stealing the presentation from us\n            if (\n              !this.mediaProperties.mediaDirection?.sendShare ||\n              oldShareStatus === SHARE_STATUS.WHITEBOARD_SHARE_ACTIVE\n            ) {\n              sendStartedSharingRemote();\n            } else {\n              this.updateShare({\n                sendShare: false,\n                receiveShare: this.mediaProperties.mediaDirection.receiveShare,\n              }).finally(() => {\n                sendStartedSharingRemote();\n              });\n            }\n            break;\n          }\n\n          case SHARE_STATUS.LOCAL_SHARE_ACTIVE:\n            Trigger.trigger(\n              this,\n              {\n                file: 'meeting/index',\n                function: 'share',\n              },\n              EVENT_TRIGGERS.MEETING_STARTED_SHARING_LOCAL\n            );\n            Metrics.postEvent({event: eventType.LOCAL_SHARE_FLOOR_GRANTED, meeting: this});\n            break;\n\n          case SHARE_STATUS.WHITEBOARD_SHARE_ACTIVE:\n            Trigger.trigger(\n              this,\n              {\n                file: 'meeting/index',\n                function: 'startWhiteboardShare',\n              },\n              EVENT_TRIGGERS.MEETING_STARTED_SHARING_WHITEBOARD,\n              {\n                resourceUrl: whiteboardShare.resourceUrl,\n                memberId: whiteboardShare.beneficiaryId,\n              }\n            );\n            Metrics.postEvent({event: eventType.WHITEBOARD_SHARE_FLOOR_GRANTED, meeting: this});\n            break;\n\n          case SHARE_STATUS.NO_SHARE:\n            // nothing to do\n            break;\n\n          default:\n            break;\n        }\n\n        this.members.locusMediaSharesUpdate(payload);\n      } else if (newShareStatus === SHARE_STATUS.REMOTE_SHARE_ACTIVE) {\n        // if we got here, then some remote participant has stolen\n        // the presentation from another remote participant\n        Trigger.trigger(\n          this,\n          {\n            file: 'meetings/index',\n            function: 'remoteShare',\n          },\n          EVENT_TRIGGERS.MEETING_STARTED_SHARING_REMOTE,\n          {\n            memberId: contentShare.beneficiaryId,\n          }\n        );\n        this.members.locusMediaSharesUpdate(payload);\n      } else if (newShareStatus === SHARE_STATUS.WHITEBOARD_SHARE_ACTIVE) {\n        // if we got here, then some remote participant has stolen\n        // the presentation from another remote participant\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'startWhiteboardShare',\n          },\n          EVENT_TRIGGERS.MEETING_STARTED_SHARING_WHITEBOARD,\n          {\n            resourceUrl: whiteboardShare.resourceUrl,\n            memberId: whiteboardShare.beneficiaryId,\n          }\n        );\n        Metrics.postEvent({event: eventType.WHITEBOARD_SHARE_FLOOR_GRANTED, meeting: this});\n        this.members.locusMediaSharesUpdate(payload);\n      }\n    });\n  }\n\n  /**\n   * Set up the locus info url listener\n   * update locus_url value for members\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  private setUpLocusUrlListener() {\n    this.locusInfo.on(EVENTS.LOCUS_INFO_UPDATE_URL, (payload) => {\n      this.members.locusUrlUpdate(payload);\n      this.locusUrl = payload;\n      this.locusId = this.locusUrl?.split('/').pop();\n      this.recordingController.setLocusUrl(this.locusUrl);\n      this.controlsOptionsManager.setLocusUrl(this.locusUrl);\n    });\n  }\n\n  /**\n   * Set up the locus info service link listener\n   * update the locusInfo for recording controller\n   * does not currently re-emit the event as it's internal only\n   * payload is unused\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  private setUpLocusServicesListener() {\n    this.locusInfo.on(LOCUSINFO.EVENTS.LINKS_SERVICES, (payload) => {\n      this.recordingController.setServiceUrl(payload?.services?.record?.url);\n      this.recordingController.setSessionId(this.locusInfo?.fullState?.sessionId);\n    });\n  }\n\n  /**\n   * Set up the locus info meeting info listener\n   * @returns {undefined}\n   * @private\n   * @memberof meeting\n   */\n  private setUpLocusInfoMeetingInfoListener() {\n    this.locusInfo.on(LOCUSINFO.EVENTS.MEETING_LOCKED, (payload) => {\n      if (payload) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoMeetingInfoListener',\n          },\n          EVENT_TRIGGERS.MEETING_LOCKED,\n          {\n            payload,\n          }\n        );\n      }\n    });\n    this.locusInfo.on(LOCUSINFO.EVENTS.MEETING_UNLOCKED, (payload) => {\n      if (payload) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoMeetingInfoListener',\n          },\n          EVENT_TRIGGERS.MEETING_UNLOCKED,\n          {\n            payload,\n          }\n        );\n      }\n    });\n    this.locusInfo.on(LOCUSINFO.EVENTS.MEETING_INFO_UPDATED, (payload) => {\n      if (payload && payload.info) {\n        const changed = this.inMeetingActions.set({\n          canInviteNewParticipants: MeetingUtil.canInviteNewParticipants(\n            payload.info.userDisplayHints\n          ),\n          canAdmitParticipant: MeetingUtil.canAdmitParticipant(payload.info.userDisplayHints),\n          canLock: MeetingUtil.canUserLock(payload.info.userDisplayHints),\n          canUnlock: MeetingUtil.canUserUnlock(payload.info.userDisplayHints),\n          canSetDisallowUnmute: ControlsOptionsUtil.canSetDisallowUnmute(\n            payload.info.userDisplayHints\n          ),\n          canUnsetDisallowUnmute: ControlsOptionsUtil.canUnsetDisallowUnmute(\n            payload.info.userDisplayHints\n          ),\n          canSetMuteOnEntry: ControlsOptionsUtil.canSetMuteOnEntry(payload.info.userDisplayHints),\n          canUnsetMuteOnEntry: ControlsOptionsUtil.canUnsetMuteOnEntry(\n            payload.info.userDisplayHints\n          ),\n          canStartRecording: RecordingUtil.canUserStart(payload.info.userDisplayHints),\n          canStopRecording: RecordingUtil.canUserStop(payload.info.userDisplayHints),\n          canPauseRecording: RecordingUtil.canUserPause(payload.info.userDisplayHints),\n          canResumeRecording: RecordingUtil.canUserResume(payload.info.userDisplayHints),\n          canRaiseHand: MeetingUtil.canUserRaiseHand(payload.info.userDisplayHints),\n          canLowerAllHands: MeetingUtil.canUserLowerAllHands(payload.info.userDisplayHints),\n          canLowerSomeoneElsesHand: MeetingUtil.canUserLowerSomeoneElsesHand(\n            payload.info.userDisplayHints\n          ),\n          bothLeaveAndEndMeetingAvailable: MeetingUtil.bothLeaveAndEndMeetingAvailable(\n            payload.info.userDisplayHints\n          ),\n          canEnableClosedCaption: MeetingUtil.canEnableClosedCaption(payload.info.userDisplayHints),\n          canStartTranscribing: MeetingUtil.canStartTranscribing(payload.info.userDisplayHints),\n          canStopTranscribing: MeetingUtil.canStopTranscribing(payload.info.userDisplayHints),\n          isClosedCaptionActive: MeetingUtil.isClosedCaptionActive(payload.info.userDisplayHints),\n          isWebexAssistantActive: MeetingUtil.isWebexAssistantActive(payload.info.userDisplayHints),\n          canViewCaptionPanel: MeetingUtil.canViewCaptionPanel(payload.info.userDisplayHints),\n          isRealTimeTranslationEnabled: MeetingUtil.isRealTimeTranslationEnabled(\n            payload.info.userDisplayHints\n          ),\n          canSelectSpokenLanguages: MeetingUtil.canSelectSpokenLanguages(\n            payload.info.userDisplayHints\n          ),\n          waitingForOthersToJoin: MeetingUtil.waitingForOthersToJoin(payload.info.userDisplayHints),\n        });\n\n        this.recordingController.setDisplayHints(payload.info.userDisplayHints);\n        this.controlsOptionsManager.setDisplayHints(payload.info.userDisplayHints);\n\n        if (changed) {\n          Trigger.trigger(\n            this,\n            {\n              file: 'meeting/index',\n              function: 'setUpLocusInfoMeetingInfoListener',\n            },\n            EVENT_TRIGGERS.MEETING_ACTIONS_UPDATE,\n            this.inMeetingActions.get()\n          );\n        }\n      }\n    });\n  }\n\n  /**\n   * Set up the locus info embedded apps listener\n   * @returns {undefined}\n   * @private\n   * @memberof meeting\n   */\n  private setUpLocusEmbeddedAppsListener() {\n    this.locusInfo.on(LOCUSINFO.EVENTS.EMBEDDED_APPS_UPDATED, (embeddedApps) => {\n      if (embeddedApps) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusEmbeddedAppsListener',\n          },\n          EVENT_TRIGGERS.MEETING_EMBEDDED_APPS_UPDATE,\n          embeddedApps\n        );\n      }\n    });\n  }\n\n  /**\n   * Internal function to listen to the self object changes\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  private setUpLocusInfoSelfListener() {\n    this.locusInfo.on(LOCUSINFO.EVENTS.LOCAL_UNMUTE_REQUIRED, (payload) => {\n      if (this.audio) {\n        this.audio.handleServerLocalUnmuteRequired(this);\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoSelfListener',\n          },\n          EVENT_TRIGGERS.MEETING_SELF_UNMUTED_BY_OTHERS,\n          {\n            payload,\n          }\n        );\n      }\n    });\n    this.locusInfo.on(LOCUSINFO.EVENTS.SELF_REMOTE_MUTE_STATUS_UPDATED, (payload) => {\n      if (payload) {\n        if (this.audio) {\n          this.audio.handleServerRemoteMuteUpdate(payload.muted, payload.unmuteAllowed);\n        }\n        // with \"mute on entry\" server will send us remote mute even if we don't have media configured,\n        // so if being muted by others, always send the notification,\n        // but if being unmuted, only send it if we are also locally unmuted\n        if (payload.muted || !this.audio?.isMuted()) {\n          Trigger.trigger(\n            this,\n            {\n              file: 'meeting/index',\n              function: 'setUpLocusInfoSelfListener',\n            },\n            payload.muted\n              ? EVENT_TRIGGERS.MEETING_SELF_MUTED_BY_OTHERS\n              : EVENT_TRIGGERS.MEETING_SELF_UNMUTED_BY_OTHERS,\n            {\n              payload,\n            }\n          );\n        }\n      }\n    });\n    this.locusInfo.on(LOCUSINFO.EVENTS.LOCAL_UNMUTE_REQUESTED, (payload) => {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setUpLocusInfoSelfListener',\n        },\n        EVENT_TRIGGERS.MEETING_SELF_REQUESTED_TO_UNMUTE,\n        {\n          payload,\n        }\n      );\n    });\n    this.locusInfo.on(LOCUSINFO.EVENTS.SELF_UNADMITTED_GUEST, (payload) => {\n      if (payload) {\n        this.startKeepAlive();\n\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoSelfListener',\n          },\n          EVENT_TRIGGERS.MEETING_SELF_LOBBY_WAITING,\n          {\n            payload,\n          }\n        );\n\n        Metrics.postEvent({\n          event: eventType.LOBBY_ENTERED,\n          meeting: this,\n        });\n      }\n    });\n    this.locusInfo.on(LOCUSINFO.EVENTS.SELF_ADMITTED_GUEST, (payload) => {\n      this.stopKeepAlive();\n\n      if (payload) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoSelfListener',\n          },\n          EVENT_TRIGGERS.MEETING_SELF_GUEST_ADMITTED,\n          {\n            payload,\n          }\n        );\n\n        Metrics.postEvent({\n          event: eventType.LOBBY_EXITED,\n          meeting: this,\n        });\n      }\n    });\n\n    // @ts-ignore - check if MEDIA_INACTIVITY exists\n    this.locusInfo.on(LOCUSINFO.EVENTS.MEDIA_INACTIVITY, () => {\n      Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.MEETING_MEDIA_INACTIVE, {\n        correlation_id: this.correlationId,\n        locus_id: this.locusId,\n      });\n      this.reconnect();\n    });\n\n    // There is two stats for mute one is the actual media being sent or received\n    // The second on is if the audio is muted, we need to tell the statsAnalyzer when\n    // the audio is muted or the user is not willing to send media\n    this.locusInfo.on(LOCUSINFO.EVENTS.MEDIA_STATUS_CHANGE, (status) => {\n      if (this.statsAnalyzer) {\n        this.statsAnalyzer.updateMediaStatus({\n          actual: status,\n          expected: {\n            // We need to check what should be the actual direction of media\n            sendAudio: this.mediaProperties.mediaDirection?.sendAudio && !this.audio?.isMuted(),\n            sendVideo: this.mediaProperties.mediaDirection?.sendVideo && !this.video?.isMuted(),\n            sendShare: this.mediaProperties.mediaDirection?.sendShare,\n            receiveAudio: this.mediaProperties.mediaDirection?.receiveAudio,\n            receiveVideo: this.mediaProperties.mediaDirection?.receiveVideo,\n            receiveShare: this.mediaProperties.mediaDirection?.receiveShare,\n          },\n        });\n      }\n    });\n\n    this.locusInfo.on(LOCUSINFO.EVENTS.SELF_CANNOT_VIEW_PARTICIPANT_LIST_CHANGE, (payload) => {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setUpLocusInfoSelfListener',\n        },\n        EVENT_TRIGGERS.MEETING_SELF_CANNOT_VIEW_PARTICIPANT_LIST,\n        {\n          payload,\n        }\n      );\n    });\n\n    this.locusInfo.on(LOCUSINFO.EVENTS.SELF_IS_SHARING_BLOCKED_CHANGE, (payload) => {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setUpLocusInfoSelfListener',\n        },\n        EVENT_TRIGGERS.MEETING_SELF_IS_SHARING_BLOCKED,\n        {\n          payload,\n        }\n      );\n    });\n  }\n\n  /**\n   * Add LocusInfo nested object listeners (from child to parent)\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  private setUpLocusInfoMeetingListener() {\n    this.locusInfo.on(EVENTS.REMOTE_RESPONSE, (payload) => {\n      this.meetingFiniteStateMachine.remote(payload);\n\n      if (payload.remoteDeclined) {\n        this.leave({reason: payload.reason})\n          .then(() => {\n            LoggerProxy.logger.info(\n              'Meeting:index#setUpLocusInfoMeetingListener --> REMOTE_RESPONSE. Attempting to leave meeting.'\n            );\n          })\n          .catch((error) => {\n            // @ts-ignore\n            LoggerProxy.logger.error(\n              `Meeting:index#setUpLocusInfoMeetingListener --> REMOTE_RESPONSE. Issue with leave for meeting, meeting still in collection: ${this}, error: ${error}`\n            );\n          });\n      }\n    });\n    this.locusInfo.on(EVENTS.DESTROY_MEETING, (payload) => {\n      // if self state is NOT left\n\n      // TODO: Handle sharing and wireless sharing when meeting end\n      if (this.wirelessShare) {\n        if (this.mediaProperties.shareTrack) {\n          this.mediaProperties.shareTrack.onended = null;\n          this.mediaProperties.shareTrack.stop();\n        }\n      }\n      // when multiple WEB deviceType join with same user\n      // and some of the devices are joined and some are left\n      // when your own device is still connected you want to leave and destroy\n      // else you want to just destroy\n      // this looks odd because when it leaves it should destroy, but we get a\n      // leave response and we should destroy it on the next event loop\n      // the leave response gets parsed and we decide if we want to destroy the meeting\n      // the first time we just leave it, the second time it comes it destroys it from the collection\n      if (payload.shouldLeave) {\n        // TODO:  We should do cleaning of meeting object if the shouldLeave: false because there might be meeting object which we are not cleaning\n\n        this.leave({reason: payload.reason})\n          .then(() => {\n            LoggerProxy.logger.warn(\n              'Meeting:index#setUpLocusInfoMeetingListener --> DESTROY_MEETING. The meeting has been left, but has not been destroyed, you should see a later event for leave.'\n            );\n          })\n          .catch((error) => {\n            // @ts-ignore\n            LoggerProxy.logger.error(\n              `Meeting:index#setUpLocusInfoMeetingListener --> DESTROY_MEETING. Issue with leave for meeting, meeting still in collection: ${this}, error: ${error}`\n            );\n          });\n      } else {\n        LoggerProxy.logger.info(\n          'Meeting:index#setUpLocusInfoMeetingListener --> MEETING_REMOVED_REASON',\n          payload.reason\n        );\n\n        MeetingUtil.cleanUp(this);\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoMeetingListener',\n          },\n          EVENTS.DESTROY_MEETING,\n          {\n            reason: payload.reason,\n            meetingId: this.id,\n          }\n        );\n      }\n    });\n  }\n\n  /**\n   * Set meeting values rather than events\n   * @param {Object} object\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   * // TODO: is this function necessary?\n   */\n  private updateMeetingObject(object: object) {\n    // Validate if these are valid meeting object property\n    // TODO: add a check to make sure the value passed in the constructor\n    // is not changed by any delta event\n    if (object && Object.keys(object).length) {\n      Object.keys(object).forEach((key) => {\n        this[key] = object[key];\n      });\n    }\n  }\n\n  /**\n   * Invite a guest to the call that isn't normally part of this call\n   * @param {Object} invitee\n   * @param {String} invitee.emailAddress\n   * @param {String} invitee.email\n   * @param {String} invitee.phoneNumber\n   * @param {Boolean} [alertIfActive]\n   * @returns {Promise} see #members.addMember\n   * @public\n   * @memberof Meeting\n   */\n  public invite(\n    invitee: {\n      emailAddress: string;\n      email: string;\n      phoneNumber: string;\n    },\n    alertIfActive = true\n  ) {\n    return this.members.addMember(invitee, alertIfActive);\n  }\n\n  /**\n   * Cancel an outgoing phone call invitation made during a meeting\n   * @param {Object} invitee\n   * @param {String} invitee.phoneNumber\n   * @returns {Promise} see #members.cancelPhoneInvite\n   * @public\n   * @memberof Meeting\n   */\n  public cancelPhoneInvite(invitee: {phoneNumber: string}) {\n    return this.members.cancelPhoneInvite(invitee);\n  }\n\n  /**\n   * Admit the guest(s) to the call once they are waiting\n   * @param {Array} memberIds\n   * @returns {Promise} see #members.admitMembers\n   * @public\n   * @memberof Meeting\n   */\n  public admit(memberIds: Array<any>) {\n    return this.members.admitMembers(memberIds);\n  }\n\n  /**\n   * Remove the member from the meeting, boot them\n   * @param {String} memberId\n   * @returns {Promise} see #members.removeMember\n   * @public\n   * @memberof Meeting\n   */\n  public remove(memberId: string) {\n    return this.members.removeMember(memberId);\n  }\n\n  /**\n   * Mute another member from the meeting\n   * @param {String} memberId\n   * @param {Boolean} mute\n   * @returns {Promise} see #members.muteMember\n   * @public\n   * @memberof Meeting\n   */\n  public mute(memberId: string, mute = true) {\n    return this.members.muteMember(memberId, mute);\n  }\n\n  /**\n   * Transfer the moderator role to another eligible member\n   * @param {String} memberId\n   * @param {Boolean} moderator\n   * @returns {Promise} see #members.transferHostToMember\n   * @public\n   * @memberof Meeting\n   */\n  public transfer(memberId: string, moderator = true) {\n    return this.members.transferHostToMember(memberId, moderator);\n  }\n\n  /**\n   * Reference to the Members object\n   * @returns {Members}\n   * @public\n   * @memberof Meeting\n   */\n  public getMembers() {\n    return this.members;\n  }\n\n  /**\n   * Truthy when a meeting has an audio connection established\n   * @returns {Boolean}  true if meeting audio is connected otherwise false\n   * @public\n   * @memberof Meeting\n   */\n  public isAudioConnected() {\n    return !!this.audio;\n  }\n\n  /**\n   * Convenience function to tell whether a meeting is muted\n   * @returns {Boolean} if meeting audio muted or not\n   * @public\n   * @memberof Meeting\n   */\n  public isAudioMuted() {\n    return this.audio && this.audio.isMuted();\n  }\n\n  /**\n   * Convenience function to tell if the end user last changed the audio state\n   * @returns {Boolean} if audio was manipulated by the end user\n   * @public\n   * @memberof Meeting\n   */\n  public isAudioSelf() {\n    return this.audio && this.audio.isSelf();\n  }\n\n  /**\n   * Truthy when a meeting has a video connection established\n   * @returns {Boolean} true if meeting video connected otherwise false\n   * @public\n   * @memberof Meeting\n   */\n  public isVideoConnected() {\n    return !!this.video;\n  }\n\n  /**\n   * Convenience function to tell whether video is muted\n   * @returns {Boolean} if meeting video is muted or not\n   * @public\n   * @memberof Meeting\n   */\n  public isVideoMuted() {\n    return this.video && this.video.isMuted();\n  }\n\n  /**\n   * Convenience function to tell whether the end user changed the video state\n   * @returns {Boolean} if meeting video is muted or not\n   * @public\n   * @memberof Meeting\n   */\n  public isVideoSelf() {\n    return this.video && this.video.isSelf();\n  }\n\n  /**\n   * Sets the meeting info on the class instance\n   * @param {Object} meetingInfo\n   * @param {Object} meetingInfo.body\n   * @param {String} meetingInfo.body.conversationUrl\n   * @param {String} meetingInfo.body.locusUrl\n   * @param {String} meetingInfo.body.sipUri\n   * @param {Object} meetingInfo.body.owner\n   * @param {Object | String} destination locus object with meeting data or destination string (sip url, meeting link, etc)\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  parseMeetingInfo(\n    meetingInfo:\n      | {\n          body: {\n            conversationUrl: string;\n            locusUrl: string;\n            sipUri: string;\n            owner: object;\n          };\n        }\n      | any,\n    destination: object | string | null = null\n  ) {\n    const webexMeetingInfo = meetingInfo?.body;\n    // We try to use as much info from Locus meeting object, stored in destination\n\n    let locusMeetingObject;\n\n    if (destination) {\n      locusMeetingObject = typeof destination === 'object' ? destination : undefined;\n    }\n\n    // MeetingInfo will be undefined for 1:1 calls\n    if (\n      locusMeetingObject ||\n      (webexMeetingInfo && !(meetingInfo?.errors && meetingInfo?.errors.length > 0))\n    ) {\n      this.conversationUrl =\n        locusMeetingObject?.conversationUrl ||\n        webexMeetingInfo?.conversationUrl ||\n        this.conversationUrl;\n      this.locusUrl = locusMeetingObject?.url || webexMeetingInfo?.locusUrl || this.locusUrl;\n      // @ts-ignore - config coming from registerPlugin\n      this.setSipUri(\n        // @ts-ignore\n        this.config.experimental.enableUnifiedMeetings\n          ? locusMeetingObject?.info.sipUri || webexMeetingInfo?.sipUrl\n          : locusMeetingObject?.info.sipUri || webexMeetingInfo?.sipMeetingUri || this.sipUri\n      );\n      // @ts-ignore - config coming from registerPlugin\n      if (this.config.experimental.enableUnifiedMeetings) {\n        this.meetingNumber =\n          locusMeetingObject?.info.webExMeetingId || webexMeetingInfo?.meetingNumber;\n        this.meetingJoinUrl = webexMeetingInfo?.meetingJoinUrl;\n      }\n      this.owner =\n        locusMeetingObject?.info.owner ||\n        webexMeetingInfo?.owner ||\n        webexMeetingInfo?.hostId ||\n        this.owner;\n      this.permissionToken = webexMeetingInfo?.permissionToken;\n    }\n  }\n\n  /**\n   * Sets the first locus info on the class instance\n   * @param {Object} locus\n   * @param {String} locus.url\n   * @param {Array} locus.participants\n   * @param {Object} locus.self\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  private parseLocus(locus: {url: string; participants: Array<any>; self: object}) {\n    if (locus) {\n      this.locusUrl = locus.url;\n      // TODO: move this to parse participants module\n      this.setLocus(locus);\n\n      // check if we can extract this info from partner\n      // Parsing of locus object must be finished at this state\n      if (locus.participants && locus.self) {\n        this.partner = MeetingUtil.getLocusPartner(locus.participants, locus.self);\n      }\n\n      // For webex meeting the sipUrl gets updated in info parser\n      if (!this.sipUri && this.partner && this.type === _CALL_) {\n        this.setSipUri(this.partner.person.sipUrl || this.partner.person.id);\n      }\n    }\n  }\n\n  /**\n   * Sets the sip uri on the class instance\n   * uses meeting info as precedence\n   * @param {String} sipUri\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setSipUri(sipUri: string) {\n    // This can be tel no, device id or a sip uri, user Id\n    this.sipUri = sipUri;\n  }\n\n  /**\n   * Set the roap seq on the class instance\n   * @param {Number} seq\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setRoapSeq(seq: number) {\n    if (seq >= 0) {\n      this.roapSeq = seq;\n    }\n  }\n\n  /**\n   * Set the locus info the class instance\n   * @param {Object} locus\n   * @param {Array} locus.mediaConnections\n   * @param {String} locus.locusUrl\n   * @param {String} locus.locusId\n   * @param {String} locus.mediaId\n   * @param {Object} locus.host\n   * @todo change name to genertic parser\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  private setLocus(\n    locus:\n      | {\n          mediaConnections: Array<any>;\n          locusUrl: string;\n          locusId: string;\n          mediaId: string;\n          host: object;\n        }\n      | any\n  ) {\n    const mtgLocus: any = locus.locus || locus;\n\n    // LocusInfo object saves the locus object\n    // this.locus = mtgLocus;\n    this.mediaConnections = locus.mediaConnections;\n    this.locusUrl = locus.locusUrl || locus.url;\n    this.locusId = locus.locusId;\n    this.selfId = locus.selfId;\n    // @ts-ignore\n    this.mediaId = locus.mediaId;\n    this.hostId = mtgLocus.host ? mtgLocus.host.id : this.hostId;\n    this.locusInfo.initialSetup(mtgLocus);\n  }\n\n  /**\n   * Sets the remote stream on the class instance and emits and\n   * event to developers\n   * @param {Object} pc The remote stream peer connection\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  public setRemoteStream(pc: any) {\n    if (!pc) {\n      return;\n    }\n    // eslint-disable-next-line no-param-reassign\n    pc.ontrack = (event) => {\n      // eslint-disable-next-line no-warning-comments\n      // TODO: It's possible for media to not be present\n      // so we might need to either\n      // A) wait until we have media flowing\n      // B) trigger a second event when video is flowing\n      LoggerProxy.logger.log(\n        `Meeting:index#setRemoteStream --> ontrack event received for peerConnection: ${event}`\n      );\n\n      const MEDIA_ID = {\n        AUDIO_TRACK: '0',\n        VIDEO_TRACK: '1',\n        SHARE_TRACK: '2',\n      };\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      let eventType = null;\n      const mediaTrack = event.track;\n      let trackMediaID = null;\n\n      // In case of safari some time the transceiver is not present for specific os version\n      // sdk tries to determine the transceive using the track id present\n      if (event.transceiver && event.transceiver.mid) {\n        trackMediaID = event.transceiver.mid;\n      } else {\n        const {audioTransceiver, videoTransceiver, shareTransceiver} = event.target;\n\n        // audio kind indicates its a audio stream\n        if (mediaTrack.id === audioTransceiver.receiver.track.id) {\n          trackMediaID = '0';\n        } else if (mediaTrack.id === videoTransceiver.receiver.track.id) {\n          trackMediaID = '1';\n        } else if (mediaTrack.id === shareTransceiver.receiver.track.id) {\n          trackMediaID = '2';\n        } else {\n          trackMediaID = null;\n          Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.MUTE_AUDIO_FAILURE, {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n          });\n        }\n      }\n\n      switch (trackMediaID) {\n        case MEDIA_ID.AUDIO_TRACK:\n          eventType = EVENT_TYPES.REMOTE_AUDIO;\n          this.mediaProperties.setRemoteAudioTrack(mediaTrack);\n          break;\n        case MEDIA_ID.VIDEO_TRACK:\n          eventType = EVENT_TYPES.REMOTE_VIDEO;\n          this.mediaProperties.setRemoteVideoTrack(mediaTrack);\n          break;\n        case MEDIA_ID.SHARE_TRACK:\n          if (event.track) {\n            eventType = EVENT_TYPES.REMOTE_SHARE;\n            this.mediaProperties.setRemoteShare(mediaTrack);\n          }\n          break;\n        default: {\n          LoggerProxy.logger.log('Meeting:index#setRemoteStream --> no matching media track id');\n        }\n      }\n\n      // start stats here the stats are coming null if you dont receive streams\n\n      this.statsAnalyzer.startAnalyzer(this.mediaProperties.peerConnection);\n\n      if (eventType && mediaTrack) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setRemoteStream:pc.ontrack',\n          },\n          EVENT_TRIGGERS.MEDIA_READY,\n          {\n            type: eventType,\n            stream: MediaUtil.createMediaStream([mediaTrack]),\n          }\n        );\n      }\n    };\n  }\n\n  /**\n   * Upload logs for the current meeting\n   * @param {object} options file name and function name\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  public uploadLogs(options: object = {file: 'meeting/index', function: 'uploadLogs'}) {\n    Trigger.trigger(this, options, EVENTS.REQUEST_UPLOAD_LOGS, this);\n  }\n\n  /**\n   * Removes remote audio and video stream on the class instance and triggers an event\n   * to developers\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   * @deprecated after v1.89.3\n   */\n  public unsetRemoteStream() {\n    LoggerProxy.logger.warn(\n      'Meeting:index#unsetRemoteStream --> [DEPRECATION WARNING]: unsetRemoteStream has been deprecated after v1.89.3'\n    );\n    this.mediaProperties.unsetRemoteMedia();\n  }\n\n  /**\n   * Removes remote audio, video and share tracks from class instance's mediaProperties\n   * @returns {undefined}\n   */\n  unsetRemoteTracks() {\n    this.mediaProperties.unsetRemoteTracks();\n  }\n\n  /**\n   * Removes the remote stream on the class instance and triggers an event\n   * to developers\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   * @deprecated after v1.89.3\n   */\n  public closeRemoteStream() {\n    LoggerProxy.logger.warn(\n      'Meeting:index#closeRemoteStream --> [DEPRECATION WARNING]: closeRemoteStream has been deprecated after v1.89.3'\n    );\n    this.closeRemoteTracks();\n  }\n\n  /**\n   * Removes the remote tracks on the class instance and triggers an event\n   * to developers\n   * @returns {undefined}\n   * @memberof Meeting\n   */\n  closeRemoteTracks() {\n    const {remoteAudioTrack, remoteVideoTrack, remoteShare} = this.mediaProperties;\n\n    /**\n     * Triggers an event to the developer\n     * @param {string} mediaType Type of media that was stopped\n     * @returns {void}\n     * @inner\n     */\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const triggerMediaStoppedEvent = (mediaType: string) => {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'closeRemoteTracks',\n        },\n        EVENT_TRIGGERS.MEDIA_STOPPED,\n        {\n          type: mediaType,\n        }\n      );\n    };\n\n    /**\n     * Stops a media track and emits an event\n     * @param {MediaStreamTrack} track Media track to stop\n     * @param {string} type Media track type\n     * @returns {Promise}\n     * @inner\n     */\n    // eslint-disable-next-line arrow-body-style\n    const stopTrack = (track: MediaStreamTrack, type: string) => {\n      return Media.stopTracks(track).then(() => {\n        const isTrackStopped = track && track.readyState === ENDED;\n        const isWrongReadyState = track && !isTrackStopped;\n\n        if (isTrackStopped) {\n          triggerMediaStoppedEvent(type);\n        } else if (isWrongReadyState) {\n          LoggerProxy.logger.warn(\n            `Meeting:index#closeRemoteTracks --> Error: MediaStreamTrack.readyState is ${track.readyState} for ${type}`\n          );\n        }\n      });\n    };\n\n    return Promise.all([\n      stopTrack(remoteAudioTrack, EVENT_TYPES.REMOTE_AUDIO),\n      stopTrack(remoteVideoTrack, EVENT_TYPES.REMOTE_VIDEO),\n      stopTrack(remoteShare, EVENT_TYPES.REMOTE_SHARE),\n    ]);\n  }\n\n  /**\n   * Emits the 'media:ready' event with a local stream that consists of 1 local audio and 1 local video track\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  private sendLocalMediaReadyEvent() {\n    Trigger.trigger(\n      this,\n      {\n        file: 'meeting/index',\n        function: 'setLocalTracks',\n      },\n      EVENT_TRIGGERS.MEDIA_READY,\n      {\n        type: EVENT_TYPES.LOCAL,\n        stream: MediaUtil.createMediaStream([\n          this.mediaProperties.audioTrack,\n          this.mediaProperties.videoTrack,\n        ]),\n      }\n    );\n  }\n\n  /**\n   * Sets the local audio track on the class and emits an event to the developer\n   * @param {MediaStreamTrack} audioTrack\n   * @param {Boolean} emitEvent if true, a media ready event is emitted to the developer\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  private setLocalAudioTrack(audioTrack: MediaStreamTrack, emitEvent = true) {\n    if (audioTrack) {\n      const settings = audioTrack.getSettings();\n\n      this.mediaProperties.setMediaSettings('audio', {\n        echoCancellation: settings.echoCancellation,\n        noiseSuppression: settings.noiseSuppression,\n      });\n\n      LoggerProxy.logger.log(\n        'Meeting:index#setLocalAudioTrack --> Audio settings.',\n        JSON.stringify(this.mediaProperties.mediaSettings.audio)\n      );\n      this.mediaProperties.setLocalAudioTrack(audioTrack);\n      if (this.audio) this.audio.applyClientStateLocally(this);\n    }\n\n    if (emitEvent) {\n      this.sendLocalMediaReadyEvent();\n    }\n  }\n\n  /**\n   * Sets the local video track on the class and emits an event to the developer\n   * @param {MediaStreamTrack} videoTrack\n   * @param {Boolean} emitEvent if true, a media ready event is emitted to the developer\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  private setLocalVideoTrack(videoTrack: MediaStreamTrack, emitEvent = true) {\n    if (videoTrack) {\n      const {aspectRatio, frameRate, height, width, deviceId} = videoTrack.getSettings();\n\n      const {localQualityLevel} = this.mediaProperties;\n\n      if (Number(localQualityLevel.slice(0, -1)) > height) {\n        LoggerProxy.logger\n          .warn(`Meeting:index#setLocalVideoTrack --> Local video quality of ${localQualityLevel} not supported,\n         downscaling to highest possible resolution of ${height}p`);\n\n        this.mediaProperties.setLocalQualityLevel(`${height}p`);\n      }\n\n      this.mediaProperties.setLocalVideoTrack(videoTrack);\n      if (this.video) this.video.applyClientStateLocally(this);\n\n      this.mediaProperties.setMediaSettings('video', {\n        aspectRatio,\n        frameRate,\n        height,\n        width,\n      });\n      // store and save the selected video input device\n      if (deviceId) {\n        this.mediaProperties.setVideoDeviceId(deviceId);\n      }\n      LoggerProxy.logger.log(\n        'Meeting:index#setLocalVideoTrack --> Video settings.',\n        JSON.stringify(this.mediaProperties.mediaSettings.video)\n      );\n    }\n\n    if (emitEvent) {\n      this.sendLocalMediaReadyEvent();\n    }\n  }\n\n  /**\n   * Sets the local media stream on the class and emits an event to the developer\n   * @param {Stream} localStream the local media stream\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  public setLocalTracks(localStream: any) {\n    if (localStream) {\n      const {audioTrack, videoTrack} = MeetingUtil.getTrack(localStream);\n\n      this.setLocalAudioTrack(audioTrack, false);\n      this.setLocalVideoTrack(videoTrack, false);\n\n      this.sendLocalMediaReadyEvent();\n    }\n  }\n\n  /**\n   * Sets the local media stream on the class and emits an event to the developer\n   * @param {MediaStream} localShare the local media stream\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  public setLocalShareTrack(localShare: MediaStream) {\n    let settings = null;\n\n    if (localShare) {\n      this.mediaProperties.setLocalShareTrack(MeetingUtil.getTrack(localShare).videoTrack);\n      const contentTracks = this.mediaProperties.shareTrack;\n\n      if (contentTracks) {\n        settings = contentTracks.getSettings();\n        this.mediaProperties.setMediaSettings('screen', {\n          aspectRatio: settings.aspectRatio,\n          frameRate: settings.frameRate,\n          height: settings.height,\n          width: settings.width,\n          displaySurface: settings.displaySurface,\n          cursor: settings.cursor,\n        });\n        LoggerProxy.logger.log(\n          'Meeting:index#setLocalShareTrack --> Screen settings.',\n          JSON.stringify(this.mediaProperties.mediaSettings.screen)\n        );\n      }\n\n      contentTracks.onended = () => this.handleShareTrackEnded(localShare);\n\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setLocalShareTrack',\n        },\n        EVENT_TRIGGERS.MEDIA_READY,\n        {\n          type: EVENT_TYPES.LOCAL_SHARE,\n          stream: localShare,\n        }\n      );\n    }\n  }\n\n  /**\n   * Closes the local stream from the class and emits an event to the developer\n   * @returns {undefined}\n   * @event media:stopped\n   * @public\n   * @memberof Meeting\n   */\n  public closeLocalStream() {\n    const {audioTrack, videoTrack} = this.mediaProperties;\n\n    return Media.stopTracks(audioTrack)\n      .then(() => Media.stopTracks(videoTrack))\n      .then(() => {\n        const audioStopped = audioTrack && audioTrack.readyState === ENDED;\n        const videoStopped = videoTrack && videoTrack.readyState === ENDED;\n\n        // triggers event for audio and video stop , sometime either audio or video one of them exists\n        if (audioStopped || videoStopped) {\n          Trigger.trigger(\n            this,\n            {\n              file: 'meeting/index',\n              function: 'closeLocalStream',\n            },\n            EVENT_TRIGGERS.MEDIA_STOPPED,\n            {\n              type: EVENT_TYPES.LOCAL,\n            }\n          );\n        } else if (audioTrack || videoTrack) {\n          LoggerProxy.logger.warn(\n            'Meeting:index#closeLocalStream --> Warning: track might already been ended or unavaliable.'\n          );\n        }\n      });\n  }\n\n  /**\n   * Closes the local stream from the class and emits an event to the developer\n   * @returns {undefined}\n   * @event media:stopped\n   * @public\n   * @memberof Meeting\n   */\n  public closeLocalShare() {\n    const track = this.mediaProperties.shareTrack;\n\n    return Media.stopTracks(track).then(() => {\n      if (track && track.readyState === ENDED) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'closeLocalShare',\n          },\n          EVENT_TRIGGERS.MEDIA_STOPPED,\n          {\n            type: EVENT_TYPES.LOCAL_SHARE,\n          }\n        );\n      } else if (track) {\n        // Track exists but with wrong readyState\n        LoggerProxy.logger.warn(\n          `Meeting:index#closeLocalShare --> Error: MediaStreamTrack.readyState is ${track.readyState} for localShare`\n        );\n      }\n    });\n  }\n\n  /**\n   * Removes the local stream from the class and emits an event to the developer\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  public unsetLocalVideoTrack() {\n    this.mediaProperties.unsetLocalVideoTrack();\n  }\n\n  /**\n   * Removes the local share from the class and emits an event to the developer\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  public unsetLocalShareTrack() {\n    this.mediaProperties.unsetLocalShareTrack();\n  }\n\n  /**\n   * sets up listner for mercury event\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  public setMercuryListener() {\n    // Client will have a socket manager and handle reconnecting to mercury, when we reconnect to mercury\n    // if the meeting has active peer connections, it should try to reconnect.\n    // @ts-ignore\n    this.webex.internal.mercury.on(ONLINE, () => {\n      LoggerProxy.logger.info('Meeting:index#setMercuryListener --> Web socket online');\n\n      // Only send restore event when it was disconnected before and for connected later\n      if (!this.hasWebsocketConnected) {\n        Metrics.postEvent({\n          event: eventType.MERCURY_CONNECTION_RESTORED,\n          meeting: this,\n        });\n        Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.MERCURY_CONNECTION_RESTORED, {\n          correlation_id: this.correlationId,\n        });\n      }\n      this.hasWebsocketConnected = true;\n    });\n\n    // @ts-ignore\n    this.webex.internal.mercury.on(OFFLINE, () => {\n      LoggerProxy.logger.error('Meeting:index#setMercuryListener --> Web socket offline');\n      Metrics.postEvent({\n        event: eventType.MERCURY_CONNECTION_LOST,\n        meeting: this,\n      });\n      Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.MERCURY_CONNECTION_FAILURE, {\n        correlation_id: this.correlationId,\n      });\n    });\n  }\n\n  /**\n   * Close the peer connections and remove them from the class. Triggers an event\n   * when each is closed.\n   * @returns {Promise} returns a resolved promise with an array of closed peer connections\n   * @public\n   * @memberof Meeting\n   */\n  public closePeerConnections() {\n    return PeerConnectionManager.close(this.mediaProperties.peerConnection);\n  }\n\n  /**\n   * Unsets the peer connections on the class\n   * warning DO NOT CALL WITHOUT CLOSING PEER CONNECTIONS FIRST\n   * @param {PeerConnection} peerConnection\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  public unsetPeerConnections() {\n    this.mediaProperties.unsetPeerConnection();\n    // @ts-ignore - config coming from registerPlugin\n    if (this.config.reconnection.detection) {\n      // @ts-ignore\n      this.webex.internal.mercury.off(ONLINE);\n    }\n  }\n\n  /**\n   * Convenience method to set the correlation id for the Meeting\n   * @param {String} id correlation id to set on the class\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  private setCorrelationId(id: string) {\n    this.correlationId = id;\n  }\n\n  /**\n   * Mute the audio for a meeting\n   * @returns {Promise} resolves the data from muting audio {mute, self} or rejects if there is no audio set\n   * @public\n   * @memberof Meeting\n   */\n  public muteAudio() {\n    if (!MeetingUtil.isUserInJoinedState(this.locusInfo)) {\n      return Promise.reject(new UserNotJoinedError());\n    }\n\n    // @ts-ignore\n    if (!this.mediaId) {\n      // Happens when addMedia and mute are triggered in succession\n      return Promise.reject(new NoMediaEstablishedYetError());\n    }\n\n    if (!this.audio) {\n      return Promise.reject(new ParameterError('no audio control associated to the meeting'));\n    }\n\n    const LOG_HEADER = 'Meeting:index#muteAudio -->';\n\n    // First, stop sending the local audio media\n    return logRequest(\n      this.audio\n        .handleClientRequest(this, true)\n        .then(() => {\n          MeetingUtil.handleAudioLogging(this.mediaProperties.audioTrack);\n          Metrics.postEvent({\n            event: eventType.MUTED,\n            meeting: this,\n            data: {trigger: trigger.USER_INTERACTION, mediaType: mediaType.AUDIO},\n          });\n        })\n        .catch((error) => {\n          Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.MUTE_AUDIO_FAILURE, {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack,\n          });\n\n          throw error;\n        }),\n      {\n        header: `${LOG_HEADER} muting audio`,\n        success: `${LOG_HEADER} muted audio successfully`,\n        failure: `${LOG_HEADER} muting audio failed, `,\n      }\n    );\n  }\n\n  /**\n   * Unmute meeting audio\n   * @returns {Promise} resolves data from muting audio {mute, self} or rejects if there is no audio set\n   * @public\n   * @memberof Meeting\n   */\n  public unmuteAudio() {\n    if (!MeetingUtil.isUserInJoinedState(this.locusInfo)) {\n      return Promise.reject(new UserNotJoinedError());\n    }\n\n    // @ts-ignore\n    if (!this.mediaId) {\n      // Happens when addMedia and mute are triggered in succession\n      return Promise.reject(new NoMediaEstablishedYetError());\n    }\n\n    if (!this.audio) {\n      return Promise.reject(new ParameterError('no audio control associated to the meeting'));\n    }\n\n    const LOG_HEADER = 'Meeting:index#unmuteAudio -->';\n\n    // First, send the control to unmute the participant on the server\n    return logRequest(\n      this.audio\n        .handleClientRequest(this, false)\n        .then(() => {\n          MeetingUtil.handleAudioLogging(this.mediaProperties.audioTrack);\n          Metrics.postEvent({\n            event: eventType.UNMUTED,\n            meeting: this,\n            data: {trigger: trigger.USER_INTERACTION, mediaType: mediaType.AUDIO},\n          });\n        })\n        .catch((error) => {\n          Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.UNMUTE_AUDIO_FAILURE, {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack,\n          });\n\n          throw error;\n        }),\n      {\n        header: `${LOG_HEADER} unmuting audio`,\n        success: `${LOG_HEADER} unmuted audio successfully`,\n        failure: `${LOG_HEADER} unmuting audio failed, `,\n      }\n    );\n  }\n\n  /**\n   * Mute the video for a meeting\n   * @returns {Promise} resolves data from muting video {mute, self} or rejects if there is no video set\n   * @public\n   * @memberof Meeting\n   */\n  public muteVideo() {\n    if (!MeetingUtil.isUserInJoinedState(this.locusInfo)) {\n      return Promise.reject(new UserNotJoinedError());\n    }\n\n    // @ts-ignore\n    if (!this.mediaId) {\n      // Happens when addMedia and mute are triggered in succession\n      return Promise.reject(new NoMediaEstablishedYetError());\n    }\n\n    if (!this.video) {\n      return Promise.reject(new ParameterError('no video control associated to the meeting'));\n    }\n\n    const LOG_HEADER = 'Meeting:index#muteVideo -->';\n\n    return logRequest(\n      this.video\n        .handleClientRequest(this, true)\n        .then(() => {\n          MeetingUtil.handleVideoLogging(this.mediaProperties.videoTrack);\n          Metrics.postEvent({\n            event: eventType.MUTED,\n            meeting: this,\n            data: {trigger: trigger.USER_INTERACTION, mediaType: mediaType.VIDEO},\n          });\n        })\n        .catch((error) => {\n          Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.MUTE_VIDEO_FAILURE, {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack,\n          });\n\n          throw error;\n        }),\n      {\n        header: `${LOG_HEADER} muting video`,\n        success: `${LOG_HEADER} muted video successfully`,\n        failure: `${LOG_HEADER} muting video failed, `,\n      }\n    );\n  }\n\n  /**\n   * Unmute meeting video\n   * @returns {Promise} resolves data from muting video {mute, self} or rejects if there is no video set\n   * @public\n   * @memberof Meeting\n   */\n  public unmuteVideo() {\n    if (!MeetingUtil.isUserInJoinedState(this.locusInfo)) {\n      return Promise.reject(new UserNotJoinedError());\n    }\n\n    // @ts-ignore\n    if (!this.mediaId) {\n      // Happens when addMedia and mute are triggered in succession\n      return Promise.reject(new NoMediaEstablishedYetError());\n    }\n\n    if (!this.video) {\n      return Promise.reject(new ParameterError('no audio control associated to the meeting'));\n    }\n\n    const LOG_HEADER = 'Meeting:index#unmuteVideo -->';\n\n    return logRequest(\n      this.video\n        .handleClientRequest(this, false)\n        .then(() => {\n          MeetingUtil.handleVideoLogging(this.mediaProperties.videoTrack);\n          Metrics.postEvent({\n            event: eventType.UNMUTED,\n            meeting: this,\n            data: {trigger: trigger.USER_INTERACTION, mediaType: mediaType.VIDEO},\n          });\n        })\n        .catch((error) => {\n          Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.UNMUTE_VIDEO_FAILURE, {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack,\n          });\n\n          throw error;\n        }),\n      {\n        header: `${LOG_HEADER} unmuting video`,\n        success: `${LOG_HEADER} unmuted video successfully`,\n        failure: `${LOG_HEADER} unmuting video failed, `,\n      }\n    );\n  }\n\n  /**\n   * Shorthand function to join AND set up media\n   * @param {Object} options - options to join with media\n   * @param {JoinOptions} [options.joinOptions] - see #join()\n   * @param {MediaDirection} options.mediaSettings - see #addMedia()\n   * @param {AudioVideo} [options.audioVideoOptions] - see #getMediaStreams()\n   * @returns {Promise} -- {join: see join(), media: see addMedia(), local: see getMediaStreams()}\n   * @public\n   * @memberof Meeting\n   * @example\n   * joinWithMedia({\n   *  joinOptions: {resourceId: 'resourceId' },\n   *  mediaSettings: {\n   *   sendAudio: true,\n   *   sendVideo: true,\n   *   sendShare: false,\n   *   receiveVideo:true,\n   *   receiveAudio: true,\n   *   receiveShare: true\n   * }\n   * audioVideoOptions: {\n   *   audio: 'audioDeviceId',\n   *   video: 'videoDeviceId'\n   * }})\n   */\n  public joinWithMedia(\n    options: {\n      joinOptions?: any;\n      mediaSettings: any;\n      audioVideoOptions?: any;\n    } = {} as any\n  ) {\n    // TODO: add validations for parameters\n    const {mediaSettings, joinOptions, audioVideoOptions} = options;\n\n    return this.join(joinOptions)\n      .then((joinResponse) =>\n        this.getMediaStreams(mediaSettings, audioVideoOptions).then(([localStream, localShare]) =>\n          this.addMedia({\n            mediaSettings,\n            localShare,\n            localStream,\n          }).then((mediaResponse) => ({\n            join: joinResponse,\n            media: mediaResponse,\n            local: [localStream, localShare],\n          }))\n        )\n      )\n      .catch((error) => {\n        LoggerProxy.logger.error('Meeting:index#joinWithMedia --> ', error);\n\n        Metrics.sendBehavioralMetric(\n          BEHAVIORAL_METRICS.JOIN_WITH_MEDIA_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack,\n          },\n          {\n            type: error.name,\n          }\n        );\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * Initiates the reconnection of the media in the meeting\n   *\n   * @param {object} options\n   * @returns {Promise} resolves with {reconnect} or errors with {error}\n   * @public\n   * @memberof Meeting\n   */\n  public reconnect(options?: object) {\n    LoggerProxy.logger.log(\n      `Meeting:index#reconnect --> attempting to reconnect meeting ${this.id}`\n    );\n\n    if (!this.reconnectionManager || !this.reconnectionManager.reconnect) {\n      return Promise.reject(\n        new ParameterError('Cannot reconnect, ReconnectionManager must first be defined.')\n      );\n    }\n\n    // @ts-ignore - currentMediaStatus coming from SelfUtil\n    if (!MeetingUtil.isMediaEstablished(this.currentMediaStatus)) {\n      return Promise.reject(\n        new ParameterError('Cannot reconnect, Media has not established to reconnect')\n      );\n    }\n\n    try {\n      LoggerProxy.logger.info('Meeting:index#reconnect --> Validating reconnect ability.');\n      // @ts-ignore\n      this.reconnectionManager.validate();\n    } catch (error) {\n      // Unable to reconnect this call\n      if (error instanceof ReconnectInProgress) {\n        LoggerProxy.logger.info(\n          'Meeting:index#reconnect --> Unable to reconnect, reconnection in progress.'\n        );\n      } else {\n        LoggerProxy.logger.log('Meeting:index#reconnect --> Unable to reconnect.', error);\n      }\n\n      return Promise.resolve();\n    }\n\n    Trigger.trigger(\n      this,\n      {\n        file: 'meeting/index',\n        function: 'reconnect',\n      },\n      EVENT_TRIGGERS.MEETING_RECONNECTION_STARTING\n    );\n\n    return this.reconnectionManager\n      .reconnect(options)\n      .then(() => {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'reconnect',\n          },\n          EVENT_TRIGGERS.MEETING_RECONNECTION_SUCCESS\n        );\n        LoggerProxy.logger.log('Meeting:index#reconnect --> Meeting reconnect success');\n      })\n      .catch((error) => {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'reconnect',\n          },\n          EVENT_TRIGGERS.MEETING_RECONNECTION_FAILURE,\n          {\n            error: new ReconnectionError('Reconnection failure event', error),\n          }\n        );\n\n        LoggerProxy.logger.error('Meeting:index#reconnect --> Meeting reconnect failed', error);\n\n        Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.MEETING_RECONNECT_FAILURE, {\n          correlation_id: this.correlationId,\n          locus_id: this.locusUrl.split('/').pop(),\n          reason: error.message,\n          stack: error.stack,\n        });\n\n        this.uploadLogs({\n          file: 'meeting/index',\n          function: 'reconnect',\n        });\n\n        return Promise.reject(new ReconnectionError('Reconnection failure event', error));\n      })\n      .finally(() => {\n        this.reconnectionManager.reset();\n      });\n  }\n\n  /**\n   * Check if the meeting supports the Webex Assistant feature\n   * @returns {boolean}\n   * @throws TranscriptionNotSupportedError\n   */\n  isTranscriptionSupported() {\n    if (this.locusInfo.controls.transcribe?.transcribing) {\n      return true;\n    }\n\n    LoggerProxy.logger.error(\n      'Meeting:index#isTranscriptionSupported --> Webex Assistant is not supported'\n    );\n\n    return false;\n  }\n\n  /**\n   * Monitor the Low-Latency Mercury (LLM) web socket connection on `onError` and `onClose` states\n   * @private\n   * @returns {void}\n   */\n  private monitorTranscriptionSocketConnection() {\n    this.transcription.onCloseSocket((event) => {\n      LoggerProxy.logger.info(\n        `Meeting:index#onCloseSocket -->\n        unable to continue receiving transcription;\n        low-latency mercury web socket connection is closed now.\n        ${event}`\n      );\n\n      this.triggerStopReceivingTranscriptionEvent();\n    });\n\n    this.transcription.onErrorSocket((event) => {\n      LoggerProxy.logger.error(\n        `Meeting:index#onErrorSocket -->\n         unable to continue receiving transcription;\n         low-latency mercury web socket connection error had occured.\n        ${event}`\n      );\n\n      this.triggerStopReceivingTranscriptionEvent();\n\n      Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.RECEIVE_TRANSCRIPTION_FAILURE, {\n        correlation_id: this.correlationId,\n        reason: 'unexpected error: transcription LLM web socket connection error had occured.',\n        event,\n      });\n    });\n  }\n\n  /**\n   * Request for a WebSocket Url, open and monitor the WebSocket connection\n   * @private\n   * @returns {Promise<void>} a promise to open the WebSocket connection\n   */\n  private async receiveTranscription() {\n    LoggerProxy.logger.info(\n      `Meeting:index#receiveTranscription -->\n      Attempting to generate a web socket url.`\n    );\n\n    try {\n      const {datachannelUrl} = this.locusInfo.info;\n      // @ts-ignore - fix type\n      const {\n        body: {webSocketUrl},\n        // @ts-ignore\n      } = await this.request({\n        method: HTTP_VERBS.POST,\n        uri: datachannelUrl,\n        body: {deviceUrl: this.deviceUrl},\n      });\n\n      LoggerProxy.logger.info(\n        `Meeting:index#receiveTranscription -->\n        Generated web socket url succesfully.`\n      );\n\n      this.transcription = new Transcription(\n        webSocketUrl,\n        // @ts-ignore - fix type\n        this.webex.sessionId,\n        this.members\n      );\n\n      LoggerProxy.logger.info(\n        `Meeting:index#receiveTranscription -->\n        opened LLM web socket connection successfully.`\n      );\n\n      // retrieve and pass the payload\n      this.transcription.subscribe((payload) => {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'join',\n          },\n          EVENT_TRIGGERS.MEETING_STARTED_RECEIVING_TRANSCRIPTION,\n          payload\n        );\n      });\n\n      this.monitorTranscriptionSocketConnection();\n      // @ts-ignore - fix type\n      this.transcription.connect(this.webex.credentials.supertoken.access_token);\n    } catch (error) {\n      LoggerProxy.logger.error(`Meeting:index#receiveTranscription --> ${error}`);\n      Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.RECEIVE_TRANSCRIPTION_FAILURE, {\n        correlation_id: this.correlationId,\n        reason: error.message,\n        stack: error.stack,\n      });\n    }\n  }\n\n  /**\n   * stop recieving Transcription by closing\n   * the web socket connection properly\n   * @returns {void}\n   */\n  stopReceivingTranscription() {\n    if (this.transcription) {\n      this.transcription.closeSocket();\n    }\n  }\n\n  /**\n   * triggers an event to notify that the user\n   * will not receive any more transcription\n   * @private\n   * @returns{void}\n   */\n  private triggerStopReceivingTranscriptionEvent() {\n    LoggerProxy.logger.info(`\n      Meeting:index#stopReceivingTranscription -->\n      closed transcription LLM web socket connection successfully.`);\n\n    Trigger.trigger(\n      this,\n      {\n        file: 'meeting',\n        function: 'triggerStopReceivingTranscriptionEvent',\n      },\n      EVENT_TRIGGERS.MEETING_STOPPED_RECEIVING_TRANSCRIPTION\n    );\n  }\n\n  /**\n   * Specify joining via audio (option: pstn), video, screenshare\n   * @param {JoinOptions} options A configurable options object for joining a meeting\n   * @returns {Promise} the join response\n   * @public\n   * @memberof Meeting\n   * Scenario A: Joining own claimed personal meeting room\n   * Scenario B: Joining other's claimed personal meeting room, do pass pin (if desired to join as host, or nullify), do pass moderator\n   * Scenario C: Joining an unclaimed personal meeting room, -do not- pass pin or moderator on first try, -do- pass pin and moderator\n   *             if joining as host on second loop, pass pin and pass moderator if joining as guest on second loop\n   * Scenario D: Joining any other way (sip, pstn, conversationUrl, link just need to specify resourceId)\n   */\n  public join(options: any = {}) {\n    // @ts-ignore - fix type\n    if (!this.webex.meetings.registered) {\n      const errorMessage = 'Meeting:index#join --> Device not registered';\n      const error = new Error(errorMessage);\n\n      LoggerProxy.logger.error(errorMessage);\n\n      return Promise.reject(error);\n    }\n\n    // If a join request is being processed, refer to the deferred promise.\n    if (this.deferJoin) {\n      return this.deferJoin;\n    }\n\n    // Scope-up the resolve/reject methods for handling within join().\n    let joinFailed;\n    let joinSuccess;\n\n    // Create a deferred promise for a consistent resolve value from utils.\n    // This also prevents redundant API calls.\n    this.deferJoin = new Promise((resolve, reject) => {\n      joinFailed = reject;\n      joinSuccess = resolve;\n    });\n\n    if (!this.hasJoinedOnce) {\n      this.hasJoinedOnce = true;\n    } else {\n      LoggerProxy.logger.log(\n        `Meeting:index#join --> Generating a new correlation id for meeting ${this.id}`\n      );\n      LoggerProxy.logger.log(\n        `Meeting:index#join --> Previous correlation id ${this.correlationId}`\n      );\n      this.setCorrelationId(uuid.v4());\n      LoggerProxy.logger.log(`Meeting:index#join --> New correlation id ${this.correlationId}`);\n    }\n\n    if (options.rejoin) {\n      this.meetingFiniteStateMachine.reset();\n    }\n\n    Metrics.postEvent({\n      event: eventType.CALL_INITIATED,\n      meeting: this,\n      data: {trigger: trigger.USER_INTERACTION, isRoapCallEnabled: true},\n    });\n\n    LoggerProxy.logger.log('Meeting:index#join --> Joining a meeting');\n\n    if (this.meetingFiniteStateMachine.state === MEETING_STATE_MACHINE.STATES.ENDED) {\n      this.meetingFiniteStateMachine.reset();\n    }\n    if (this.meetingFiniteStateMachine.state !== MEETING_STATE_MACHINE.STATES.RINGING) {\n      this.meetingFiniteStateMachine.ring(_JOIN_);\n    }\n\n    // TODO: does this really need to be here?\n    if (options.resourceId && this.destination && options.resourceId === this.destination) {\n      this.wirelessShare = true;\n    }\n\n    if (options.meetingQuality) {\n      if (typeof options.meetingQuality === 'string') {\n        if (!QUALITY_LEVELS[options.meetingQuality]) {\n          const errorMessage = `Meeting:index#join --> ${options.meetingQuality} not defined`;\n          const error = new Error(errorMessage);\n\n          LoggerProxy.logger.error(errorMessage);\n\n          joinFailed(error);\n          this.deferJoin = undefined;\n\n          return Promise.reject(error);\n        }\n\n        this.mediaProperties.setLocalQualityLevel(options.meetingQuality);\n        this.mediaProperties.setRemoteQualityLevel(options.meetingQuality);\n      }\n\n      if (typeof options.meetingQuality === 'object') {\n        if (\n          !QUALITY_LEVELS[options.meetingQuality.local] &&\n          !QUALITY_LEVELS[options.meetingQuality.remote]\n        ) {\n          const errorMessage = `Meeting:index#join --> ${\n            options.meetingQuality.local || options.meetingQuality.remote\n          } not defined`;\n\n          LoggerProxy.logger.error(errorMessage);\n\n          const error = new Error(errorMessage);\n\n          joinFailed(error);\n          this.deferJoin = undefined;\n\n          return Promise.reject(new Error(errorMessage));\n        }\n\n        if (options.meetingQuality.local) {\n          this.mediaProperties.setLocalQualityLevel(options.meetingQuality.local);\n        }\n        if (options.meetingQuality.remote) {\n          this.mediaProperties.setRemoteQualityLevel(options.meetingQuality.remote);\n        }\n      }\n    }\n\n    return MeetingUtil.joinMeetingOptions(this, options)\n      .then((join) => {\n        this.meetingFiniteStateMachine.join();\n        LoggerProxy.logger.log('Meeting:index#join --> Success');\n\n        return join;\n      })\n      .then((join) => {\n        joinSuccess(join);\n        this.deferJoin = undefined;\n        Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.JOIN_SUCCESS, {\n          correlation_id: this.correlationId,\n        });\n\n        return join;\n      })\n      .then(async (join) => {\n        if (isBrowser) {\n          // @ts-ignore - config coming from registerPlugin\n          if (this.config.receiveTranscription || options.receiveTranscription) {\n            if (this.isTranscriptionSupported()) {\n              await this.receiveTranscription();\n              LoggerProxy.logger.info('Meeting:index#join --> enabled to recieve transcription!');\n            }\n          }\n        } else {\n          LoggerProxy.logger.error(\n            'Meeting:index#join --> Receving transcription is not supported on this platform'\n          );\n        }\n\n        return join;\n      })\n      .catch((error) => {\n        this.meetingFiniteStateMachine.fail(error);\n        LoggerProxy.logger.error('Meeting:index#join --> Failed', error);\n\n        Metrics.postEvent({\n          event: eventType.LOCUS_JOIN_RESPONSE,\n          meeting: this,\n          meetingId: this.id,\n          data: {\n            errors: [Metrics.parseLocusError(error.error, true)],\n          },\n        });\n\n        // TODO:  change this to error codes and pre defined dictionary\n        Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.JOIN_FAILURE, {\n          correlation_id: this.correlationId,\n          reason: error.error?.message,\n          stack: error.stack,\n        });\n\n        // Upload logs on join Failure\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'join',\n          },\n          EVENTS.REQUEST_UPLOAD_LOGS,\n          this\n        );\n\n        joinFailed(error);\n        this.deferJoin = undefined;\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * Use phone for meeting audio\n   * @param {String} phoneNumber If provided, it will dial-out using this number. If not provided, dial-in will be used\n   * @returns {Promise} Resolves once the dial-in or dial-out request has completed, or rejects if it failed\n   * @public\n   * @memberof Meeting\n   */\n  public usePhoneAudio(phoneNumber: string) {\n    if (!phoneNumber) {\n      return this.dialInPstn();\n    }\n\n    return this.dialOutPstn(phoneNumber);\n  }\n\n  /**\n   * Determines if the given pstnStatus is in a state which implies the phone is provisioned\n   * @param {String} pstnStatus\n   * @returns {Boolean}\n   * @private\n   * @memberof Meeting\n   */\n  private isPhoneProvisioned(pstnStatus: string) {\n    return [PSTN_STATUS.JOINED, PSTN_STATUS.CONNECTED, PSTN_STATUS.SUCCESS].includes(pstnStatus);\n  }\n\n  /**\n   * Enable dial-in for audio\n   * @returns {Promise} Resolves once the dial-in request has completed, or rejects if it failed\n   * @private\n   * @memberof Meeting\n   */\n  private dialInPstn() {\n    if (this.isPhoneProvisioned(this.dialInDeviceStatus)) return Promise.resolve(); // prevent multiple dial in devices from being provisioned\n\n    const {correlationId, locusUrl} = this;\n\n    if (!this.dialInUrl) this.dialInUrl = `dialin:///${uuid.v4()}`;\n\n    return (\n      this.meetingRequest\n        // @ts-ignore\n        .dialIn({\n          correlationId,\n          dialInUrl: this.dialInUrl,\n          locusUrl,\n          clientUrl: this.deviceUrl,\n        })\n        .then((res) => {\n          this.locusInfo.onFullLocus(res.body.locus);\n        })\n        .catch((error) => {\n          Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.ADD_DIAL_IN_FAILURE, {\n            correlation_id: this.correlationId,\n            dial_in_url: this.dialInUrl,\n            locus_id: locusUrl.split('/').pop(),\n            client_url: this.deviceUrl,\n            reason: error.error?.message,\n            stack: error.stack,\n          });\n\n          return Promise.reject(error);\n        })\n    );\n  }\n\n  /**\n   * Enable dial-out for audio\n   * @param {String} phoneNumber Phone number to dial out to\n   * @returns {Promise} Resolves once the dial-out request has completed (it doesn't wait for the user to answer the phone), or rejects if it failed\n   * @private\n   * @memberof Meeting\n   */\n  private dialOutPstn(phoneNumber: string) {\n    if (this.isPhoneProvisioned(this.dialOutDeviceStatus)) return Promise.resolve(); // prevent multiple dial out devices from being provisioned\n\n    const {correlationId, locusUrl} = this;\n\n    if (!this.dialOutUrl) this.dialOutUrl = `dialout:///${uuid.v4()}`;\n\n    return (\n      this.meetingRequest\n        // @ts-ignore\n        .dialOut({\n          correlationId,\n          dialOutUrl: this.dialOutUrl,\n          phoneNumber,\n          locusUrl,\n          clientUrl: this.deviceUrl,\n        })\n        .then((res) => {\n          this.locusInfo.onFullLocus(res.body.locus);\n        })\n        .catch((error) => {\n          Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.ADD_DIAL_OUT_FAILURE, {\n            correlation_id: this.correlationId,\n            dial_out_url: this.dialOutUrl,\n            locus_id: locusUrl.split('/').pop(),\n            client_url: this.deviceUrl,\n            reason: error.error?.message,\n            stack: error.stack,\n          });\n\n          return Promise.reject(error);\n        })\n    );\n  }\n\n  /**\n   * Disconnect meeting audio via phone.\n   * @returns {Promise} Resolves once the phone audio disconnection has completed\n   * @public\n   * @memberof Meeting\n   * @returns {Promise}\n   */\n  public disconnectPhoneAudio() {\n    return Promise.all([\n      this.isPhoneProvisioned(this.dialInDeviceStatus)\n        ? MeetingUtil.disconnectPhoneAudio(this, this.dialInUrl)\n        : Promise.resolve(),\n      this.isPhoneProvisioned(this.dialOutDeviceStatus)\n        ? MeetingUtil.disconnectPhoneAudio(this, this.dialOutUrl)\n        : Promise.resolve(),\n    ]);\n  }\n\n  /**\n   * Moves the call to the specified resourceId\n   * @param {String} resourceId\n   * @returns {Promise} once the move has been completed\n   * @public\n   * @memberof Meeting\n   */\n  public moveTo(resourceId: string) {\n    if (!resourceId) {\n      throw new ParameterError('Cannot move call without a resourceId.');\n    }\n\n    Metrics.postEvent({\n      event: eventType.MEDIA_CAPABILITIES,\n      meeting: this,\n      data: {\n        mediaCapabilities: {\n          rx: {\n            audio: false,\n            share: true,\n            share_audio: false,\n            video: false,\n            whiteboard: false,\n          },\n          tx: {\n            audio: false,\n            share: false,\n            share_audio: false,\n            video: false,\n            whiteboard: false,\n          },\n        },\n      },\n    });\n\n    Metrics.postEvent({event: eventType.MOVE_MEDIA, meeting: this});\n\n    this.locusInfo.once(LOCUSINFO.EVENTS.SELF_OBSERVING, async () => {\n      // Clean up the camera , microphone track and re initiate it\n\n      try {\n        if (this.isSharing) {\n          await this.releaseScreenShareFloor();\n        }\n        const mediaSettings = {\n          mediaDirection: {\n            sendVideo: false,\n            receiveVideo: false,\n            sendAudio: false,\n            receiveAudio: false,\n            sendShare: false,\n            receiveShare: true,\n          },\n        };\n\n        // clean up the local tracks\n        this.mediaProperties.setMediaDirection(mediaSettings.mediaDirection);\n\n        // close the existing local tracks\n        await this.closeLocalStream();\n        await this.closeLocalShare();\n\n        this.mediaProperties.unsetMediaTracks();\n\n        // when a move to is intiated by the client , Locus delets the existing media node from the server as soon the DX answers the meeting\n        // once the DX answers we establish connection back the media server with only receiveShare enabled\n        // @ts-ignore - reconnectMedia does not accept any argument\n        await this.reconnectionManager.reconnectMedia(mediaSettings).then(() => {\n          Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.MOVE_TO_SUCCESS);\n        });\n      } catch (error) {\n        LoggerProxy.logger.error('Meeting:index#moveTo --> Failed to moveTo resourceId', error);\n        Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.MOVE_TO_FAILURE, {\n          correlation_id: this.correlationId,\n          locus_id: this.locusUrl.split('/').pop(),\n          reason: error.message,\n          stack: error.stack,\n        });\n      }\n    });\n\n    LoggerProxy.logger.info(\n      'Meeting:index#moveTo --> Initated moved to using resourceId',\n      resourceId\n    );\n\n    return MeetingUtil.joinMeetingOptions(this, {resourceId, moveToResource: true})\n      .then(() => {\n        this.meetingFiniteStateMachine.join();\n      })\n      .catch((error) => {\n        this.meetingFiniteStateMachine.fail(error);\n        Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.MOVE_TO_FAILURE, {\n          correlation_id: this.correlationId,\n          locus_id: this.locusUrl.split('/').pop(),\n          reason: error.message,\n          stack: error.stack,\n        });\n        LoggerProxy.logger.error('Meeting:index#moveTo --> Failed to moveTo resourceId', error);\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * Moves the call from the specified resourceId, back to computer\n   * @param {String} resourceId\n   * @returns {Promise} once the move has been completed\n   * @public\n   * @memberof Meeting\n   */\n  public moveFrom(resourceId: string) {\n    // On moveFrom ask the developer to re capture it moveFrom  then updateMedia\n    if (!resourceId) {\n      throw new ParameterError('Cannot move call without a resourceId.');\n    }\n    const oldCorrelationId = this.correlationId;\n\n    Metrics.postEvent({event: eventType.MOVE_MEDIA, meeting: this});\n\n    return MeetingUtil.joinMeetingOptions(this)\n      .then(() =>\n        MeetingUtil.leaveMeeting(this, {\n          resourceId,\n          correlationId: oldCorrelationId,\n          moveMeeting: true,\n        }).then(() => {\n          this.resourceId = '';\n          Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.MOVE_FROM_SUCCESS);\n        })\n      )\n      .catch((error) => {\n        this.meetingFiniteStateMachine.fail(error);\n        Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.MOVE_FROM_FAILURE, {\n          correlation_id: this.correlationId,\n          locus_id: this.locusUrl.split('/').pop(),\n          reason: error.message,\n          stack: error.stack,\n        });\n        LoggerProxy.logger.error('Meeting:index#moveTo --> Failed to moveTo resourceId', error);\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * Get local media streams based on options passed\n   * @param {MediaDirection} mediaDirection A configurable options object for joining a meeting\n   * @param {AudioVideo} [audioVideo] audio/video object to set audioinput and videoinput devices, see #Media.getUserMedia\n   * @param {SharePreferences} [sharePreferences] audio/video object to set audioinput and videoinput devices, see #Media.getUserMedia\n   * @returns {Promise} see #Media.getUserMedia\n   * @public\n   * @todo should be static, or moved so can be called outside of a meeting\n   * @memberof Meeting\n   */\n  getMediaStreams = (\n    mediaDirection: any,\n    // This return an OBJECT {video: {height, widght}}\n    // eslint-disable-next-line default-param-last\n    audioVideo: any = VIDEO_RESOLUTIONS[this.mediaProperties.localQualityLevel],\n    sharePreferences?: any\n  ) => {\n    if (\n      mediaDirection &&\n      (mediaDirection.sendAudio || mediaDirection.sendVideo || mediaDirection.sendShare)\n    ) {\n      if (\n        mediaDirection &&\n        mediaDirection.sendAudio &&\n        mediaDirection.sendVideo &&\n        mediaDirection.sendShare &&\n        isBrowser('safari')\n      ) {\n        LoggerProxy.logger.warn(\n          'Meeting:index#getMediaStreams --> Setting `sendShare` to FALSE, due to complications with Safari'\n        );\n\n        mediaDirection.sendShare = false;\n\n        LoggerProxy.logger.warn(\n          'Meeting:index#getMediaStreams --> Enabling `sendShare` along with `sendAudio` & `sendVideo`, on Safari, causes a failure while setting up a screen share at the same time as the camera+mic stream'\n        );\n        LoggerProxy.logger.warn(\n          'Meeting:index#getMediaStreams --> Please use `meeting.shareScreen()` to manually start the screen share after successfully joining the meeting'\n        );\n      }\n\n      if (audioVideo && isString(audioVideo)) {\n        if (Object.keys(VIDEO_RESOLUTIONS).includes(audioVideo)) {\n          this.mediaProperties.setLocalQualityLevel(audioVideo);\n          audioVideo = {video: VIDEO_RESOLUTIONS[audioVideo].video};\n        } else {\n          throw new ParameterError(\n            `${audioVideo} not supported. Either pass level from pre-defined resolutions or pass complete audioVideo object`\n          );\n        }\n      }\n\n      if (!audioVideo.video) {\n        audioVideo = {\n          ...audioVideo,\n          video: {\n            ...audioVideo.video,\n            ...VIDEO_RESOLUTIONS[this.mediaProperties.localQualityLevel].video,\n          },\n        };\n      }\n      // extract deviceId if exists otherwise default to null.\n      const {deviceId: preferredVideoDevice} = (audioVideo && audioVideo.video) || {deviceId: null};\n      const lastVideoDeviceId = this.mediaProperties.getVideoDeviceId();\n\n      if (preferredVideoDevice) {\n        // Store new preferred video input device\n        this.mediaProperties.setVideoDeviceId(preferredVideoDevice);\n      } else if (lastVideoDeviceId) {\n        // no new video preference specified so use last stored value,\n        // works with empty object {} or media constraint.\n        // eslint-disable-next-line no-param-reassign\n        audioVideo = {\n          ...audioVideo,\n          video: {\n            ...audioVideo.video,\n            deviceId: lastVideoDeviceId,\n          },\n        };\n      }\n\n      return Media.getSupportedDevice({\n        sendAudio: mediaDirection.sendAudio,\n        sendVideo: mediaDirection.sendVideo,\n      })\n        .catch((error) =>\n          Promise.reject(\n            new MediaError(\n              'Given constraints do not match permission set for either camera or microphone',\n              error\n            )\n          )\n        )\n        .then((devicePermissions) =>\n          Media.getUserMedia(\n            {\n              ...mediaDirection,\n              sendAudio: devicePermissions.sendAudio,\n              sendVideo: devicePermissions.sendVideo,\n              isSharing: this.shareStatus === SHARE_STATUS.LOCAL_SHARE_ACTIVE,\n            },\n            audioVideo,\n            sharePreferences,\n            // @ts-ignore - config coming from registerPlugin\n            this.config\n          ).catch((error) => {\n            // Whenever there is a failure when trying to access a user's device\n            // report it as an Behavioral metric\n            // This gives visibility into common errors and can help\n            // with further troubleshooting\n            const metricName = BEHAVIORAL_METRICS.GET_USER_MEDIA_FAILURE;\n            const data = {\n              correlation_id: this.correlationId,\n              locus_id: this.locusUrl?.split('/').pop(),\n              reason: error.message,\n              stack: error.stack,\n            };\n            const metadata = {\n              type: error.name,\n            };\n\n            Metrics.sendBehavioralMetric(metricName, data, metadata);\n            throw new MediaError('Unable to retrieve media streams', error);\n          })\n        );\n    }\n\n    return Promise.reject(\n      new MediaError('At least one of the mediaDirection value should be true')\n    );\n  };\n\n  /**\n   * Checks if the machine has at least one audio or video device\n   * @param {Object} options\n   * @param {Boolean} options.sendAudio\n   * @param {Boolean} options.sendVideo\n   * @returns {Object}\n   * @memberof Meetings\n   */\n  getSupportedDevices = ({\n    sendAudio = true,\n    sendVideo = true,\n  }: {\n    sendAudio: boolean;\n    sendVideo: boolean;\n  }) => Media.getSupportedDevice({sendAudio, sendVideo});\n\n  /**\n   * Get the devices from the Media module\n   * @returns {Promise} resolves to an array of DeviceInfo\n   * @memberof Meetings\n   */\n  getDevices = () => Media.getDevices();\n\n  /**\n   * Registers for all required StatsAnalyzer events\n   * @private\n   * @returns {void}\n   * @memberof Meetings\n   */\n  setupStatsAnalyzerEventHandlers = () => {\n    this.statsAnalyzer.on(StatsAnalyzerEvents.MEDIA_QUALITY, (options) => {\n      // TODO:  might have to send the same event to the developer\n      // Add ip address info if geo hint is present\n      // @ts-ignore fix type\n      options.data.intervalMetadata.peerReflexiveIP =\n        // @ts-ignore\n        this.webex.meetings.geoHintInfo?.clientAddress ||\n        options.data.intervalMetadata.peerReflexiveIP ||\n        MQA_STATS.DEFAULT_IP;\n      Metrics.postEvent({\n        event: eventType.MEDIA_QUALITY,\n        meeting: this,\n        data: {intervalData: options.data, networkType: options.networkType},\n      });\n    });\n    this.statsAnalyzer.on(StatsAnalyzerEvents.LOCAL_MEDIA_STARTED, (data) => {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'addMedia',\n        },\n        EVENT_TRIGGERS.MEETING_MEDIA_LOCAL_STARTED,\n        data\n      );\n      Metrics.postEvent({\n        event: eventType.SENDING_MEDIA_START,\n        meeting: this,\n        data: {\n          mediaType: data.type,\n        },\n      });\n    });\n    this.statsAnalyzer.on(StatsAnalyzerEvents.LOCAL_MEDIA_STOPPED, (data) => {\n      Metrics.postEvent({\n        event: eventType.SENDING_MEDIA_STOP,\n        meeting: this,\n        data: {\n          mediaType: data.type,\n        },\n      });\n    });\n    this.statsAnalyzer.on(StatsAnalyzerEvents.REMOTE_MEDIA_STARTED, (data) => {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'addMedia',\n        },\n        EVENT_TRIGGERS.MEETING_MEDIA_REMOTE_STARTED,\n        data\n      );\n      Metrics.postEvent({\n        event: eventType.RECEIVING_MEDIA_START,\n        meeting: this,\n        data: {\n          mediaType: data.type,\n        },\n      });\n    });\n    this.statsAnalyzer.on(StatsAnalyzerEvents.REMOTE_MEDIA_STOPPED, (data) => {\n      Metrics.postEvent({\n        event: eventType.RECEIVING_MEDIA_STOP,\n        meeting: this,\n        data: {\n          mediaType: data.type,\n        },\n      });\n    });\n  };\n\n  /**\n   * Specify joining via audio (option: pstn), video, screenshare\n   * @param {Object} options A configurable options object for joining a meeting\n   * @param {Object} options.resourceId pass the deviceId\n   * @param {MediaDirection} options.mediaSettings pass media options\n   * @param {MediaStream} options.localStream\n   * @param {MediaStream} options.localShare\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  addMedia(options: any = {}) {\n    const LOG_HEADER = 'Meeting:index#addMedia -->';\n\n    let turnDiscoverySkippedReason;\n    let turnServerUsed = false;\n\n    if (this.meetingState !== FULL_STATE.ACTIVE) {\n      return Promise.reject(new MeetingNotActiveError());\n    }\n\n    if (MeetingUtil.isUserInLeftState(this.locusInfo)) {\n      return Promise.reject(new UserNotJoinedError());\n    }\n    // If the user is unjoined or guest waiting in lobby dont allow the user to addMedia\n    // @ts-ignore - isUserUnadmitted coming from SelfUtil\n    if (this.isUserUnadmitted && !this.wirelessShare) {\n      return Promise.reject(new UserInLobbyError());\n    }\n\n    const {localStream, localShare, mediaSettings} = options;\n\n    LoggerProxy.logger.info(`${LOG_HEADER} Adding Media.`);\n\n    Metrics.postEvent({\n      event: eventType.MEDIA_CAPABILITIES,\n      meeting: this,\n      data: {\n        mediaCapabilities: {\n          rx: {\n            audio: false,\n            share: false,\n            share_audio: false,\n            video: false,\n            whiteboard: false,\n          },\n          tx: {\n            audio: false,\n            share: false,\n            share_audio: false,\n            video: false,\n            whiteboard: false,\n          },\n        },\n      },\n    });\n\n    return MeetingUtil.validateOptions(options)\n      .then(() => this.roap.doTurnDiscovery(this, false))\n      .then((turnDiscoveryObject) => {\n        ({turnDiscoverySkippedReason} = turnDiscoveryObject);\n        turnServerUsed = !turnDiscoverySkippedReason;\n\n        const {turnServerInfo} = turnDiscoveryObject;\n\n        this.mediaProperties.setMediaPeerConnection(MediaUtil.createPeerConnection(turnServerInfo));\n        this.setMercuryListener();\n        PeerConnectionManager.setPeerConnectionEvents(this);\n\n        return this.preMedia(localStream, localShare, mediaSettings);\n      })\n      .then(() =>\n        Media.attachMedia(this.mediaProperties, {\n          meetingId: this.id,\n          remoteQualityLevel: this.mediaProperties.remoteQualityLevel,\n          // @ts-ignore - config coming from registerPlugin\n          enableRtx: this.config.enableRtx,\n          // @ts-ignore - config coming from registerPlugin\n          enableExtmap: this.config.enableExtmap,\n          setStartLocalSDPGenRemoteSDPRecvDelay:\n            this.setStartLocalSDPGenRemoteSDPRecvDelay.bind(this),\n        })\n      )\n      .then((peerConnection) =>\n        this.getDevices().then((devices) => {\n          MeetingUtil.handleDeviceLogging(devices);\n\n          return peerConnection;\n        })\n      )\n      .then((peerConnection) => {\n        this.handleMediaLogging(this.mediaProperties);\n        LoggerProxy.logger.info(`${LOG_HEADER} PeerConnection Received from attachMedia `);\n\n        this.setRemoteStream(peerConnection);\n        // @ts-ignore - config coming from registerPlugin\n        if (this.config.stats.enableStatsAnalyzer) {\n          // TODO: ** Dont re create StatsAnalyzer on reconnect or rejoin\n          // @ts-ignore - config coming from registerPlugin\n          this.networkQualityMonitor = new NetworkQualityMonitor(this.config.stats);\n          // @ts-ignore - config coming from registerPlugin\n          this.statsAnalyzer = new StatsAnalyzer(this.config.stats, this.networkQualityMonitor);\n          this.setupStatsAnalyzerEventHandlers();\n          this.networkQualityMonitor.on(\n            EVENT_TRIGGERS.NETWORK_QUALITY,\n            this.sendNetworkQualityEvent.bind(this)\n          );\n        }\n      })\n      .catch((error) => {\n        LoggerProxy.logger.error(\n          `${LOG_HEADER} Error adding media , setting up peerconnection, `,\n          error\n        );\n\n        throw error;\n      })\n      .then(\n        () =>\n          new Promise<void>((resolve, reject) => {\n            let timerCount = 0;\n\n            // eslint-disable-next-line func-names\n            // eslint-disable-next-line prefer-arrow-callback\n            if (this.type === _CALL_) {\n              resolve();\n            }\n            const joiningTimer = setInterval(() => {\n              timerCount += 1;\n              if (this.meetingState === FULL_STATE.ACTIVE) {\n                clearInterval(joiningTimer);\n                resolve();\n              }\n\n              if (timerCount === 4) {\n                clearInterval(joiningTimer);\n                reject(new Error('Meeting is still not active '));\n              }\n            }, 1000);\n          })\n      )\n      .then(() =>\n        logRequest(\n          this.roap.sendRoapMediaRequest({\n            sdp: this.mediaProperties.peerConnection.sdp,\n            roapSeq: this.roapSeq,\n            meeting: this, // or can pass meeting ID\n          }),\n          {\n            header: `${LOG_HEADER} Send Roap Media Request.`,\n            success: `${LOG_HEADER} Successfully send roap media request`,\n            failure: `${LOG_HEADER} Error joining the call on send roap media request, `,\n          }\n        )\n      )\n      .then(() =>\n        this.mediaProperties.waitForIceConnectedState().catch(() => {\n          throw createMeetingsError(30202, 'Meeting connection failed');\n        })\n      )\n      .then(() => {\n        LoggerProxy.logger.info(`${LOG_HEADER} PeerConnection CONNECTED`);\n\n        if (mediaSettings && mediaSettings.sendShare && localShare) {\n          if (this.state === MEETING_STATE.STATES.JOINED) {\n            return this.requestScreenShareFloor();\n          }\n\n          // When the self state changes to JOINED then request the floor\n          this.floorGrantPending = true;\n        }\n\n        return {};\n      })\n      .then(() => this.mediaProperties.getCurrentConnectionType())\n      .then((connectionType) => {\n        Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.ADD_MEDIA_SUCCESS, {\n          correlation_id: this.correlationId,\n          locus_id: this.locusUrl.split('/').pop(),\n          connectionType,\n        });\n      })\n      .catch((error) => {\n        // Clean up stats analyzer, peer connection, and turn off listeners\n        const stopStatsAnalyzer = this.statsAnalyzer\n          ? this.statsAnalyzer.stopAnalyzer()\n          : Promise.resolve();\n\n        return stopStatsAnalyzer.then(() => {\n          this.statsAnalyzer = null;\n\n          if (this.mediaProperties.peerConnection) {\n            this.closePeerConnections();\n            this.unsetPeerConnections();\n          }\n\n          LoggerProxy.logger.error(\n            `${LOG_HEADER} Error adding media failed to initiate PC and send request, `,\n            error\n          );\n\n          Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.ADD_MEDIA_FAILURE, {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack,\n            code: error.code,\n            turnDiscoverySkippedReason,\n            turnServerUsed,\n          });\n\n          // Upload logs on error while adding media\n          Trigger.trigger(\n            this,\n            {\n              file: 'meeting/index',\n              function: 'addMedia',\n            },\n            EVENTS.REQUEST_UPLOAD_LOGS,\n            this\n          );\n\n          // If addMedia failes for not establishing connection then\n          // leave the meeting with reson connection failed as meeting anyways will end\n          // and cannot be connected unless network condition is checked for firewall\n          if (error.code === InvalidSdpError.CODE) {\n            this.leave({reason: MEETING_REMOVED_REASON.MEETING_CONNECTION_FAILED});\n          }\n\n          throw error;\n        });\n      });\n  }\n\n  /**\n   * Informs if the peer connection is in a state that can be updated with updateMedia (audio/video/share)\n   * @returns {Boolean}\n   */\n  canUpdateMedia() {\n    return (\n      this.mediaProperties.peerConnection.signalingState === SDP.STABLE &&\n      !RoapCollection.isBusy(this.correlationId)\n    );\n  }\n\n  /**\n   * Enqueues a media update operation.\n   * @param {String} mediaUpdateType one of MEDIA_UPDATE_TYPE values\n   * @param {Object} options\n   * @returns {Promise}\n   * @private\n   * @memberof Meeting\n   */\n  private enqueueMediaUpdate(mediaUpdateType: string, options: object) {\n    return new Promise((resolve, reject) => {\n      const queueItem = {\n        pendingPromiseResolve: resolve,\n        pendingPromiseReject: reject,\n        mediaUpdateType,\n        options,\n      };\n\n      LoggerProxy.logger.log(\n        `Meeting:index#enqueueMediaUpdate --> enqueuing media update type=${mediaUpdateType}`\n      );\n      this.queuedMediaUpdates.push(queueItem);\n    });\n  }\n\n  /**\n   * emits event when the negotation is completed\n   * @returns {void}\n   * @private\n   * @memberof Meeting\n   */\n  mediaNegotiatedEvent = () => {\n    // @ts-ignore - config coming from registerPlugin\n    if (this.config.experimental.enableMediaNegotiatedEvent) {\n      LoggerProxy.logger.info('Meeting:mediaNegotiatedEvent --> Media server negotiated');\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'mediaNegotiatedEvent',\n        },\n        EVENT_TRIGGERS.MEDIA_NEGOTIATED\n      );\n    }\n  };\n\n  /**\n   * Checks if there are any queued media updates and runs the first one from\n   * the queue if we are in a state that allows doing that.\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  processNextQueuedMediaUpdate = () => {\n    if (this.canUpdateMedia() && this.queuedMediaUpdates.length > 0) {\n      const {pendingPromiseResolve, pendingPromiseReject, mediaUpdateType, options} =\n        this.queuedMediaUpdates.shift();\n\n      LoggerProxy.logger.log(\n        `Meeting:index#processNextQueuedMediaUpdate --> performing delayed media update type=${mediaUpdateType}`\n      );\n      switch (mediaUpdateType) {\n        case MEDIA_UPDATE_TYPE.ALL:\n          this.updateMedia(options).then(pendingPromiseResolve, pendingPromiseReject);\n          break;\n        case MEDIA_UPDATE_TYPE.AUDIO:\n          this.updateAudio(options).then(pendingPromiseResolve, pendingPromiseReject);\n          break;\n        case MEDIA_UPDATE_TYPE.VIDEO:\n          this.updateVideo(options).then(pendingPromiseResolve, pendingPromiseReject);\n          break;\n        case MEDIA_UPDATE_TYPE.SHARE:\n          this.updateShare(options).then(pendingPromiseResolve, pendingPromiseReject);\n          break;\n        default:\n          LoggerProxy.logger.error(\n            `Peer-connection-manager:index#processNextQueuedMediaUpdate --> unsupported media update type ${mediaUpdateType} found in the queue`\n          );\n          break;\n      }\n    }\n  };\n\n  /**\n   * A confluence of updateAudio, updateVideo, and updateShare\n   * this function re-establishes all of the media streams with new options\n   * @param {Object} options\n   * @param {MediaStream} options.localStream\n   * @param {MediaStream} options.localShare\n   * @param {MediaDirection} options.mediaSettings\n   * @returns {Promise}\n   * @todo fix setRemoteStream for updateMedia\n   * @public\n   * @memberof Meeting\n   */\n  public updateMedia(\n    options: {\n      localStream?: MediaStream;\n      localShare?: MediaStream;\n      mediaSettings?: any;\n    } = {} as any\n  ) {\n    const LOG_HEADER = 'Meeting:index#updateMedia -->';\n\n    if (!this.canUpdateMedia()) {\n      return this.enqueueMediaUpdate(MEDIA_UPDATE_TYPE.ALL, options);\n    }\n    const {localStream, localShare, mediaSettings} = options;\n\n    const previousSendShareStatus = this.mediaProperties.mediaDirection.sendShare;\n\n    return MeetingUtil.validateOptions(options)\n      .then(() => this.preMedia(localStream, localShare, mediaSettings))\n      .then(() =>\n        Media.updateMedia(this.mediaProperties, {\n          meetingId: this.id,\n          remoteQualityLevel: this.mediaProperties.remoteQualityLevel,\n          // @ts-ignore - config coming from registerPlugin\n          enableRtx: this.config.enableRtx,\n          // @ts-ignore - config coming from registerPlugin\n          enableExtmap: this.config.enableExtmap,\n        })\n          .then((peerConnection) => {\n            LoggerProxy.logger.info(\n              `${LOG_HEADER} PeerConnection received from updateMedia, ${peerConnection}`\n            );\n            this.setRemoteStream(peerConnection);\n            if (mediaSettings.receiveShare || localShare) {\n              PeerConnectionManager.setContentSlides(peerConnection);\n            }\n          })\n          .catch((error) => {\n            LoggerProxy.logger.error(`${LOG_HEADER} Error updatedMedia, `, error);\n\n            Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.UPDATE_MEDIA_FAILURE, {\n              correlation_id: this.correlationId,\n              locus_id: this.locusUrl.split('/').pop(),\n              reason: error.message,\n              stack: error.stack,\n            });\n\n            throw error;\n          })\n          .then(() =>\n            logRequest(\n              this.roap.sendRoapMediaRequest({\n                sdp: this.mediaProperties.peerConnection.sdp,\n                roapSeq: this.roapSeq,\n                meeting: this, // or can pass meeting ID\n              }),\n              {\n                header: `${LOG_HEADER} sendRoapMediaRequest being sent`,\n                success: `${LOG_HEADER} sendRoadMediaRequest successful`,\n                failure: `${LOG_HEADER} Error updateMedia on send roap media request, `,\n              }\n            )\n          )\n          .then(() => this.checkForStopShare(mediaSettings.sendShare, previousSendShareStatus))\n          .then((startShare) => {\n            // This is a special case if we do an /floor grant followed by /media\n            // we actually get a OFFER from the server and a GLAR condition happens\n            if (startShare) {\n              // We are assuming that the clients are connected when doing an update\n              return this.requestScreenShareFloor();\n            }\n\n            return Promise.resolve();\n          })\n      );\n  }\n\n  /**\n   * Update the main audio track with new parameters\n   * @param {Object} options\n   * @param {boolean} options.sendAudio\n   * @param {boolean} options.receiveAudio\n   * @param {MediaStream} options.stream Stream that contains the audio track to update\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  public async updateAudio(options: {\n    sendAudio: boolean;\n    receiveAudio: boolean;\n    stream: MediaStream;\n  }) {\n    if (!this.canUpdateMedia()) {\n      return this.enqueueMediaUpdate(MEDIA_UPDATE_TYPE.AUDIO, options);\n    }\n    const {sendAudio, receiveAudio, stream} = options;\n\n    const {audioTransceiver} = this.mediaProperties.peerConnection;\n    let track = MeetingUtil.getTrack(stream).audioTrack;\n\n    if (typeof sendAudio !== 'boolean' || typeof receiveAudio !== 'boolean') {\n      return Promise.reject(new ParameterError('Pass sendAudio and receiveAudio parameter'));\n    }\n\n    if (this.effects && this.effects.state) {\n      const bnrEnabled = this.effects.state.bnr.enabled;\n\n      if (\n        sendAudio &&\n        !this.isAudioMuted() &&\n        (bnrEnabled === BNR_STATUS.ENABLED || bnrEnabled === BNR_STATUS.SHOULD_ENABLE)\n      ) {\n        LoggerProxy.logger.info('Meeting:index#updateAudio. Calling WebRTC enable bnr method');\n        track = await this.internal_enableBNR(track);\n        LoggerProxy.logger.info('Meeting:index#updateAudio. WebRTC enable bnr request completed');\n      }\n    }\n\n    return MeetingUtil.validateOptions({sendAudio, localStream: stream})\n      .then(() => {\n        let previousMediaDirection = {};\n\n        if (this.mediaProperties.mediaDirection) {\n          previousMediaDirection = {\n            sendTrack: this.mediaProperties.mediaDirection.sendAudio,\n            receiveTrack: this.mediaProperties.mediaDirection.receiveAudio,\n          };\n        } else {\n          this.mediaProperties.mediaDirection = {};\n        }\n\n        return MeetingUtil.updateTransceiver(\n          {\n            type: 'audio',\n            sendTrack: options.sendAudio,\n            receiveTrack: options.receiveAudio,\n            track,\n            transceiver: audioTransceiver,\n            peerConnection: this.mediaProperties.peerConnection,\n            previousMediaDirection,\n          },\n          {\n            mediaProperties: this.mediaProperties,\n            meeting: this,\n            id: this.id,\n          }\n        );\n      })\n      .then(() => {\n        this.setLocalAudioTrack(track);\n        this.mediaProperties.mediaDirection.sendAudio = sendAudio;\n        this.mediaProperties.mediaDirection.receiveAudio = receiveAudio;\n\n        // audio state could be undefined if you have not sent audio before\n        this.audio =\n          this.audio || createMuteState(AUDIO, this, this.mediaProperties.mediaDirection);\n      });\n  }\n\n  /**\n   * Update the main video track with new parameters\n   * @param {Object} options\n   * @param {boolean} options.sendVideo\n   * @param {boolean} options.receiveVideo\n   * @param {MediaStream} options.stream Stream that contains the video track to update\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  public updateVideo(options: {sendVideo: boolean; receiveVideo: boolean; stream: MediaStream}) {\n    if (!this.canUpdateMedia()) {\n      return this.enqueueMediaUpdate(MEDIA_UPDATE_TYPE.VIDEO, options);\n    }\n    const {sendVideo, receiveVideo, stream} = options;\n    const {videoTransceiver} = this.mediaProperties.peerConnection;\n    const track = MeetingUtil.getTrack(stream).videoTrack;\n\n    if (typeof sendVideo !== 'boolean' || typeof receiveVideo !== 'boolean') {\n      return Promise.reject(new ParameterError('Pass sendVideo and receiveVideo parameter'));\n    }\n\n    return MeetingUtil.validateOptions({sendVideo, localStream: stream})\n      .then(() =>\n        MeetingUtil.updateTransceiver(\n          {\n            type: 'video',\n            sendTrack: options.sendVideo,\n            receiveTrack: options.receiveVideo,\n            track,\n            transceiver: videoTransceiver,\n            peerConnection: this.mediaProperties.peerConnection,\n            previousMediaDirection: {\n              sendTrack: this.mediaProperties.mediaDirection.sendVideo,\n              receiveTrack: this.mediaProperties.mediaDirection.receiveVideo,\n            },\n          },\n          {\n            mediaProperties: this.mediaProperties,\n            meeting: this,\n            id: this.id,\n          }\n        )\n      )\n      .then(() => {\n        this.setLocalVideoTrack(track);\n        this.mediaProperties.mediaDirection.sendVideo = sendVideo;\n        this.mediaProperties.mediaDirection.receiveVideo = receiveVideo;\n\n        // video state could be undefined if you have not sent video before\n        this.video =\n          this.video || createMuteState(VIDEO, this, this.mediaProperties.mediaDirection);\n      });\n  }\n\n  /**\n   * Internal function when stopping a share stream, cleanup\n   * @param {boolean} sendShare\n   * @param {boolean} previousShareStatus\n   * @returns {Promise}\n   * @private\n   * @memberof Meeting\n   */\n  private checkForStopShare(sendShare: boolean, previousShareStatus: boolean) {\n    if (sendShare && !previousShareStatus) {\n      // When user starts sharing\n      return Promise.resolve(true);\n    }\n\n    if (!sendShare && previousShareStatus) {\n      // When user stops sharing\n      return this.releaseScreenShareFloor().then(() => Promise.resolve(false));\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Update the share streams, can be used to start sharing\n   * @param {Object} options\n   * @param {boolean} options.sendShare\n   * @param {boolean} options.receiveShare\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  public updateShare(options: {\n    sendShare?: boolean;\n    receiveShare?: boolean;\n    stream?: any;\n    skipSignalingCheck?: boolean;\n  }) {\n    if (!options.skipSignalingCheck && !this.canUpdateMedia()) {\n      return this.enqueueMediaUpdate(MEDIA_UPDATE_TYPE.SHARE, options);\n    }\n    const {sendShare, receiveShare, stream} = options;\n    const {shareTransceiver} = this.mediaProperties.peerConnection;\n    const track = MeetingUtil.getTrack(stream).videoTrack;\n\n    if (typeof sendShare !== 'boolean' || typeof receiveShare !== 'boolean') {\n      return Promise.reject(new ParameterError('Pass sendShare and receiveShare parameter'));\n    }\n    const previousSendShareStatus = this.mediaProperties.mediaDirection.sendShare;\n\n    this.setLocalShareTrack(stream);\n\n    return MeetingUtil.validateOptions({sendShare, localShare: stream})\n      .then(() => this.checkForStopShare(sendShare, previousSendShareStatus))\n      .then((startShare) =>\n        MeetingUtil.updateTransceiver(\n          {\n            type: 'video',\n            sendTrack: sendShare,\n            receiveTrack: receiveShare,\n            track,\n            transceiver: shareTransceiver,\n            peerConnection: this.mediaProperties.peerConnection,\n            previousMediaDirection: {\n              sendTrack: this.mediaProperties.mediaDirection.sendShare,\n              receiveTrack: this.mediaProperties.mediaDirection.receiveShare,\n            },\n          },\n          {\n            mediaProperties: this.mediaProperties,\n            meeting: this,\n            id: this.id,\n          }\n        ).then(() => {\n          if (startShare) {\n            return this.requestScreenShareFloor();\n          }\n\n          return Promise.resolve();\n        })\n      )\n      .then(() => {\n        this.mediaProperties.mediaDirection.sendShare = sendShare;\n        this.mediaProperties.mediaDirection.receiveShare = receiveShare;\n      })\n      .catch((error) => {\n        this.unsetLocalShareTrack();\n        throw error;\n      })\n      .finally(() => {\n        const delay = 1e3;\n        // Check to see if share was stopped natively before onended was assigned.\n        const sharingModeIsActive =\n          this.mediaProperties.peerConnection.shareTransceiver.direction === SENDRECV;\n        const isSharingOutOfSync = sharingModeIsActive && !this.isLocalShareLive;\n\n        if (isSharingOutOfSync) {\n          // Adding a delay to avoid a 409 from server\n          // which results in user still appearing as if sharing.\n          // Also delay give time for changes to peerConnection.\n          setTimeout(() => this.handleShareTrackEnded(stream), delay);\n        }\n      });\n  }\n\n  /**\n   * Do all the attach media pre set up before executing the actual attach\n   * @param {MediaStream} localStream\n   * @param {MediaStream} localShare\n   * @param {MediaDirection} mediaSettings\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  private preMedia(localStream: MediaStream, localShare: MediaStream, mediaSettings: any) {\n    // eslint-disable-next-line no-warning-comments\n    // TODO wire into default config. There's currently an issue with the stateless plugin or how we register\n    // @ts-ignore - config coming from registerPlugin\n    this.mediaProperties.setMediaDirection(Object.assign(this.config.mediaSettings, mediaSettings));\n    // add a setup a function move the create and setup media in future\n    // TODO: delete old audio and video if stale\n    this.audio = this.audio || createMuteState(AUDIO, this, this.mediaProperties.mediaDirection);\n    this.video = this.video || createMuteState(VIDEO, this, this.mediaProperties.mediaDirection);\n    // Validation is already done in addMedia so no need to check if the lenght is greater then 0\n    this.setLocalTracks(localStream);\n    this.setLocalShareTrack(localShare);\n  }\n\n  /**\n   * Acknowledge the meeting, outgoing or incoming\n   * @param {String} type\n   * @returns {Promise} resolve {message, ringing, response}\n   * @public\n   * @memberof Meeting\n   */\n  public acknowledge(type: string) {\n    if (!type) {\n      return Promise.reject(new ParameterError('Type must be set to acknowledge the meeting.'));\n    }\n    if (type === _INCOMING_) {\n      return this.meetingRequest\n        .acknowledgeMeeting({\n          locusUrl: this.locusUrl,\n          deviceUrl: this.deviceUrl,\n          correlationId: this.correlationId,\n        })\n        .then((response) => Promise.resolve(response))\n        .then((response) => {\n          this.meetingFiniteStateMachine.ring(type);\n          Metrics.postEvent({event: eventType.ALERT_DISPLAYED, meeting: this});\n\n          return Promise.resolve({\n            response,\n          });\n        });\n    }\n\n    // TODO: outside of 1:1 incoming, and all outgoing calls\n    return Promise.resolve({\n      message: 'noop',\n    });\n  }\n\n  /**\n   * Decline this meeting\n   * @param {String} reason\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  public decline(reason: string) {\n    return MeetingUtil.declineMeeting(this, reason)\n      .then((decline) => {\n        this.meetingFiniteStateMachine.decline();\n\n        return Promise.resolve(decline);\n      })\n      .catch((error) => {\n        this.meetingFiniteStateMachine.fail(error);\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * Leave the current meeting\n   * @param {Object} options leave options\n   * @param {String} options.resourceId the device with which to leave from, empty if just the computer\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  public leave(options: {resourceId?: string; reason?: any} = {} as any) {\n    Metrics.postEvent({\n      event: eventType.LEAVE,\n      meeting: this,\n      data: {trigger: trigger.USER_INTERACTION, canProceed: false},\n    });\n    const leaveReason = options.reason || MEETING_REMOVED_REASON.CLIENT_LEAVE_REQUEST;\n\n    LoggerProxy.logger.log('Meeting:index#leave --> Leaving a meeting');\n\n    return MeetingUtil.leaveMeeting(this, options)\n      .then((leave) => {\n        this.meetingFiniteStateMachine.leave();\n        this.clearMeetingData();\n\n        // upload logs on leave irrespective of meeting delete\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'leave',\n          },\n          EVENTS.REQUEST_UPLOAD_LOGS,\n          this\n        );\n\n        // TODO: more testing before we remove this code, we are not sure the scenarios for destroy here\n        if (this.wirelessShare || this.guest) {\n          // If screen sharing clean the meeting object\n          Trigger.trigger(\n            this,\n            {\n              file: 'meeting/index',\n              function: 'leave',\n            },\n            EVENTS.DESTROY_MEETING,\n            {\n              reason: options.reason,\n              meetingId: this.id,\n            }\n          );\n        }\n        LoggerProxy.logger.log('Meeting:index#leave --> LEAVE REASON ', leaveReason);\n\n        return leave;\n      })\n      .catch((error) => {\n        this.meetingFiniteStateMachine.fail(error);\n        LoggerProxy.logger.error('Meeting:index#leave --> Failed to leave ', error);\n        // upload logs on leave irrespective of meeting delete\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'leave',\n          },\n          EVENTS.REQUEST_UPLOAD_LOGS,\n          this\n        );\n        Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.MEETING_LEAVE_FAILURE, {\n          correlation_id: this.correlationId,\n          locus_id: this.locusUrl.split('/').pop(),\n          reason: error.message,\n          stack: error.stack,\n          code: error.code,\n        });\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * Start sharing whiteboard given channelUrl\n   * @param {string} channelUrl whiteboard url\n   * @param {String} resourceToken token created by authorize media injector\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  public startWhiteboardShare(channelUrl: string, resourceToken: string) {\n    const whiteboard = this.locusInfo.mediaShares.find((element) => element.name === 'whiteboard');\n\n    if (!channelUrl) {\n      return Promise.reject(new ParameterError('Cannot share without channelUrl.'));\n    }\n\n    if (whiteboard) {\n      Metrics.postEvent({event: eventType.WHITEBOARD_SHARE_INITIATED, meeting: this});\n\n      const body: any = {\n        disposition: FLOOR_ACTION.GRANTED,\n        personUrl: this.locusInfo.self.url,\n        deviceUrl: this.deviceUrl,\n        uri: whiteboard.url,\n        resourceUrl: channelUrl,\n      };\n\n      if (resourceToken) {\n        body.resourceToken = resourceToken;\n      }\n\n      return this.meetingRequest\n        .changeMeetingFloor(body)\n        .then(() => {\n          this.isSharing = false;\n\n          return Promise.resolve();\n        })\n        .catch((error) => {\n          LoggerProxy.logger.error('Meeting:index#startWhiteboardShare --> Error ', error);\n\n          Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.MEETING_START_WHITEBOARD_SHARE_FAILURE, {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack,\n            board: {channelUrl},\n          });\n\n          return Promise.reject(error);\n        });\n    }\n\n    return Promise.reject(new ParameterError('Cannot share without whiteboard.'));\n  }\n\n  /**\n   * Stop sharing whiteboard given channelUrl\n   * @param {string} channelUrl whiteboard url\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  public stopWhiteboardShare(channelUrl: string) {\n    const whiteboard = this.locusInfo.mediaShares.find((element) => element.name === 'whiteboard');\n\n    if (whiteboard) {\n      Metrics.postEvent({event: eventType.WHITEBOARD_SHARE_STOPPED, meeting: this});\n\n      return this.meetingRequest\n        .changeMeetingFloor({\n          disposition: FLOOR_ACTION.RELEASED,\n          personUrl: this.locusInfo.self.url,\n          deviceUrl: this.deviceUrl,\n          uri: whiteboard.url,\n        })\n        .catch((error) => {\n          LoggerProxy.logger.error('Meeting:index#stopWhiteboardShare --> Error ', error);\n\n          Metrics.sendBehavioralMetric(\n            // @ts-ignore - check if STOP_WHITEBOARD_SHARE_FAILURE exists\n            BEHAVIORAL_METRICS.STOP_WHITEBOARD_SHARE_FAILURE,\n            {\n              correlation_id: this.correlationId,\n              locus_id: this.locusUrl.split('/').pop(),\n              reason: error.message,\n              stack: error.stack,\n              board: {channelUrl},\n            }\n          );\n\n          return Promise.reject(error);\n        })\n        .finally(() => {});\n    }\n\n    return Promise.reject(new ParameterError('Cannot stop share without whiteboard.'));\n  }\n\n  /**\n   * Sends a request to Locus to obtain the screen share floor\n   * @returns {Promise} see #meetingRequest.changeMeetingFloor\n   * @private\n   * @memberof Meeting\n   */\n  private requestScreenShareFloor() {\n    const content = this.locusInfo.mediaShares.find((element) => element.name === CONTENT);\n\n    if (content && this.shareStatus !== SHARE_STATUS.LOCAL_SHARE_ACTIVE) {\n      Metrics.postEvent({event: eventType.SHARE_INITIATED, meeting: this});\n\n      return this.meetingRequest\n        .changeMeetingFloor({\n          disposition: FLOOR_ACTION.GRANTED,\n          personUrl: this.locusInfo.self.url,\n          deviceUrl: this.deviceUrl,\n          uri: content.url,\n          resourceUrl: this.resourceUrl,\n        })\n        .then(() => {\n          this.isSharing = true;\n\n          return Promise.resolve();\n        })\n        .catch((error) => {\n          LoggerProxy.logger.error('Meeting:index#share --> Error ', error);\n\n          Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.MEETING_SHARE_FAILURE, {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack,\n          });\n\n          return Promise.reject(error);\n        });\n    }\n\n    return Promise.reject(new ParameterError('Cannot share without content.'));\n  }\n\n  /**\n   * Stops the screen share\n   * @returns {Promise} see #updateShare\n   * @public\n   * @memberof Meeting\n   */\n  // Internal only, temporarily allows optional params\n  // eslint-disable-next-line valid-jsdoc\n  public stopShare(options = {}) {\n    return this.updateShare({\n      sendShare: false,\n      receiveShare: this.mediaProperties.mediaDirection.receiveShare,\n      ...options,\n    });\n  }\n\n  /**\n   * Sends a request to Locus to release the screen share floor.\n   * @returns {Promise} see #meetingRequest.changeMeetingFloor\n   * @private\n   * @memberof Meeting\n   */\n  private releaseScreenShareFloor() {\n    const content = this.locusInfo.mediaShares.find((element) => element.name === CONTENT);\n\n    if (content && this.mediaProperties.mediaDirection.sendShare) {\n      Metrics.postEvent({event: eventType.SHARE_STOPPED, meeting: this});\n      Media.stopTracks(this.mediaProperties.shareTrack);\n\n      if (content.floor.beneficiary.id !== this.selfId) {\n        // remote participant started sharing and caused our sharing to stop, we don't want to send any floor action request in that case\n        this.isSharing = false;\n\n        return Promise.resolve();\n      }\n\n      return this.meetingRequest\n        .changeMeetingFloor({\n          disposition: FLOOR_ACTION.RELEASED,\n          personUrl: this.locusInfo.self.url,\n          deviceUrl: this.deviceUrl,\n          uri: content.url,\n          resourceUrl: this.resourceUrl,\n        })\n        .catch((error) => {\n          LoggerProxy.logger.error('Meeting:index#releaseScreenShareFloor --> Error ', error);\n\n          Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.STOP_FLOOR_REQUEST_FAILURE, {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack,\n          });\n\n          return Promise.reject(error);\n        })\n        .finally(() => {\n          this.isSharing = false;\n        });\n    }\n\n    return Promise.reject(new ParameterError('Cannot stop share without content'));\n  }\n\n  /**\n   * Intiate a recording of this meeting\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  public startRecording() {\n    return this.recordingController.startRecording();\n  }\n\n  /**\n   * set the mute on entry flag for participants if you're the host\n   * @returns {Promise}\n   * @param {boolean} enabled\n   * @public\n   * @memberof Meeting\n   */\n  public setMuteOnEntry(enabled: boolean) {\n    return this.controlsOptionsManager.setMuteOnEntry(enabled);\n  }\n\n  /**\n   * set the disallow unmute flag for participants if you're the host\n   * @returns {Promise}\n   * @param {boolean} enabled\n   * @public\n   * @memberof Meeting\n   */\n  public setDisallowUnmute(enabled: boolean) {\n    return this.controlsOptionsManager.setDisallowUnmute(enabled);\n  }\n\n  /**\n   * End the recording of this meeting\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  public stopRecording() {\n    return this.recordingController.stopRecording();\n  }\n\n  /**\n   * Pauses the recording of this meeting\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  public pauseRecording() {\n    return this.recordingController.pauseRecording();\n  }\n\n  /**\n   * Resumes the recording of this meeting\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  public resumeRecording() {\n    return this.recordingController.resumeRecording();\n  }\n\n  /**\n   * Locks the current meeting if possible\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  public lockMeeting() {\n    return MeetingUtil.lockMeeting(this.inMeetingActions, this.meetingRequest, this.locusUrl);\n  }\n\n  /**\n   * Unlocks the current meeting if possible\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  public unlockMeeting() {\n    return MeetingUtil.unlockMeeting(this.inMeetingActions, this.meetingRequest, this.locusUrl);\n  }\n\n  /**\n   * Logs an error message and returns a rejected promise with same message\n   * @param {String} message\n   * @returns {Promise}\n   * @private\n   * @memberof Meeting\n   */\n  private rejectWithErrorLog(message: string) {\n    LoggerProxy.logger.error(message);\n\n    return Promise.reject(new Error(message));\n  }\n\n  /**\n   * Sends DTMF tones to the current meeting\n   * @param {String} tones a string of one or more DTMF tones to send\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  public sendDTMF(tones: string) {\n    if (this.locusInfo && this.locusInfo.self) {\n      if (this.locusInfo.self.enableDTMF) {\n        return this.meetingRequest.sendDTMF({\n          locusUrl: this.locusInfo.self.url,\n          deviceUrl: this.deviceUrl,\n          tones,\n        });\n      }\n\n      return this.rejectWithErrorLog(\n        'Meeting:index#sendDTMF --> cannot send DTMF, meeting does not have DTMF enabled'\n      );\n    }\n\n    return this.rejectWithErrorLog(\n      'Meeting:index#sendDTMF --> cannot send DTMF, meeting does not have a connection to the \"locus\" call control service. Have you joined?'\n    );\n  }\n\n  /**\n   * Sends request to change layout type for the current meeting for the specific participant/device only\n   * @param {String} [layoutType] a layout type that should be available in meeting constants {@link #layout_types}\n   * @param {Object} renderInfo preferred dimensions for the remote main and content streams (server can ignore it)\n   * @param {Object} renderInfo.main preferred dimensions for the remote main video stream\n   * @param {Number} renderInfo.main.width preferred width of main video stream\n   * @param {Number} renderInfo.main.height preferred height of main video stream\n   * @param {Object} renderInfo.content preferred dimensions for the remote content share stream\n   * @param {Number} renderInfo.content.width preferred width of content share stream\n   * @param {Number} renderInfo.content.height preferred height of content share stream\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  public changeVideoLayout(\n    layoutType?: string,\n    renderInfo: {\n      main: {\n        width: number;\n        height: number;\n      };\n      content: {\n        width: number;\n        height: number;\n      };\n    } = {} as any\n  ) {\n    const {main, content} = renderInfo;\n    const {mediaDirection, remoteShare, remoteVideoTrack} = this.mediaProperties;\n\n    const layoutInfo = cloneDeep(this.lastVideoLayoutInfo);\n\n    // TODO: We need a real time value for Audio, Video and Share send indicator\n    if (mediaDirection.receiveVideo !== true || !remoteVideoTrack) {\n      return this.rejectWithErrorLog(\n        'Meeting:index#changeVideoLayout --> cannot change video layout, you are not recieving any video/share stream'\n      );\n    }\n\n    if (layoutType) {\n      if (!LAYOUT_TYPES.includes(layoutType)) {\n        return this.rejectWithErrorLog(\n          'Meeting:index#changeVideoLayout --> cannot change video layout, invalid layoutType recieved.'\n        );\n      }\n\n      layoutInfo.layoutType = layoutType;\n    }\n\n    if (main) {\n      const mainWidth = Math.round(main.width);\n      const mainHeight = Math.round(main.height);\n\n      // Stop any \"twitching\" caused by very slight size changes\n      if (\n        !this.lastVideoLayoutInfo.main ||\n        Math.abs(this.lastVideoLayoutInfo.main.height - mainHeight) > 2 ||\n        Math.abs(this.lastVideoLayoutInfo.main.width - mainWidth) > 2\n      ) {\n        layoutInfo.main = {width: mainWidth, height: mainHeight};\n      }\n    }\n\n    if (content) {\n      if (this.mediaProperties.mediaDirection.receiveShare && remoteShare) {\n        const contentWidth = Math.round(content.width);\n        const contentHeight = Math.round(content.height);\n\n        // Stop any \"twitching\" caused by very slight size changes\n        if (\n          !this.lastVideoLayoutInfo.content ||\n          Math.abs(this.lastVideoLayoutInfo.content.height - contentHeight) > 2 ||\n          Math.abs(this.lastVideoLayoutInfo.content.width - contentWidth) > 2\n        ) {\n          layoutInfo.content = {width: contentWidth, height: contentHeight};\n        }\n      } else {\n        return this.rejectWithErrorLog(\n          'Meeting:index#changeVideoLayout --> unable to send renderInfo for content, you are not receiving remote share'\n        );\n      }\n    }\n\n    if (isEqual(layoutInfo, this.lastVideoLayoutInfo)) {\n      // nothing changed, no need to send any request\n      return Promise.resolve();\n    }\n    this.lastVideoLayoutInfo = cloneDeep(layoutInfo);\n\n    this.locusInfo.once(LOCUSINFO.EVENTS.CONTROLS_MEETING_LAYOUT_UPDATED, (envelope) => {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'changeVideoLayout',\n        },\n        EVENT_TRIGGERS.MEETING_CONTROLS_LAYOUT_UPDATE,\n        {\n          layout: envelope.layout,\n        }\n      );\n    });\n\n    return this.meetingRequest\n      .changeVideoLayoutDebounced({\n        locusUrl: this.locusInfo.self.url,\n        deviceUrl: this.deviceUrl,\n        layoutType,\n        main: layoutInfo.main,\n        content: layoutInfo.content,\n      })\n      .then((response) => {\n        if (response && response.body && response.body.locus) {\n          this.locusInfo.onFullLocus(response.body.locus);\n        }\n      })\n      .catch((error) => {\n        LoggerProxy.logger.error('Meeting:index#changeVideoLayout --> Error ', error);\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * Sets the quality of the local video stream\n   * @param {String} level {LOW|MEDIUM|HIGH}\n   * @returns {Promise<MediaStream>} localStream\n   */\n  setLocalVideoQuality(level: string) {\n    LoggerProxy.logger.log(`Meeting:index#setLocalVideoQuality --> Setting quality to ${level}`);\n\n    if (!VIDEO_RESOLUTIONS[level]) {\n      return this.rejectWithErrorLog(`Meeting:index#setLocalVideoQuality --> ${level} not defined`);\n    }\n\n    if (!this.mediaProperties.mediaDirection.sendVideo) {\n      return this.rejectWithErrorLog(\n        'Meeting:index#setLocalVideoQuality --> unable to change video quality, sendVideo is disabled'\n      );\n    }\n\n    // If level is already the same, don't do anything\n    if (level === this.mediaProperties.localQualityLevel) {\n      LoggerProxy.logger.warn(\n        `Meeting:index#setLocalQualityLevel --> Quality already set to ${level}`\n      );\n\n      return Promise.resolve();\n    }\n\n    // Set the quality level in properties\n    this.mediaProperties.setLocalQualityLevel(level);\n\n    const mediaDirection = {\n      sendAudio: this.mediaProperties.mediaDirection.sendAudio,\n      sendVideo: this.mediaProperties.mediaDirection.sendVideo,\n      sendShare: this.mediaProperties.mediaDirection.sendShare,\n    };\n\n    // When changing local video quality level\n    // Need to stop current track first as chrome doesn't support resolution upscaling(for eg. changing 480p to 720p)\n    // Without feeding it a new track\n    // open bug link: https://bugs.chromium.org/p/chromium/issues/detail?id=943469\n    if (isBrowser('chrome') && this.mediaProperties.videoTrack)\n      Media.stopTracks(this.mediaProperties.videoTrack);\n\n    return this.getMediaStreams(mediaDirection, VIDEO_RESOLUTIONS[level]).then(\n      async ([localStream]) => {\n        await this.updateVideo({\n          sendVideo: true,\n          receiveVideo: true,\n          stream: localStream,\n        });\n\n        return localStream;\n      }\n    );\n  }\n\n  /**\n   * Sets the quality level of the remote incoming media\n   * @param {String} level {LOW|MEDIUM|HIGH}\n   * @returns {Promise}\n   */\n  setRemoteQualityLevel(level: string) {\n    LoggerProxy.logger.log(`Meeting:index#setRemoteQualityLevel --> Setting quality to ${level}`);\n\n    if (!QUALITY_LEVELS[level]) {\n      return this.rejectWithErrorLog(\n        `Meeting:index#setRemoteQualityLevel --> ${level} not defined`\n      );\n    }\n\n    if (\n      !this.mediaProperties.mediaDirection.receiveAudio &&\n      !this.mediaProperties.mediaDirection.receiveVideo\n    ) {\n      return this.rejectWithErrorLog(\n        'Meeting:index#setRemoteQualityLevel --> unable to change remote quality, receiveVideo and receiveAudio is disabled'\n      );\n    }\n\n    // If level is already the same, don't do anything\n    if (level === this.mediaProperties.remoteQualityLevel) {\n      LoggerProxy.logger.warn(\n        `Meeting:index#setRemoteQualityLevel --> Quality already set to ${level}`\n      );\n\n      return Promise.resolve();\n    }\n\n    // Set the quality level in properties\n    this.mediaProperties.setRemoteQualityLevel(level);\n\n    return this.updateMedia({mediaSettings: this.mediaProperties.mediaDirection});\n  }\n\n  /**\n   * This is deprecated, please use setLocalVideoQuality for setting local and setRemoteQualityLevel for remote\n   * @param {String} level {LOW|MEDIUM|HIGH}\n   * @returns {Promise}\n   * @deprecated After FHD support\n   */\n  setMeetingQuality(level: string) {\n    LoggerProxy.logger.log(`Meeting:index#setMeetingQuality --> Setting quality to ${level}`);\n\n    if (!QUALITY_LEVELS[level]) {\n      return this.rejectWithErrorLog(`Meeting:index#setMeetingQuality --> ${level} not defined`);\n    }\n\n    const previousLevel = {\n      local: this.mediaProperties.localQualityLevel,\n      remote: this.mediaProperties.remoteQualityLevel,\n    };\n\n    // If level is already the same, don't do anything\n    if (\n      level === this.mediaProperties.localQualityLevel &&\n      level === this.mediaProperties.remoteQualityLevel\n    ) {\n      LoggerProxy.logger.warn(\n        `Meeting:index#setMeetingQuality --> Quality already set to ${level}`\n      );\n\n      return Promise.resolve();\n    }\n\n    // Determine the direction of our current media\n    const {receiveAudio, receiveVideo, sendVideo} = this.mediaProperties.mediaDirection;\n\n    return (sendVideo ? this.setLocalVideoQuality(level) : Promise.resolve())\n      .then(() =>\n        receiveAudio || receiveVideo ? this.setRemoteQualityLevel(level) : Promise.resolve()\n      )\n      .catch((error) => {\n        // From troubleshooting it seems that the stream itself doesn't change the max-fs if the peer connection isn't stable\n        this.mediaProperties.setLocalQualityLevel(previousLevel.local);\n        this.mediaProperties.setRemoteQualityLevel(previousLevel.remote);\n\n        LoggerProxy.logger.error(`Meeting:index#setMeetingQuality --> ${error.message}`);\n\n        Metrics.sendBehavioralMetric(\n          BEHAVIORAL_METRICS.SET_MEETING_QUALITY_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack,\n          },\n          {\n            type: error.name,\n          }\n        );\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * @param {Object} options parameter\n   * @param {Boolean} options.sendAudio send audio from the display share\n   * @param {Boolean} options.sendShare send video from the display share\n   * @param {Object} options.sharePreferences\n   * @param {MediaTrackConstraints} options.sharePreferences.shareConstraints constraints to apply to video\n   *   @see {@link https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints}\n   * @param {Boolean} options.sharePreferences.highFrameRate if shareConstraints isn't provided, set default values based off of this boolean\n   * @returns {Promise}\n   */\n  shareScreen(\n    options: {\n      sendAudio: boolean;\n      sendShare: boolean;\n      sharePreferences: {shareConstraints: MediaTrackConstraints};\n    } = {} as any\n  ) {\n    LoggerProxy.logger.log('Meeting:index#shareScreen --> Getting local share');\n\n    const shareConstraints = {\n      sendShare: true,\n      sendAudio: false,\n      ...options,\n    };\n\n    // @ts-ignore - config coming from registerPlugin\n    return Media.getDisplayMedia(shareConstraints, this.config)\n      .then((shareStream) =>\n        this.updateShare({\n          sendShare: true,\n          receiveShare: this.mediaProperties.mediaDirection.receiveShare,\n          stream: shareStream,\n        })\n      )\n      .catch((error) => {\n        // Whenever there is a failure when trying to access a user's display\n        // report it as an Behavioral metric\n        // This gives visibility into common errors and can help\n        // with further troubleshooting\n\n        // This metrics will get erros for getDisplayMedia and share errors for now\n        // TODO: The getDisplayMedia errors need to be moved inside `media.getDisplayMedia`\n        const metricName = BEHAVIORAL_METRICS.GET_DISPLAY_MEDIA_FAILURE;\n        const data = {\n          correlation_id: this.correlationId,\n          locus_id: this.locusUrl.split('/').pop(),\n          reason: error.message,\n          stack: error.stack,\n        };\n        const metadata = {\n          type: error.name,\n        };\n\n        Metrics.sendBehavioralMetric(metricName, data, metadata);\n        throw new MediaError('Unable to retrieve display media stream', error);\n      });\n  }\n\n  /**\n   * Functionality for when a share is ended.\n   * @private\n   * @memberof Meeting\n   * @param {MediaStream} localShare\n   * @returns {undefined}\n   */\n  private handleShareTrackEnded(localShare: MediaStream) {\n    if (this.wirelessShare) {\n      this.leave({reason: MEETING_REMOVED_REASON.USER_ENDED_SHARE_STREAMS});\n    } else {\n      // Skip checking for a stable peerConnection\n      // to allow immediately stopping screenshare\n      this.stopShare({\n        skipSignalingCheck: true,\n      }).catch((error) => {\n        LoggerProxy.logger.log(\n          'Meeting:index#handleShareTrackEnded --> Error stopping share: ',\n          error\n        );\n      });\n    }\n\n    Trigger.trigger(\n      this,\n      {\n        file: 'meeting/index',\n        function: 'handleShareTrackEnded',\n      },\n      EVENT_TRIGGERS.MEETING_STOPPED_SHARING_LOCAL,\n      {\n        type: EVENT_TYPES.LOCAL_SHARE,\n        stream: localShare,\n      }\n    );\n  }\n\n  /**\n   * Emits the 'network:quality' event\n   * 1 indicates an acceptable uplink network.\n   * 0 indicates an unacceptable uplink network based on a predefined threshold\n   * @returns {undefined}\n   * @param {Object} res - payload of emitNetworkQuality\n   * @property {string} mediaType {video|audio}\n   * @property {number} networkQualityScore - {1|0}\n   * @private\n   * @memberof Meeting\n   */\n  private sendNetworkQualityEvent(res: any) {\n    Trigger.trigger(\n      this,\n      {\n        file: 'meeting/index',\n        function: 'addMedia',\n      },\n      EVENT_TRIGGERS.NETWORK_QUALITY,\n      {\n        networkQualityScore: res.networkQualityScore,\n        mediaType: res.mediaType,\n      }\n    );\n  }\n\n  /**\n   * Handle logging the media\n   * @param {Object} audioTrack The audio track\n   * @param {Object} videoTrack The video track\n   * @private\n   * @returns {undefined}\n   */\n  private handleMediaLogging({audioTrack, videoTrack}: any) {\n    MeetingUtil.handleVideoLogging(videoTrack);\n    MeetingUtil.handleAudioLogging(audioTrack);\n  }\n\n  /**\n   * @param {string} typeMedia 'audio' or 'video'\n   * @returns {undefined}\n   */\n  setStartSetupDelay(typeMedia: string) {\n    this[`startSetupDelay${typeMedia}`] = performance.now();\n    this[`endSetupDelay${typeMedia}`] = undefined;\n  }\n\n  /**\n   * @param {string} typeMedia 'audio' or 'video'\n   * @returns {undefined}\n   */\n  setEndSetupDelay(typeMedia: string) {\n    this[`endSetupDelay${typeMedia}`] = performance.now();\n  }\n\n  /**\n   * @param {string} typeMedia 'audio' or 'video'\n   * @returns {string} duration between start and end of setup\n   */\n  getSetupDelayDuration(typeMedia: string) {\n    const start = this[`startSetupDelay${typeMedia}`];\n    const end = this[`endSetupDelay${typeMedia}`];\n\n    return start && end ? end - start : undefined;\n  }\n\n  /**\n   * @param {string} typeMedia 'audio' or 'video'\n   * @returns {undefined}\n   */\n  setStartSendingMediaDelay(typeMedia: string) {\n    this[`startSendingMediaDelay${typeMedia}`] = performance.now();\n    this[`endSendingMediaDelay${typeMedia}`] = undefined;\n  }\n\n  /**\n   * @param {string} typeMedia 'audio' or 'video'\n   * @returns {undefined}\n   */\n  setEndSendingMediaDelay(typeMedia: string) {\n    this[`endSendingMediaDelay${typeMedia}`] = performance.now();\n  }\n\n  /**\n   * @param {string} typeMedia 'audio' or 'video'\n   * @returns {string} duration between join response and first media tx\n   */\n  getSendingMediaDelayDuration(typeMedia: string) {\n    const start = this[`startSendingMediaDelay${typeMedia}`];\n    const end = this[`endSendingMediaDelay${typeMedia}`];\n\n    return start && end ? end - start : undefined;\n  }\n\n  /**\n   *\n   * @returns {undefined}\n   */\n  setStartLocalSDPGenRemoteSDPRecvDelay() {\n    if (!this.startLocalSDPGenRemoteSDPRecvDelay) {\n      this.startLocalSDPGenRemoteSDPRecvDelay = performance.now();\n      this.endLocalSDPGenRemoteSDPRecvDelay = undefined;\n    }\n  }\n\n  /**\n   *\n   * @returns {undefined}\n   */\n  setEndLocalSDPGenRemoteSDPRecvDelay() {\n    if (!this.endLocalSDPGenRemoteSDPRecvDelay) {\n      this.endLocalSDPGenRemoteSDPRecvDelay = performance.now();\n    }\n  }\n\n  /**\n   *\n   * @returns {string} duration between local SDP generation and remote SDP reception\n   */\n  getLocalSDPGenRemoteSDPRecvDelay() {\n    const start = this.startLocalSDPGenRemoteSDPRecvDelay;\n    const end = this.endLocalSDPGenRemoteSDPRecvDelay;\n\n    if (start && end) {\n      const calculatedDelay = end - start;\n\n      return calculatedDelay > METRICS_JOIN_TIMES_MAX_DURATION ? undefined : calculatedDelay;\n    }\n\n    return undefined;\n  }\n\n  /**\n   *\n   * @returns {undefined}\n   */\n  setStartCallInitiateJoinReq() {\n    this.startCallInitiateJoinReq = performance.now();\n    this.endCallInitiateJoinReq = undefined;\n  }\n\n  /**\n   *\n   * @returns {undefined}\n   */\n  setEndCallInitiateJoinReq() {\n    this.endCallInitiateJoinReq = performance.now();\n  }\n\n  /**\n   *\n   * @returns {string} duration between call initiate and sending join request to locus\n   */\n  getCallInitiateJoinReq() {\n    const start = this.startCallInitiateJoinReq;\n    const end = this.endCallInitiateJoinReq;\n\n    if (start && end) {\n      const calculatedDelay = end - start;\n\n      return calculatedDelay > METRICS_JOIN_TIMES_MAX_DURATION ? undefined : calculatedDelay;\n    }\n\n    return undefined;\n  }\n\n  /**\n   *\n   * @returns {undefined}\n   */\n  setStartJoinReqResp() {\n    this.startJoinReqResp = performance.now();\n    this.endJoinReqResp = undefined;\n  }\n\n  /**\n   *\n   * @returns {undefined}\n   */\n  setEndJoinReqResp() {\n    this.endJoinReqResp = performance.now();\n  }\n\n  /**\n   *\n   * @returns {string} duration between sending locus join request and receiving join response\n   */\n  getJoinReqResp() {\n    const start = this.startJoinReqResp;\n    const end = this.endJoinReqResp;\n\n    if (start && end) {\n      const calculatedDelay = end - start;\n\n      return calculatedDelay > METRICS_JOIN_TIMES_MAX_DURATION ? undefined : calculatedDelay;\n    }\n\n    return undefined;\n  }\n\n  /**\n   *\n   * @returns {string} duration between call initiate and successful locus join (even if it is in lobby)\n   */\n  getTotalJmt() {\n    const start = this.startCallInitiateJoinReq;\n    const end = this.endJoinReqResp;\n\n    return start && end ? end - start : undefined;\n  }\n\n  /**\n   * End the current meeting for all\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  public endMeetingForAll() {\n    Metrics.postEvent({\n      event: eventType.LEAVE,\n      meeting: this,\n      data: {trigger: trigger.USER_INTERACTION, canProceed: false},\n    });\n\n    LoggerProxy.logger.log('Meeting:index#endMeetingForAll --> End meeting for All');\n    Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.MEETING_END_ALL_INITIATED, {\n      correlation_id: this.correlationId,\n      locus_id: this.locusId,\n    });\n\n    return MeetingUtil.endMeetingForAll(this)\n      .then((end) => {\n        this.meetingFiniteStateMachine.end();\n\n        this.clearMeetingData();\n        // upload logs on leave irrespective of meeting delete\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'endMeetingForAll',\n          },\n          EVENTS.REQUEST_UPLOAD_LOGS,\n          this\n        );\n\n        return end;\n      })\n      .catch((error) => {\n        this.meetingFiniteStateMachine.fail(error);\n        LoggerProxy.logger.error(\n          'Meeting:index#endMeetingForAll --> Failed to end meeting ',\n          error\n        );\n        // upload logs on leave irrespective of meeting delete\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'endMeetingForAll',\n          },\n          EVENTS.REQUEST_UPLOAD_LOGS,\n          this\n        );\n        Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.MEETING_END_ALL_FAILURE, {\n          correlation_id: this.correlationId,\n          locus_id: this.locusUrl.split('/').pop(),\n          reason: error.message,\n          stack: error.stack,\n          code: error.code,\n        });\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * clear the meeting data\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  clearMeetingData = () => {\n    this.audio = null;\n    this.video = null;\n    this.isSharing = false;\n    if (this.shareStatus === SHARE_STATUS.LOCAL_SHARE_ACTIVE) {\n      this.shareStatus = SHARE_STATUS.NO_SHARE;\n    }\n    this.queuedMediaUpdates = [];\n\n    if (this.transcription) {\n      this.transcription.closeSocket();\n      this.triggerStopReceivingTranscriptionEvent();\n      this.transcription = undefined;\n    }\n  };\n\n  /**\n   * Internal API to return status of BNR\n   * @returns {Boolean}\n   * @public\n   * @memberof Meeting\n   */\n  public isBnrEnabled() {\n    return this.effects && this.effects.isBnrEnabled();\n  }\n\n  /**\n   * Internal API to obtain BNR enabled MediaStream\n   * @returns {Promise<MediaStreamTrack>}\n   * @private\n   * @param {MedaiStreamTrack} audioTrack from updateAudio\n   * @memberof Meeting\n   */\n  private async internal_enableBNR(audioTrack: any) {\n    try {\n      LoggerProxy.logger.info('Meeting:index#internal_enableBNR. Internal enable BNR called');\n      const bnrAudioTrack = await WebRTCMedia.Effects.BNR.enableBNR(audioTrack);\n\n      LoggerProxy.logger.info(\n        'Meeting:index#internal_enableBNR. BNR enabled track obtained from WebRTC & returned as stream'\n      );\n\n      return bnrAudioTrack;\n    } catch (error) {\n      LoggerProxy.logger.error('Meeting:index#internal_enableBNR.', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Enable the audio track with BNR for a meeting\n   * @returns {Promise} resolves the data from enable bnr or rejects if there is no audio or audio is muted\n   * @public\n   * @memberof Meeting\n   */\n  public enableBNR() {\n    if (\n      typeof this.mediaProperties === 'undefined' ||\n      typeof this.mediaProperties.audioTrack === 'undefined'\n    ) {\n      return Promise.reject(new Error(\"Meeting doesn't have an audioTrack attached\"));\n    }\n\n    if (this.isAudioMuted()) {\n      return Promise.reject(new Error('Cannot enable BNR while meeting is muted'));\n    }\n\n    this.effects = this.effects || createEffectsState('BNR');\n\n    const LOG_HEADER = 'Meeting:index#enableBNR -->';\n\n    return logRequest(\n      this.effects\n        .handleClientRequest(true, this)\n        .then((res) => {\n          LoggerProxy.logger.info('Meeting:index#enableBNR. Enable bnr completed');\n\n          return res;\n        })\n        .catch((error) => {\n          throw error;\n        }),\n      {\n        header: `${LOG_HEADER} enable bnr`,\n        success: `${LOG_HEADER} enable bnr success`,\n        failure: `${LOG_HEADER} enable bnr failure, `,\n      }\n    );\n  }\n\n  /**\n   * Disable the BNR for an audio track\n   * @returns {Promise} resolves the data from disable bnr or rejects if there is no audio set\n   * @public\n   * @memberof Meeting\n   */\n  public disableBNR() {\n    if (\n      typeof this.mediaProperties === 'undefined' ||\n      typeof this.mediaProperties.audioTrack === 'undefined'\n    ) {\n      return Promise.reject(new Error(\"Meeting doesn't have an audioTrack attached\"));\n    }\n\n    if (!this.isBnrEnabled()) {\n      return Promise.reject(new Error('Can not disable as BNR is not enabled'));\n    }\n\n    this.effects = this.effects || createEffectsState('BNR');\n\n    const LOG_HEADER = 'Meeting:index#disableBNR -->';\n\n    return logRequest(\n      this.effects\n        .handleClientRequest(false, this)\n        .then((res) => {\n          LoggerProxy.logger.info('Meeting:index#disableBNR. Disable bnr completed');\n\n          return res;\n        })\n        .catch((error) => {\n          throw error;\n        }),\n      {\n        header: `${LOG_HEADER} disable bnr`,\n        success: `${LOG_HEADER} disable bnr success`,\n        failure: `${LOG_HEADER} disable bnr failure, `,\n      }\n    );\n  }\n\n  /**\n   * starts keepAlives being sent\n   * @returns {void}\n   * @private\n   * @memberof Meeting\n   */\n  startKeepAlive = () => {\n    if (this.keepAliveTimerId) {\n      LoggerProxy.logger.warn(\n        'Meeting:index#startKeepAlive --> keepAlive not started: keepAliveTimerId already exists'\n      );\n\n      return;\n    }\n    if (!this.joinedWith?.keepAliveUrl) {\n      LoggerProxy.logger.warn(\n        'Meeting:index#startKeepAlive --> keepAlive not started: no keepAliveUrl'\n      );\n\n      return;\n    }\n    if (!this.joinedWith?.keepAliveSecs) {\n      LoggerProxy.logger.warn(\n        'Meeting:index#startKeepAlive --> keepAlive not started: no keepAliveSecs'\n      );\n\n      return;\n    }\n    if (this.joinedWith.keepAliveSecs <= 1) {\n      LoggerProxy.logger.warn(\n        'Meeting:index#startKeepAlive --> keepAlive not started: keepAliveSecs <= 1'\n      );\n\n      return;\n    }\n    const {keepAliveUrl} = this.joinedWith;\n    const keepAliveInterval = (this.joinedWith.keepAliveSecs - 1) * 750; // taken from UCF\n\n    this.keepAliveTimerId = setInterval(() => {\n      this.meetingRequest.keepAlive({keepAliveUrl}).catch((error) => {\n        LoggerProxy.logger.warn(\n          `Meeting:index#startKeepAlive --> Stopping sending keepAlives to ${keepAliveUrl} after error ${error}`\n        );\n        this.stopKeepAlive();\n      });\n    }, keepAliveInterval);\n  };\n\n  /**\n   * stops keepAlives being sent\n   * @returns {void}\n   * @private\n   * @memberof Meeting\n   */\n  stopKeepAlive = () => {\n    if (!this.keepAliveTimerId) {\n      return;\n    }\n    clearInterval(this.keepAliveTimerId);\n    this.keepAliveTimerId = null;\n  };\n\n  /**\n   * Send a reaction inside the meeting.\n   *\n   * @param {ReactionType} reactionType - type of reaction to be sent. Example: \"thumbs_up\"\n   * @param {SkinToneType} skinToneType - skin tone for the reaction. Example: \"medium_dark\"\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  public sendReaction(reactionType: ReactionType, skinToneType?: SkinToneType) {\n    const reactionChannelUrl = this.locusInfo?.controls?.reactions?.reactionChannelUrl as string;\n    const participantId = this.members.selfId;\n\n    const reactionData = Reactions[reactionType];\n\n    if (!reactionData) {\n      return Promise.reject(new Error(`${reactionType} is not a valid reaction.`));\n    }\n    const skinToneData = SkinTones[skinToneType] || SkinTones.normal;\n    const reaction: Reaction = {\n      ...reactionData,\n      tone: skinToneData,\n    };\n\n    if (reactionChannelUrl) {\n      return this.meetingRequest.sendReaction({reactionChannelUrl, reaction, participantId});\n    }\n\n    return Promise.reject(new Error('Error sending reaction, service url not found.'));\n  }\n}\n"],"mappings":"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;AACT,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAC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"}